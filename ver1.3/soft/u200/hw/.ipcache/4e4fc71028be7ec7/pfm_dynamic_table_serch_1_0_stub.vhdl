-- Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
-- --------------------------------------------------------------------------------
-- Tool Version: Vivado v.2020.2 (lin64) Build 3064766 Wed Nov 18 09:12:47 MST 2020
-- Date        : Sun Apr 17 14:45:39 2022
-- Host        : alveo20 running 64-bit Ubuntu 18.04.6 LTS
-- Command     : write_vhdl -force -mode synth_stub -rename_top decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix -prefix
--               decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_ pfm_dynamic_table_serch_1_0_stub.vhdl
-- Design      : pfm_dynamic_table_serch_1_0
-- Purpose     : Stub declaration of top-level module interface
-- Device      : xcu200-fsgd2104-2-e
-- --------------------------------------------------------------------------------
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;

entity decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix is
  Port ( 
    stall_start_ext : out STD_LOGIC;
    stall_done_ext : out STD_LOGIC;
    stall_start_str : out STD_LOGIC;
    stall_done_str : out STD_LOGIC;
    stall_start_int : out STD_LOGIC;
    stall_done_int : out STD_LOGIC;
    s_axi_control_AWADDR : in STD_LOGIC_VECTOR ( 6 downto 0 );
    s_axi_control_AWVALID : in STD_LOGIC;
    s_axi_control_AWREADY : out STD_LOGIC;
    s_axi_control_WDATA : in STD_LOGIC_VECTOR ( 31 downto 0 );
    s_axi_control_WSTRB : in STD_LOGIC_VECTOR ( 3 downto 0 );
    s_axi_control_WVALID : in STD_LOGIC;
    s_axi_control_WREADY : out STD_LOGIC;
    s_axi_control_BRESP : out STD_LOGIC_VECTOR ( 1 downto 0 );
    s_axi_control_BVALID : out STD_LOGIC;
    s_axi_control_BREADY : in STD_LOGIC;
    s_axi_control_ARADDR : in STD_LOGIC_VECTOR ( 6 downto 0 );
    s_axi_control_ARVALID : in STD_LOGIC;
    s_axi_control_ARREADY : out STD_LOGIC;
    s_axi_control_RDATA : out STD_LOGIC_VECTOR ( 31 downto 0 );
    s_axi_control_RRESP : out STD_LOGIC_VECTOR ( 1 downto 0 );
    s_axi_control_RVALID : out STD_LOGIC;
    s_axi_control_RREADY : in STD_LOGIC;
    ap_clk : in STD_LOGIC;
    ap_rst_n : in STD_LOGIC;
    event_done : out STD_LOGIC;
    interrupt : out STD_LOGIC;
    event_start : out STD_LOGIC;
    m_axi_plram0_AWADDR : out STD_LOGIC_VECTOR ( 63 downto 0 );
    m_axi_plram0_AWLEN : out STD_LOGIC_VECTOR ( 7 downto 0 );
    m_axi_plram0_AWSIZE : out STD_LOGIC_VECTOR ( 2 downto 0 );
    m_axi_plram0_AWBURST : out STD_LOGIC_VECTOR ( 1 downto 0 );
    m_axi_plram0_AWLOCK : out STD_LOGIC_VECTOR ( 1 downto 0 );
    m_axi_plram0_AWREGION : out STD_LOGIC_VECTOR ( 3 downto 0 );
    m_axi_plram0_AWCACHE : out STD_LOGIC_VECTOR ( 3 downto 0 );
    m_axi_plram0_AWPROT : out STD_LOGIC_VECTOR ( 2 downto 0 );
    m_axi_plram0_AWQOS : out STD_LOGIC_VECTOR ( 3 downto 0 );
    m_axi_plram0_AWVALID : out STD_LOGIC;
    m_axi_plram0_AWREADY : in STD_LOGIC;
    m_axi_plram0_WDATA : out STD_LOGIC_VECTOR ( 511 downto 0 );
    m_axi_plram0_WSTRB : out STD_LOGIC_VECTOR ( 63 downto 0 );
    m_axi_plram0_WLAST : out STD_LOGIC;
    m_axi_plram0_WVALID : out STD_LOGIC;
    m_axi_plram0_WREADY : in STD_LOGIC;
    m_axi_plram0_BRESP : in STD_LOGIC_VECTOR ( 1 downto 0 );
    m_axi_plram0_BVALID : in STD_LOGIC;
    m_axi_plram0_BREADY : out STD_LOGIC;
    m_axi_plram0_ARADDR : out STD_LOGIC_VECTOR ( 63 downto 0 );
    m_axi_plram0_ARLEN : out STD_LOGIC_VECTOR ( 7 downto 0 );
    m_axi_plram0_ARSIZE : out STD_LOGIC_VECTOR ( 2 downto 0 );
    m_axi_plram0_ARBURST : out STD_LOGIC_VECTOR ( 1 downto 0 );
    m_axi_plram0_ARLOCK : out STD_LOGIC_VECTOR ( 1 downto 0 );
    m_axi_plram0_ARREGION : out STD_LOGIC_VECTOR ( 3 downto 0 );
    m_axi_plram0_ARCACHE : out STD_LOGIC_VECTOR ( 3 downto 0 );
    m_axi_plram0_ARPROT : out STD_LOGIC_VECTOR ( 2 downto 0 );
    m_axi_plram0_ARQOS : out STD_LOGIC_VECTOR ( 3 downto 0 );
    m_axi_plram0_ARVALID : out STD_LOGIC;
    m_axi_plram0_ARREADY : in STD_LOGIC;
    m_axi_plram0_RDATA : in STD_LOGIC_VECTOR ( 511 downto 0 );
    m_axi_plram0_RRESP : in STD_LOGIC_VECTOR ( 1 downto 0 );
    m_axi_plram0_RLAST : in STD_LOGIC;
    m_axi_plram0_RVALID : in STD_LOGIC;
    m_axi_plram0_RREADY : out STD_LOGIC;
    m_axi_aximm0_AWADDR : out STD_LOGIC_VECTOR ( 63 downto 0 );
    m_axi_aximm0_AWLEN : out STD_LOGIC_VECTOR ( 7 downto 0 );
    m_axi_aximm0_AWSIZE : out STD_LOGIC_VECTOR ( 2 downto 0 );
    m_axi_aximm0_AWBURST : out STD_LOGIC_VECTOR ( 1 downto 0 );
    m_axi_aximm0_AWLOCK : out STD_LOGIC_VECTOR ( 1 downto 0 );
    m_axi_aximm0_AWREGION : out STD_LOGIC_VECTOR ( 3 downto 0 );
    m_axi_aximm0_AWCACHE : out STD_LOGIC_VECTOR ( 3 downto 0 );
    m_axi_aximm0_AWPROT : out STD_LOGIC_VECTOR ( 2 downto 0 );
    m_axi_aximm0_AWQOS : out STD_LOGIC_VECTOR ( 3 downto 0 );
    m_axi_aximm0_AWVALID : out STD_LOGIC;
    m_axi_aximm0_AWREADY : in STD_LOGIC;
    m_axi_aximm0_WDATA : out STD_LOGIC_VECTOR ( 511 downto 0 );
    m_axi_aximm0_WSTRB : out STD_LOGIC_VECTOR ( 63 downto 0 );
    m_axi_aximm0_WLAST : out STD_LOGIC;
    m_axi_aximm0_WVALID : out STD_LOGIC;
    m_axi_aximm0_WREADY : in STD_LOGIC;
    m_axi_aximm0_BRESP : in STD_LOGIC_VECTOR ( 1 downto 0 );
    m_axi_aximm0_BVALID : in STD_LOGIC;
    m_axi_aximm0_BREADY : out STD_LOGIC;
    m_axi_aximm0_ARADDR : out STD_LOGIC_VECTOR ( 63 downto 0 );
    m_axi_aximm0_ARLEN : out STD_LOGIC_VECTOR ( 7 downto 0 );
    m_axi_aximm0_ARSIZE : out STD_LOGIC_VECTOR ( 2 downto 0 );
    m_axi_aximm0_ARBURST : out STD_LOGIC_VECTOR ( 1 downto 0 );
    m_axi_aximm0_ARLOCK : out STD_LOGIC_VECTOR ( 1 downto 0 );
    m_axi_aximm0_ARREGION : out STD_LOGIC_VECTOR ( 3 downto 0 );
    m_axi_aximm0_ARCACHE : out STD_LOGIC_VECTOR ( 3 downto 0 );
    m_axi_aximm0_ARPROT : out STD_LOGIC_VECTOR ( 2 downto 0 );
    m_axi_aximm0_ARQOS : out STD_LOGIC_VECTOR ( 3 downto 0 );
    m_axi_aximm0_ARVALID : out STD_LOGIC;
    m_axi_aximm0_ARREADY : in STD_LOGIC;
    m_axi_aximm0_RDATA : in STD_LOGIC_VECTOR ( 511 downto 0 );
    m_axi_aximm0_RRESP : in STD_LOGIC_VECTOR ( 1 downto 0 );
    m_axi_aximm0_RLAST : in STD_LOGIC;
    m_axi_aximm0_RVALID : in STD_LOGIC;
    m_axi_aximm0_RREADY : out STD_LOGIC;
    m_axi_aximm1_AWADDR : out STD_LOGIC_VECTOR ( 63 downto 0 );
    m_axi_aximm1_AWLEN : out STD_LOGIC_VECTOR ( 7 downto 0 );
    m_axi_aximm1_AWSIZE : out STD_LOGIC_VECTOR ( 2 downto 0 );
    m_axi_aximm1_AWBURST : out STD_LOGIC_VECTOR ( 1 downto 0 );
    m_axi_aximm1_AWLOCK : out STD_LOGIC_VECTOR ( 1 downto 0 );
    m_axi_aximm1_AWREGION : out STD_LOGIC_VECTOR ( 3 downto 0 );
    m_axi_aximm1_AWCACHE : out STD_LOGIC_VECTOR ( 3 downto 0 );
    m_axi_aximm1_AWPROT : out STD_LOGIC_VECTOR ( 2 downto 0 );
    m_axi_aximm1_AWQOS : out STD_LOGIC_VECTOR ( 3 downto 0 );
    m_axi_aximm1_AWVALID : out STD_LOGIC;
    m_axi_aximm1_AWREADY : in STD_LOGIC;
    m_axi_aximm1_WDATA : out STD_LOGIC_VECTOR ( 31 downto 0 );
    m_axi_aximm1_WSTRB : out STD_LOGIC_VECTOR ( 3 downto 0 );
    m_axi_aximm1_WLAST : out STD_LOGIC;
    m_axi_aximm1_WVALID : out STD_LOGIC;
    m_axi_aximm1_WREADY : in STD_LOGIC;
    m_axi_aximm1_BRESP : in STD_LOGIC_VECTOR ( 1 downto 0 );
    m_axi_aximm1_BVALID : in STD_LOGIC;
    m_axi_aximm1_BREADY : out STD_LOGIC;
    m_axi_aximm1_ARADDR : out STD_LOGIC_VECTOR ( 63 downto 0 );
    m_axi_aximm1_ARLEN : out STD_LOGIC_VECTOR ( 7 downto 0 );
    m_axi_aximm1_ARSIZE : out STD_LOGIC_VECTOR ( 2 downto 0 );
    m_axi_aximm1_ARBURST : out STD_LOGIC_VECTOR ( 1 downto 0 );
    m_axi_aximm1_ARLOCK : out STD_LOGIC_VECTOR ( 1 downto 0 );
    m_axi_aximm1_ARREGION : out STD_LOGIC_VECTOR ( 3 downto 0 );
    m_axi_aximm1_ARCACHE : out STD_LOGIC_VECTOR ( 3 downto 0 );
    m_axi_aximm1_ARPROT : out STD_LOGIC_VECTOR ( 2 downto 0 );
    m_axi_aximm1_ARQOS : out STD_LOGIC_VECTOR ( 3 downto 0 );
    m_axi_aximm1_ARVALID : out STD_LOGIC;
    m_axi_aximm1_ARREADY : in STD_LOGIC;
    m_axi_aximm1_RDATA : in STD_LOGIC_VECTOR ( 31 downto 0 );
    m_axi_aximm1_RRESP : in STD_LOGIC_VECTOR ( 1 downto 0 );
    m_axi_aximm1_RLAST : in STD_LOGIC;
    m_axi_aximm1_RVALID : in STD_LOGIC;
    m_axi_aximm1_RREADY : out STD_LOGIC;
    m_axi_aximm2_AWADDR : out STD_LOGIC_VECTOR ( 63 downto 0 );
    m_axi_aximm2_AWLEN : out STD_LOGIC_VECTOR ( 7 downto 0 );
    m_axi_aximm2_AWSIZE : out STD_LOGIC_VECTOR ( 2 downto 0 );
    m_axi_aximm2_AWBURST : out STD_LOGIC_VECTOR ( 1 downto 0 );
    m_axi_aximm2_AWLOCK : out STD_LOGIC_VECTOR ( 1 downto 0 );
    m_axi_aximm2_AWREGION : out STD_LOGIC_VECTOR ( 3 downto 0 );
    m_axi_aximm2_AWCACHE : out STD_LOGIC_VECTOR ( 3 downto 0 );
    m_axi_aximm2_AWPROT : out STD_LOGIC_VECTOR ( 2 downto 0 );
    m_axi_aximm2_AWQOS : out STD_LOGIC_VECTOR ( 3 downto 0 );
    m_axi_aximm2_AWVALID : out STD_LOGIC;
    m_axi_aximm2_AWREADY : in STD_LOGIC;
    m_axi_aximm2_WDATA : out STD_LOGIC_VECTOR ( 31 downto 0 );
    m_axi_aximm2_WSTRB : out STD_LOGIC_VECTOR ( 3 downto 0 );
    m_axi_aximm2_WLAST : out STD_LOGIC;
    m_axi_aximm2_WVALID : out STD_LOGIC;
    m_axi_aximm2_WREADY : in STD_LOGIC;
    m_axi_aximm2_BRESP : in STD_LOGIC_VECTOR ( 1 downto 0 );
    m_axi_aximm2_BVALID : in STD_LOGIC;
    m_axi_aximm2_BREADY : out STD_LOGIC;
    m_axi_aximm2_ARADDR : out STD_LOGIC_VECTOR ( 63 downto 0 );
    m_axi_aximm2_ARLEN : out STD_LOGIC_VECTOR ( 7 downto 0 );
    m_axi_aximm2_ARSIZE : out STD_LOGIC_VECTOR ( 2 downto 0 );
    m_axi_aximm2_ARBURST : out STD_LOGIC_VECTOR ( 1 downto 0 );
    m_axi_aximm2_ARLOCK : out STD_LOGIC_VECTOR ( 1 downto 0 );
    m_axi_aximm2_ARREGION : out STD_LOGIC_VECTOR ( 3 downto 0 );
    m_axi_aximm2_ARCACHE : out STD_LOGIC_VECTOR ( 3 downto 0 );
    m_axi_aximm2_ARPROT : out STD_LOGIC_VECTOR ( 2 downto 0 );
    m_axi_aximm2_ARQOS : out STD_LOGIC_VECTOR ( 3 downto 0 );
    m_axi_aximm2_ARVALID : out STD_LOGIC;
    m_axi_aximm2_ARREADY : in STD_LOGIC;
    m_axi_aximm2_RDATA : in STD_LOGIC_VECTOR ( 31 downto 0 );
    m_axi_aximm2_RRESP : in STD_LOGIC_VECTOR ( 1 downto 0 );
    m_axi_aximm2_RLAST : in STD_LOGIC;
    m_axi_aximm2_RVALID : in STD_LOGIC;
    m_axi_aximm2_RREADY : out STD_LOGIC;
    m_axi_gmem_AWADDR : out STD_LOGIC_VECTOR ( 63 downto 0 );
    m_axi_gmem_AWLEN : out STD_LOGIC_VECTOR ( 7 downto 0 );
    m_axi_gmem_AWSIZE : out STD_LOGIC_VECTOR ( 2 downto 0 );
    m_axi_gmem_AWBURST : out STD_LOGIC_VECTOR ( 1 downto 0 );
    m_axi_gmem_AWLOCK : out STD_LOGIC_VECTOR ( 1 downto 0 );
    m_axi_gmem_AWREGION : out STD_LOGIC_VECTOR ( 3 downto 0 );
    m_axi_gmem_AWCACHE : out STD_LOGIC_VECTOR ( 3 downto 0 );
    m_axi_gmem_AWPROT : out STD_LOGIC_VECTOR ( 2 downto 0 );
    m_axi_gmem_AWQOS : out STD_LOGIC_VECTOR ( 3 downto 0 );
    m_axi_gmem_AWVALID : out STD_LOGIC;
    m_axi_gmem_AWREADY : in STD_LOGIC;
    m_axi_gmem_WDATA : out STD_LOGIC_VECTOR ( 31 downto 0 );
    m_axi_gmem_WSTRB : out STD_LOGIC_VECTOR ( 3 downto 0 );
    m_axi_gmem_WLAST : out STD_LOGIC;
    m_axi_gmem_WVALID : out STD_LOGIC;
    m_axi_gmem_WREADY : in STD_LOGIC;
    m_axi_gmem_BRESP : in STD_LOGIC_VECTOR ( 1 downto 0 );
    m_axi_gmem_BVALID : in STD_LOGIC;
    m_axi_gmem_BREADY : out STD_LOGIC;
    m_axi_gmem_ARADDR : out STD_LOGIC_VECTOR ( 63 downto 0 );
    m_axi_gmem_ARLEN : out STD_LOGIC_VECTOR ( 7 downto 0 );
    m_axi_gmem_ARSIZE : out STD_LOGIC_VECTOR ( 2 downto 0 );
    m_axi_gmem_ARBURST : out STD_LOGIC_VECTOR ( 1 downto 0 );
    m_axi_gmem_ARLOCK : out STD_LOGIC_VECTOR ( 1 downto 0 );
    m_axi_gmem_ARREGION : out STD_LOGIC_VECTOR ( 3 downto 0 );
    m_axi_gmem_ARCACHE : out STD_LOGIC_VECTOR ( 3 downto 0 );
    m_axi_gmem_ARPROT : out STD_LOGIC_VECTOR ( 2 downto 0 );
    m_axi_gmem_ARQOS : out STD_LOGIC_VECTOR ( 3 downto 0 );
    m_axi_gmem_ARVALID : out STD_LOGIC;
    m_axi_gmem_ARREADY : in STD_LOGIC;
    m_axi_gmem_RDATA : in STD_LOGIC_VECTOR ( 31 downto 0 );
    m_axi_gmem_RRESP : in STD_LOGIC_VECTOR ( 1 downto 0 );
    m_axi_gmem_RLAST : in STD_LOGIC;
    m_axi_gmem_RVALID : in STD_LOGIC;
    m_axi_gmem_RREADY : out STD_LOGIC
  );

end decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix;

architecture stub of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix is
attribute syn_black_box : boolean;
attribute black_box_pad_pin : string;
attribute syn_black_box of stub : architecture is true;
attribute black_box_pad_pin of stub : architecture is "stall_start_ext,stall_done_ext,stall_start_str,stall_done_str,stall_start_int,stall_done_int,s_axi_control_AWADDR[6:0],s_axi_control_AWVALID,s_axi_control_AWREADY,s_axi_control_WDATA[31:0],s_axi_control_WSTRB[3:0],s_axi_control_WVALID,s_axi_control_WREADY,s_axi_control_BRESP[1:0],s_axi_control_BVALID,s_axi_control_BREADY,s_axi_control_ARADDR[6:0],s_axi_control_ARVALID,s_axi_control_ARREADY,s_axi_control_RDATA[31:0],s_axi_control_RRESP[1:0],s_axi_control_RVALID,s_axi_control_RREADY,ap_clk,ap_rst_n,event_done,interrupt,event_start,m_axi_plram0_AWADDR[63:0],m_axi_plram0_AWLEN[7:0],m_axi_plram0_AWSIZE[2:0],m_axi_plram0_AWBURST[1:0],m_axi_plram0_AWLOCK[1:0],m_axi_plram0_AWREGION[3:0],m_axi_plram0_AWCACHE[3:0],m_axi_plram0_AWPROT[2:0],m_axi_plram0_AWQOS[3:0],m_axi_plram0_AWVALID,m_axi_plram0_AWREADY,m_axi_plram0_WDATA[511:0],m_axi_plram0_WSTRB[63:0],m_axi_plram0_WLAST,m_axi_plram0_WVALID,m_axi_plram0_WREADY,m_axi_plram0_BRESP[1:0],m_axi_plram0_BVALID,m_axi_plram0_BREADY,m_axi_plram0_ARADDR[63:0],m_axi_plram0_ARLEN[7:0],m_axi_plram0_ARSIZE[2:0],m_axi_plram0_ARBURST[1:0],m_axi_plram0_ARLOCK[1:0],m_axi_plram0_ARREGION[3:0],m_axi_plram0_ARCACHE[3:0],m_axi_plram0_ARPROT[2:0],m_axi_plram0_ARQOS[3:0],m_axi_plram0_ARVALID,m_axi_plram0_ARREADY,m_axi_plram0_RDATA[511:0],m_axi_plram0_RRESP[1:0],m_axi_plram0_RLAST,m_axi_plram0_RVALID,m_axi_plram0_RREADY,m_axi_aximm0_AWADDR[63:0],m_axi_aximm0_AWLEN[7:0],m_axi_aximm0_AWSIZE[2:0],m_axi_aximm0_AWBURST[1:0],m_axi_aximm0_AWLOCK[1:0],m_axi_aximm0_AWREGION[3:0],m_axi_aximm0_AWCACHE[3:0],m_axi_aximm0_AWPROT[2:0],m_axi_aximm0_AWQOS[3:0],m_axi_aximm0_AWVALID,m_axi_aximm0_AWREADY,m_axi_aximm0_WDATA[511:0],m_axi_aximm0_WSTRB[63:0],m_axi_aximm0_WLAST,m_axi_aximm0_WVALID,m_axi_aximm0_WREADY,m_axi_aximm0_BRESP[1:0],m_axi_aximm0_BVALID,m_axi_aximm0_BREADY,m_axi_aximm0_ARADDR[63:0],m_axi_aximm0_ARLEN[7:0],m_axi_aximm0_ARSIZE[2:0],m_axi_aximm0_ARBURST[1:0],m_axi_aximm0_ARLOCK[1:0],m_axi_aximm0_ARREGION[3:0],m_axi_aximm0_ARCACHE[3:0],m_axi_aximm0_ARPROT[2:0],m_axi_aximm0_ARQOS[3:0],m_axi_aximm0_ARVALID,m_axi_aximm0_ARREADY,m_axi_aximm0_RDATA[511:0],m_axi_aximm0_RRESP[1:0],m_axi_aximm0_RLAST,m_axi_aximm0_RVALID,m_axi_aximm0_RREADY,m_axi_aximm1_AWADDR[63:0],m_axi_aximm1_AWLEN[7:0],m_axi_aximm1_AWSIZE[2:0],m_axi_aximm1_AWBURST[1:0],m_axi_aximm1_AWLOCK[1:0],m_axi_aximm1_AWREGION[3:0],m_axi_aximm1_AWCACHE[3:0],m_axi_aximm1_AWPROT[2:0],m_axi_aximm1_AWQOS[3:0],m_axi_aximm1_AWVALID,m_axi_aximm1_AWREADY,m_axi_aximm1_WDATA[31:0],m_axi_aximm1_WSTRB[3:0],m_axi_aximm1_WLAST,m_axi_aximm1_WVALID,m_axi_aximm1_WREADY,m_axi_aximm1_BRESP[1:0],m_axi_aximm1_BVALID,m_axi_aximm1_BREADY,m_axi_aximm1_ARADDR[63:0],m_axi_aximm1_ARLEN[7:0],m_axi_aximm1_ARSIZE[2:0],m_axi_aximm1_ARBURST[1:0],m_axi_aximm1_ARLOCK[1:0],m_axi_aximm1_ARREGION[3:0],m_axi_aximm1_ARCACHE[3:0],m_axi_aximm1_ARPROT[2:0],m_axi_aximm1_ARQOS[3:0],m_axi_aximm1_ARVALID,m_axi_aximm1_ARREADY,m_axi_aximm1_RDATA[31:0],m_axi_aximm1_RRESP[1:0],m_axi_aximm1_RLAST,m_axi_aximm1_RVALID,m_axi_aximm1_RREADY,m_axi_aximm2_AWADDR[63:0],m_axi_aximm2_AWLEN[7:0],m_axi_aximm2_AWSIZE[2:0],m_axi_aximm2_AWBURST[1:0],m_axi_aximm2_AWLOCK[1:0],m_axi_aximm2_AWREGION[3:0],m_axi_aximm2_AWCACHE[3:0],m_axi_aximm2_AWPROT[2:0],m_axi_aximm2_AWQOS[3:0],m_axi_aximm2_AWVALID,m_axi_aximm2_AWREADY,m_axi_aximm2_WDATA[31:0],m_axi_aximm2_WSTRB[3:0],m_axi_aximm2_WLAST,m_axi_aximm2_WVALID,m_axi_aximm2_WREADY,m_axi_aximm2_BRESP[1:0],m_axi_aximm2_BVALID,m_axi_aximm2_BREADY,m_axi_aximm2_ARADDR[63:0],m_axi_aximm2_ARLEN[7:0],m_axi_aximm2_ARSIZE[2:0],m_axi_aximm2_ARBURST[1:0],m_axi_aximm2_ARLOCK[1:0],m_axi_aximm2_ARREGION[3:0],m_axi_aximm2_ARCACHE[3:0],m_axi_aximm2_ARPROT[2:0],m_axi_aximm2_ARQOS[3:0],m_axi_aximm2_ARVALID,m_axi_aximm2_ARREADY,m_axi_aximm2_RDATA[31:0],m_axi_aximm2_RRESP[1:0],m_axi_aximm2_RLAST,m_axi_aximm2_RVALID,m_axi_aximm2_RREADY,m_axi_gmem_AWADDR[63:0],m_axi_gmem_AWLEN[7:0],m_axi_gmem_AWSIZE[2:0],m_axi_gmem_AWBURST[1:0],m_axi_gmem_AWLOCK[1:0],m_axi_gmem_AWREGION[3:0],m_axi_gmem_AWCACHE[3:0],m_axi_gmem_AWPROT[2:0],m_axi_gmem_AWQOS[3:0],m_axi_gmem_AWVALID,m_axi_gmem_AWREADY,m_axi_gmem_WDATA[31:0],m_axi_gmem_WSTRB[3:0],m_axi_gmem_WLAST,m_axi_gmem_WVALID,m_axi_gmem_WREADY,m_axi_gmem_BRESP[1:0],m_axi_gmem_BVALID,m_axi_gmem_BREADY,m_axi_gmem_ARADDR[63:0],m_axi_gmem_ARLEN[7:0],m_axi_gmem_ARSIZE[2:0],m_axi_gmem_ARBURST[1:0],m_axi_gmem_ARLOCK[1:0],m_axi_gmem_ARREGION[3:0],m_axi_gmem_ARCACHE[3:0],m_axi_gmem_ARPROT[2:0],m_axi_gmem_ARQOS[3:0],m_axi_gmem_ARVALID,m_axi_gmem_ARREADY,m_axi_gmem_RDATA[31:0],m_axi_gmem_RRESP[1:0],m_axi_gmem_RLAST,m_axi_gmem_RVALID,m_axi_gmem_RREADY";
attribute X_CORE_INFO : string;
attribute X_CORE_INFO of stub : architecture is "table_serch,Vivado 2020.2";
begin
end;
