<: ;#Component and file information :>
<: setOutputDirectory "./nifd_v2_0/constraints" :>
<: setFileName "nifd":>
<: setFileExtension ".xdc" :>
<: setFileUsedIn [list synthesis implementation] :>

set_false_path -from [get_cells -hierarchical -filter { NAME =~  "*/nifd_frame_icap/frame_addr_i_reg[*]" && IS_SEQUENTIAL }] -to [get_cells -hierarchical -filter { NAME =~  "*/nifd_frame_icap/frame_addr_i_sync1_reg[*]" && IS_SEQUENTIAL }]
set_false_path -from [get_cells -hierarchical -filter { NAME =~  "*/nifd_frame_icap/start_rdbk_reg" && IS_SEQUENTIAL }] -to [get_cells -hierarchical -filter { NAME =~  "*/nifd_frame_icap/start_rdbk_sync1_reg" && IS_SEQUENTIAL }]
set_false_path -from [get_cells -hierarchical -filter { NAME =~  "*/nifd_frame_icap/rdbk_done_reg" && IS_SEQUENTIAL }] -to [get_cells -hierarchical -filter { NAME =~  "*/nifd_frame_icap/rdbk_done_sync1_reg" && IS_SEQUENTIAL }]
set_false_path -from [get_cells -hierarchical -filter { NAME =~  "*/nifd_frame_process/clk_enable_flag_i_reg" && IS_SEQUENTIAL }] -to [get_cells -hierarchical -filter { NAME =~  "*/nifd_clk_cotrol/u_nisc/current_state_reg" && IS_SEQUENTIAL }]
set_false_path -from [get_cells -hierarchical -filter { NAME =~  "*/nifd_reg_map/free_running_i_reg" && IS_SEQUENTIAL }] -to [get_cells -hierarchical -filter { NAME =~  "*/nifd_clk_cotrol/u_nisc/free_running_sync1_reg" && IS_SEQUENTIAL }]
set_false_path -from [get_cells -hierarchical -filter { NAME =~  "*/nifd_clk_cotrol/u_nisc/start_stat_i_reg" && IS_SEQUENTIAL }] -to [get_cells -hierarchical -filter { NAME =~  "*/nifd_clk_cotrol/u_nisc/start_stat_i_sync1_reg" && IS_SEQUENTIAL }]
set_false_path -from [get_cells -hierarchical -filter { NAME =~  "*/nifd_frame_process/clk_enable_flag_i_reg" && IS_SEQUENTIAL }] -to [get_cells -hierarchical -filter { NAME =~  "*/nifd_clk_cotrol/u_nisc/clk_enable_flag_sync1_reg" && IS_SEQUENTIAL }]
set_false_path -from [get_cells -hierarchical -filter { NAME =~  "*/nifd_clk_cotrol/u_nisc/kc_flag_i_reg" && IS_SEQUENTIAL }] -to [get_cells -hierarchical -filter { NAME =~  "*/nifd_frame_process/kc_flag_sync1_reg" && IS_SEQUENTIAL }]
set_false_path -to [get_cells -hierarchical -filter { NAME =~  "*/resetn_kc_sync1_reg" && IS_SEQUENTIAL }]
set_false_path -to [get_cells -hierarchical -filter { NAME =~  "*/resetn_icc_sync1_reg" && IS_SEQUENTIAL }]
set_false_path -to [get_cells -hierarchical -filter { NAME =~  "*/nifd_clk_cotrol/u_nisc/u_cclk_gen/clk_enable_fr_sync1_reg" && IS_SEQUENTIAL }]
################################################################################
#set_false_path -through [get_ports s00_axi_aresetn] -to [get_pins -of [get_cells -hier -filter name=~*rstblk*/*] -filter {REF_PIN_NAME == PRE}]
#set wr_clock          [get_clocks -of_objects [get_ports s00_axi_aclk]]
#set rd_clock          [get_clocks -of_objects [get_ports kernel_clk]]
#set wr_clk_period     [get_property PERIOD $wr_clock]
#set rd_clk_period     [get_property PERIOD $rd_clock]
#set skew_value [expr {(($wr_clk_period < $rd_clk_period) ? $wr_clk_period : $rd_clk_period)} ]

## Ignore paths from the write clock to the read data registers for Asynchronous Distributed RAM based FIFO
##set_false_path -from [filter [all_fanout -from [get_ports s00_axi_aclk] -flat -endpoints_only] {IS_LEAF}] -to [get_cells -hierarchical -filter {NAME =~ "*gdm.dm_gen.dm*/gpr1.dout_i_reg*" && IS_SEQUENTIAL}]


## Set max delay on cross clock domain path for Block/Distributed RAM based FIFO

#set_max_delay -from [get_cells -hierarchical -filter { NAME =~  "*/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gcx.clkx/*rd_pntr_gc_reg[*]" && IS_SEQUENTIAL }] -to [get_cells -hierarchical -filter { NAME =~  "*/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gcx.clkx/*gsync_stage[1].wr_stg_inst/Q_reg_reg[*]" && IS_SEQUENTIAL }] -datapath_only [get_property -min PERIOD $rd_clock]
#set_bus_skew -from [get_cells -hierarchical -filter { NAME =~  "*/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gcx.clkx/*rd_pntr_gc_reg[*]" && IS_SEQUENTIAL }] -to [get_cells -hierarchical -filter { NAME =~  "*/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gcx.clkx/*gsync_stage[1].wr_stg_inst/Q_reg_reg[*]" && IS_SEQUENTIAL }] $skew_value

#set_max_delay -from [get_cells -hierarchical -filter { NAME =~  "*/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gcx.clkx/*wr_pntr_gc_reg[*]" && IS_SEQUENTIAL }] -to [get_cells -hierarchical -filter { NAME =~  "*/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gcx.clkx/*gsync_stage[1].rd_stg_inst/Q_reg_reg[*]" && IS_SEQUENTIAL }] -datapath_only [get_property -min PERIOD $wr_clock]
#set_bus_skew -from [get_cells -hierarchical -filter { NAME =~  "*/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gcx.clkx/*wr_pntr_gc_reg[*]" && IS_SEQUENTIAL }] -to [get_cells -hierarchical -filter { NAME =~  "*/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gcx.clkx/*gsync_stage[1].rd_stg_inst/Q_reg_reg[*]" && IS_SEQUENTIAL }] $skew_value

#set_false_path -to [get_cells -hierarchical -filter { NAME =~  "*/nifd_clk_cotrol/u_nisc/u_cclk_gen/clk_enable_sync1_reg" && IS_SEQUENTIAL }]
#set_false_path -from [get_cells -hierarchical -filter { NAME =~  "*/nifd_frame_icap/rdbk_mem_reg_*/DP*" && IS_SEQUENTIAL }] -to [get_cells -hierarchical -filter { NAME =~  "*/nifd_frame_icap/rdbk_bit_i_reg[*]" && IS_SEQUENTIAL }]
#set_false_path -from [get_cells -hierarchical -filter { NAME =~  "*/nifd_frame_icap/rdbk_mem_reg_*/RAM*" && IS_SEQUENTIAL }] -to [get_cells -hierarchical -filter { NAME =~  "*/nifd_frame_icap/rdbk_bit_i_reg[*]" && IS_SEQUENTIAL }]
#set_false_path -from [get_cells -hierarchical -filter { NAME =~  "*/nifd_frame_icap/start_rdbk_ack_reg" && IS_SEQUENTIAL }] -to [get_cells -hierarchical -filter { NAME =~  "*/nifd_frame_icap/start_rdbk_ack_sync1_reg" && IS_SEQUENTIAL }]
#set_false_path -from [get_cells -hierarchical -filter { NAME =~  "*/nifd_frame_icap/rdbk_done_ack_reg" && IS_SEQUENTIAL }] -to [get_cells -hierarchical -filter { NAME =~  "*/nifd_frame_icap/rdbk_done_ack_sync1_reg" && IS_SEQUENTIAL }]
#set_false_path -from [get_pins {design_1_i/rst_clk_wiz_0_100M/U0/ACTIVE_LOW_PR_OUT_DFF[0].FDRE_PER_N/C}] -to [get_cells -hierarchical -filter { NAME =~  "*/nifd_clk_cotrol/u_nisc/clk_enable_kc_reg" && IS_SEQUENTIAL }]
#set_false_path -from [get_pins {design_1_i/rst_clk_wiz_0_100M/U0/ACTIVE_LOW_PR_OUT_DFF[0].FDRE_PER_N/C}] -to [get_cells -hierarchical -filter { NAME =~  "*/nifd_clk_cotrol/u_nisc/current_state_reg" && IS_SEQUENTIAL }]
#set_false_path -from [get_pins {design_1_i/rst_clk_wiz_0_100M/U0/ACTIVE_LOW_PR_OUT_DFF[0].FDRE_PER_N/C}] -to [get_cells -hierarchical -filter { NAME =~  "*/nifd_clk_cotrol/u_nisc/kc_flag_i_reg" && IS_SEQUENTIAL }]
#set_false_path -from [get_cells -hierarchical -filter {NAME ~= "*/nifd_frame_icap/rdbk_mem_reg*/RAM*"}] -to [get_cells -hierarchical -filter {NAME ~= "*/nifd_frame_icap/rdbk_bit_i_reg[*]"}]

