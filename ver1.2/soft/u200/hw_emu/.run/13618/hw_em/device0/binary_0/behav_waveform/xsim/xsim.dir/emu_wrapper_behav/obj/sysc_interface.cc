#pragma GCC diagnostic ignored "-Wdeprecated-declarations" 
#include "xsim.dir/emu_wrapper_behav/obj/sysc_interface.h"
#include <map>
#include <list>


extern "C" { std::vector<void*> *_glb_hdl_sc_channel_map; } 



extern "C"
    void call_HDL_SC_WRITE_bv_1(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<1, sc_dt::sc_bv<1> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_2(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<2, sc_dt::sc_bv<2> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_3(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<3, sc_dt::sc_bv<3> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_4(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<4, sc_dt::sc_bv<4> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_5(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<5, sc_dt::sc_bv<5> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_6(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<6, sc_dt::sc_bv<6> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_8(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<8, sc_dt::sc_bv<8> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_32(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<32, sc_dt::sc_bv<32> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_34(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<34, sc_dt::sc_bv<34> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_64(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<64, sc_dt::sc_bv<64> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_512(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<512, sc_dt::sc_bv<512> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_int(unsigned int sc_net_index, char* pval)
    {
          int val = *((int*)(pval));
          ((xsim_sc_channel<0, int>*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(val);
    } 



extern "C"
    void call_HDL_SC_WRITE_bit(unsigned int sc_net_index, char* pval)
    {
            sc_dt::sc_bit val  =  (sc_dt::sc_bit)((*((int*)(pval)) & 0x1));
          ((xsim_sc_channel<0, sc_dt::sc_bit>*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(val);
    } 



extern "C"
    void call_HDL_SC_WRITE_logic(unsigned int sc_net_index, char* pval)
    {
          sc_dt::sc_logic val  =  (sc_dt::sc_logic_value_t) (((*((int*)(pval)+1) & 0x1) << 1) | (*((int*)(pval)) & 0x1));
          ((xsim_sc_channel<0, sc_dt::sc_logic>*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(val);
    } 



extern "C"
    void call_HDL_SC_WRITE_bool(unsigned int sc_net_index, char* pval)
    {
          bool val = *((bool*)(pval));
          ((xsim_sc_channel<0, bool>*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(val);
    } 



extern "C"
    void implicit_HDL_SCinstantiate()
    {
        _glb_hdl_sc_channel_map = new std::vector<void*> ();
        sc_inst_1 = new emu_dpa_hub_0(".emu_wrapper.emu_i.System_DPA.dpa_hub");
        sc_inst_1->xsim_set_dbg_index(38);
        xsim_sc_channel<0, bool > *p_1_s_aximm_clk = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_aximm_clk.bind(*p_1_s_aximm_clk);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_aximm_clk);
        xsim_sc_channel<0, bool > *p_1_s_aximm_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_aximm_aresetn.bind(*p_1_s_aximm_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_aximm_aresetn);
        xsim_sc_channel<0, bool > *p_1_trace_clk = new xsim_sc_channel<0, bool >();
        sc_inst_1->trace_clk.bind(*p_1_trace_clk);
        (*_glb_hdl_sc_channel_map).push_back(p_1_trace_clk);
        xsim_sc_channel<0, bool > *p_1_trace_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_1->trace_aresetn.bind(*p_1_trace_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_1_trace_aresetn);
        xsim_sc_channel<0, bool > *p_1_axilite_clk = new xsim_sc_channel<0, bool >();
        sc_inst_1->axilite_clk.bind(*p_1_axilite_clk);
        (*_glb_hdl_sc_channel_map).push_back(p_1_axilite_clk);
        xsim_sc_channel<0, bool > *p_1_axilite_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_1->axilite_aresetn.bind(*p_1_axilite_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_1_axilite_aresetn);
        xsim_sc_channel<0, bool > *p_1_trace_tready0 = new xsim_sc_channel<0, bool >();
        sc_inst_1->trace_tready0.bind(*p_1_trace_tready0);
        p_1_trace_tready0->set_sv_netview_offsetfromdp(8178920);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_1_trace_tdata0 = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_1->trace_tdata0.bind(*p_1_trace_tdata0);
        (*_glb_hdl_sc_channel_map).push_back(p_1_trace_tdata0);
        xsim_sc_channel<0, bool > *p_1_trace_tlast0 = new xsim_sc_channel<0, bool >();
        sc_inst_1->trace_tlast0.bind(*p_1_trace_tlast0);
        (*_glb_hdl_sc_channel_map).push_back(p_1_trace_tlast0);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_1_trace_tid0 = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_1->trace_tid0.bind(*p_1_trace_tid0);
        (*_glb_hdl_sc_channel_map).push_back(p_1_trace_tid0);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_1_trace_tdest0 = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_1->trace_tdest0.bind(*p_1_trace_tdest0);
        (*_glb_hdl_sc_channel_map).push_back(p_1_trace_tdest0);
        xsim_sc_channel<0, bool > *p_1_trace_tvalid0 = new xsim_sc_channel<0, bool >();
        sc_inst_1->trace_tvalid0.bind(*p_1_trace_tvalid0);
        (*_glb_hdl_sc_channel_map).push_back(p_1_trace_tvalid0);
        xsim_sc_channel<0, bool > *p_1_trace_tready1 = new xsim_sc_channel<0, bool >();
        sc_inst_1->trace_tready1.bind(*p_1_trace_tready1);
        p_1_trace_tready1->set_sv_netview_offsetfromdp(8179256);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_1_trace_tdata1 = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_1->trace_tdata1.bind(*p_1_trace_tdata1);
        p_1_trace_tdata1->set_sv_netview_offsetfromdp(8179312);
        xsim_sc_channel<0, bool > *p_1_trace_tlast1 = new xsim_sc_channel<0, bool >();
        sc_inst_1->trace_tlast1.bind(*p_1_trace_tlast1);
        (*_glb_hdl_sc_channel_map).push_back(p_1_trace_tlast1);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_1_trace_tid1 = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_1->trace_tid1.bind(*p_1_trace_tid1);
        (*_glb_hdl_sc_channel_map).push_back(p_1_trace_tid1);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_1_trace_tdest1 = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_1->trace_tdest1.bind(*p_1_trace_tdest1);
        (*_glb_hdl_sc_channel_map).push_back(p_1_trace_tdest1);
        xsim_sc_channel<0, bool > *p_1_trace_tvalid1 = new xsim_sc_channel<0, bool >();
        sc_inst_1->trace_tvalid1.bind(*p_1_trace_tvalid1);
        (*_glb_hdl_sc_channel_map).push_back(p_1_trace_tvalid1);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_1_trace_tdata2 = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_1->trace_tdata2.bind(*p_1_trace_tdata2);
        (*_glb_hdl_sc_channel_map).push_back(p_1_trace_tdata2);
        xsim_sc_channel<0, bool > *p_1_trace_tready2 = new xsim_sc_channel<0, bool >();
        sc_inst_1->trace_tready2.bind(*p_1_trace_tready2);
        p_1_trace_tready2->set_sv_netview_offsetfromdp(8179648);
        xsim_sc_channel<0, bool > *p_1_trace_tlast2 = new xsim_sc_channel<0, bool >();
        sc_inst_1->trace_tlast2.bind(*p_1_trace_tlast2);
        (*_glb_hdl_sc_channel_map).push_back(p_1_trace_tlast2);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_1_trace_tid2 = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_1->trace_tid2.bind(*p_1_trace_tid2);
        (*_glb_hdl_sc_channel_map).push_back(p_1_trace_tid2);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_1_trace_tdest2 = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_1->trace_tdest2.bind(*p_1_trace_tdest2);
        (*_glb_hdl_sc_channel_map).push_back(p_1_trace_tdest2);
        xsim_sc_channel<0, bool > *p_1_trace_tvalid2 = new xsim_sc_channel<0, bool >();
        sc_inst_1->trace_tvalid2.bind(*p_1_trace_tvalid2);
        (*_glb_hdl_sc_channel_map).push_back(p_1_trace_tvalid2);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_1_trace_tdata3 = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_1->trace_tdata3.bind(*p_1_trace_tdata3);
        (*_glb_hdl_sc_channel_map).push_back(p_1_trace_tdata3);
        xsim_sc_channel<0, bool > *p_1_trace_tready3 = new xsim_sc_channel<0, bool >();
        sc_inst_1->trace_tready3.bind(*p_1_trace_tready3);
        p_1_trace_tready3->set_sv_netview_offsetfromdp(8179984);
        xsim_sc_channel<0, bool > *p_1_trace_tlast3 = new xsim_sc_channel<0, bool >();
        sc_inst_1->trace_tlast3.bind(*p_1_trace_tlast3);
        (*_glb_hdl_sc_channel_map).push_back(p_1_trace_tlast3);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_1_trace_tid3 = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_1->trace_tid3.bind(*p_1_trace_tid3);
        (*_glb_hdl_sc_channel_map).push_back(p_1_trace_tid3);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_1_trace_tdest3 = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_1->trace_tdest3.bind(*p_1_trace_tdest3);
        (*_glb_hdl_sc_channel_map).push_back(p_1_trace_tdest3);
        xsim_sc_channel<0, bool > *p_1_trace_tvalid3 = new xsim_sc_channel<0, bool >();
        sc_inst_1->trace_tvalid3.bind(*p_1_trace_tvalid3);
        (*_glb_hdl_sc_channel_map).push_back(p_1_trace_tvalid3);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_1_trace_tdata4 = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_1->trace_tdata4.bind(*p_1_trace_tdata4);
        (*_glb_hdl_sc_channel_map).push_back(p_1_trace_tdata4);
        xsim_sc_channel<0, bool > *p_1_trace_tready4 = new xsim_sc_channel<0, bool >();
        sc_inst_1->trace_tready4.bind(*p_1_trace_tready4);
        p_1_trace_tready4->set_sv_netview_offsetfromdp(8180320);
        xsim_sc_channel<0, bool > *p_1_trace_tlast4 = new xsim_sc_channel<0, bool >();
        sc_inst_1->trace_tlast4.bind(*p_1_trace_tlast4);
        (*_glb_hdl_sc_channel_map).push_back(p_1_trace_tlast4);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_1_trace_tid4 = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_1->trace_tid4.bind(*p_1_trace_tid4);
        (*_glb_hdl_sc_channel_map).push_back(p_1_trace_tid4);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_1_trace_tdest4 = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_1->trace_tdest4.bind(*p_1_trace_tdest4);
        (*_glb_hdl_sc_channel_map).push_back(p_1_trace_tdest4);
        xsim_sc_channel<0, bool > *p_1_trace_tvalid4 = new xsim_sc_channel<0, bool >();
        sc_inst_1->trace_tvalid4.bind(*p_1_trace_tvalid4);
        (*_glb_hdl_sc_channel_map).push_back(p_1_trace_tvalid4);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_1_trace_tdata5 = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_1->trace_tdata5.bind(*p_1_trace_tdata5);
        (*_glb_hdl_sc_channel_map).push_back(p_1_trace_tdata5);
        xsim_sc_channel<0, bool > *p_1_trace_tready5 = new xsim_sc_channel<0, bool >();
        sc_inst_1->trace_tready5.bind(*p_1_trace_tready5);
        p_1_trace_tready5->set_sv_netview_offsetfromdp(8180656);
        xsim_sc_channel<0, bool > *p_1_trace_tlast5 = new xsim_sc_channel<0, bool >();
        sc_inst_1->trace_tlast5.bind(*p_1_trace_tlast5);
        (*_glb_hdl_sc_channel_map).push_back(p_1_trace_tlast5);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_1_trace_tid5 = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_1->trace_tid5.bind(*p_1_trace_tid5);
        (*_glb_hdl_sc_channel_map).push_back(p_1_trace_tid5);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_1_trace_tdest5 = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_1->trace_tdest5.bind(*p_1_trace_tdest5);
        (*_glb_hdl_sc_channel_map).push_back(p_1_trace_tdest5);
        xsim_sc_channel<0, bool > *p_1_trace_tvalid5 = new xsim_sc_channel<0, bool >();
        sc_inst_1->trace_tvalid5.bind(*p_1_trace_tvalid5);
        (*_glb_hdl_sc_channel_map).push_back(p_1_trace_tvalid5);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_1_trace_tdata6 = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_1->trace_tdata6.bind(*p_1_trace_tdata6);
        (*_glb_hdl_sc_channel_map).push_back(p_1_trace_tdata6);
        xsim_sc_channel<0, bool > *p_1_trace_tready6 = new xsim_sc_channel<0, bool >();
        sc_inst_1->trace_tready6.bind(*p_1_trace_tready6);
        p_1_trace_tready6->set_sv_netview_offsetfromdp(8180992);
        xsim_sc_channel<0, bool > *p_1_trace_tlast6 = new xsim_sc_channel<0, bool >();
        sc_inst_1->trace_tlast6.bind(*p_1_trace_tlast6);
        (*_glb_hdl_sc_channel_map).push_back(p_1_trace_tlast6);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_1_trace_tid6 = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_1->trace_tid6.bind(*p_1_trace_tid6);
        (*_glb_hdl_sc_channel_map).push_back(p_1_trace_tid6);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_1_trace_tdest6 = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_1->trace_tdest6.bind(*p_1_trace_tdest6);
        (*_glb_hdl_sc_channel_map).push_back(p_1_trace_tdest6);
        xsim_sc_channel<0, bool > *p_1_trace_tvalid6 = new xsim_sc_channel<0, bool >();
        sc_inst_1->trace_tvalid6.bind(*p_1_trace_tvalid6);
        (*_glb_hdl_sc_channel_map).push_back(p_1_trace_tvalid6);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_1_trace_tdata7 = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_1->trace_tdata7.bind(*p_1_trace_tdata7);
        (*_glb_hdl_sc_channel_map).push_back(p_1_trace_tdata7);
        xsim_sc_channel<0, bool > *p_1_trace_tready7 = new xsim_sc_channel<0, bool >();
        sc_inst_1->trace_tready7.bind(*p_1_trace_tready7);
        p_1_trace_tready7->set_sv_netview_offsetfromdp(8181328);
        xsim_sc_channel<0, bool > *p_1_trace_tlast7 = new xsim_sc_channel<0, bool >();
        sc_inst_1->trace_tlast7.bind(*p_1_trace_tlast7);
        (*_glb_hdl_sc_channel_map).push_back(p_1_trace_tlast7);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_1_trace_tid7 = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_1->trace_tid7.bind(*p_1_trace_tid7);
        (*_glb_hdl_sc_channel_map).push_back(p_1_trace_tid7);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_1_trace_tdest7 = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_1->trace_tdest7.bind(*p_1_trace_tdest7);
        (*_glb_hdl_sc_channel_map).push_back(p_1_trace_tdest7);
        xsim_sc_channel<0, bool > *p_1_trace_tvalid7 = new xsim_sc_channel<0, bool >();
        sc_inst_1->trace_tvalid7.bind(*p_1_trace_tvalid7);
        (*_glb_hdl_sc_channel_map).push_back(p_1_trace_tvalid7);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_1_trace_tdata8 = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_1->trace_tdata8.bind(*p_1_trace_tdata8);
        (*_glb_hdl_sc_channel_map).push_back(p_1_trace_tdata8);
        xsim_sc_channel<0, bool > *p_1_trace_tready8 = new xsim_sc_channel<0, bool >();
        sc_inst_1->trace_tready8.bind(*p_1_trace_tready8);
        p_1_trace_tready8->set_sv_netview_offsetfromdp(8181664);
        xsim_sc_channel<0, bool > *p_1_trace_tlast8 = new xsim_sc_channel<0, bool >();
        sc_inst_1->trace_tlast8.bind(*p_1_trace_tlast8);
        (*_glb_hdl_sc_channel_map).push_back(p_1_trace_tlast8);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_1_trace_tid8 = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_1->trace_tid8.bind(*p_1_trace_tid8);
        (*_glb_hdl_sc_channel_map).push_back(p_1_trace_tid8);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_1_trace_tdest8 = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_1->trace_tdest8.bind(*p_1_trace_tdest8);
        (*_glb_hdl_sc_channel_map).push_back(p_1_trace_tdest8);
        xsim_sc_channel<0, bool > *p_1_trace_tvalid8 = new xsim_sc_channel<0, bool >();
        sc_inst_1->trace_tvalid8.bind(*p_1_trace_tvalid8);
        (*_glb_hdl_sc_channel_map).push_back(p_1_trace_tvalid8);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_1_trace_tdata9 = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_1->trace_tdata9.bind(*p_1_trace_tdata9);
        (*_glb_hdl_sc_channel_map).push_back(p_1_trace_tdata9);
        xsim_sc_channel<0, bool > *p_1_trace_tready9 = new xsim_sc_channel<0, bool >();
        sc_inst_1->trace_tready9.bind(*p_1_trace_tready9);
        p_1_trace_tready9->set_sv_netview_offsetfromdp(8182000);
        xsim_sc_channel<0, bool > *p_1_trace_tlast9 = new xsim_sc_channel<0, bool >();
        sc_inst_1->trace_tlast9.bind(*p_1_trace_tlast9);
        (*_glb_hdl_sc_channel_map).push_back(p_1_trace_tlast9);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_1_trace_tid9 = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_1->trace_tid9.bind(*p_1_trace_tid9);
        (*_glb_hdl_sc_channel_map).push_back(p_1_trace_tid9);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_1_trace_tdest9 = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_1->trace_tdest9.bind(*p_1_trace_tdest9);
        (*_glb_hdl_sc_channel_map).push_back(p_1_trace_tdest9);
        xsim_sc_channel<0, bool > *p_1_trace_tvalid9 = new xsim_sc_channel<0, bool >();
        sc_inst_1->trace_tvalid9.bind(*p_1_trace_tvalid9);
        (*_glb_hdl_sc_channel_map).push_back(p_1_trace_tvalid9);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_1_trace_tdata10 = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_1->trace_tdata10.bind(*p_1_trace_tdata10);
        (*_glb_hdl_sc_channel_map).push_back(p_1_trace_tdata10);
        xsim_sc_channel<0, bool > *p_1_trace_tready10 = new xsim_sc_channel<0, bool >();
        sc_inst_1->trace_tready10.bind(*p_1_trace_tready10);
        p_1_trace_tready10->set_sv_netview_offsetfromdp(8182336);
        xsim_sc_channel<0, bool > *p_1_trace_tlast10 = new xsim_sc_channel<0, bool >();
        sc_inst_1->trace_tlast10.bind(*p_1_trace_tlast10);
        (*_glb_hdl_sc_channel_map).push_back(p_1_trace_tlast10);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_1_trace_tid10 = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_1->trace_tid10.bind(*p_1_trace_tid10);
        (*_glb_hdl_sc_channel_map).push_back(p_1_trace_tid10);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_1_trace_tdest10 = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_1->trace_tdest10.bind(*p_1_trace_tdest10);
        (*_glb_hdl_sc_channel_map).push_back(p_1_trace_tdest10);
        xsim_sc_channel<0, bool > *p_1_trace_tvalid10 = new xsim_sc_channel<0, bool >();
        sc_inst_1->trace_tvalid10.bind(*p_1_trace_tvalid10);
        (*_glb_hdl_sc_channel_map).push_back(p_1_trace_tvalid10);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_1_s_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_1->s_axi_awaddr.bind(*p_1_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_axi_awaddr);
        xsim_sc_channel<0, bool > *p_1_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axi_awvalid.bind(*p_1_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_1_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axi_awready.bind(*p_1_s_axi_awready);
        p_1_s_axi_awready->set_sv_netview_offsetfromdp(8182728);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_1_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_1->s_axi_wdata.bind(*p_1_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_1_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_1->s_axi_wstrb.bind(*p_1_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_1_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axi_wvalid.bind(*p_1_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_1_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axi_wready.bind(*p_1_s_axi_wready);
        p_1_s_axi_wready->set_sv_netview_offsetfromdp(8182952);
        xsim_sc_channel<0, bool > *p_1_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axi_bvalid.bind(*p_1_s_axi_bvalid);
        p_1_s_axi_bvalid->set_sv_netview_offsetfromdp(8183008);
        xsim_sc_channel<0, bool > *p_1_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axi_bready.bind(*p_1_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_axi_bready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_1_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_1->s_axi_bresp.bind(*p_1_s_axi_bresp);
        p_1_s_axi_bresp->set_sv_netview_offsetfromdp(8183120);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_1_s_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_1->s_axi_araddr.bind(*p_1_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_axi_araddr);
        xsim_sc_channel<0, bool > *p_1_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axi_arvalid.bind(*p_1_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_1_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axi_arready.bind(*p_1_s_axi_arready);
        p_1_s_axi_arready->set_sv_netview_offsetfromdp(8183288);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_1_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_1->s_axi_rdata.bind(*p_1_s_axi_rdata);
        p_1_s_axi_rdata->set_sv_netview_offsetfromdp(8183344);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_1_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_1->s_axi_rresp.bind(*p_1_s_axi_rresp);
        p_1_s_axi_rresp->set_sv_netview_offsetfromdp(8183400);
        xsim_sc_channel<0, bool > *p_1_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axi_rvalid.bind(*p_1_s_axi_rvalid);
        p_1_s_axi_rvalid->set_sv_netview_offsetfromdp(8183456);
        xsim_sc_channel<0, bool > *p_1_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axi_rready.bind(*p_1_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_axi_rready);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_1_s_axihub_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_1->s_axihub_awaddr.bind(*p_1_s_axihub_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_axihub_awaddr);
        xsim_sc_channel<0, bool > *p_1_s_axihub_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axihub_awvalid.bind(*p_1_s_axihub_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_axihub_awvalid);
        xsim_sc_channel<0, bool > *p_1_s_axihub_awready = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axihub_awready.bind(*p_1_s_axihub_awready);
        p_1_s_axihub_awready->set_sv_netview_offsetfromdp(8183680);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_1_s_axihub_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_1->s_axihub_wdata.bind(*p_1_s_axihub_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_axihub_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_1_s_axihub_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_1->s_axihub_wstrb.bind(*p_1_s_axihub_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_axihub_wstrb);
        xsim_sc_channel<0, bool > *p_1_s_axihub_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axihub_wvalid.bind(*p_1_s_axihub_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_axihub_wvalid);
        xsim_sc_channel<0, bool > *p_1_s_axihub_wready = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axihub_wready.bind(*p_1_s_axihub_wready);
        p_1_s_axihub_wready->set_sv_netview_offsetfromdp(8183904);
        xsim_sc_channel<0, bool > *p_1_s_axihub_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axihub_bvalid.bind(*p_1_s_axihub_bvalid);
        p_1_s_axihub_bvalid->set_sv_netview_offsetfromdp(8183960);
        xsim_sc_channel<0, bool > *p_1_s_axihub_bready = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axihub_bready.bind(*p_1_s_axihub_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_axihub_bready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_1_s_axihub_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_1->s_axihub_bresp.bind(*p_1_s_axihub_bresp);
        p_1_s_axihub_bresp->set_sv_netview_offsetfromdp(8184072);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_1_s_axihub_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_1->s_axihub_araddr.bind(*p_1_s_axihub_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_axihub_araddr);
        xsim_sc_channel<0, bool > *p_1_s_axihub_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axihub_arvalid.bind(*p_1_s_axihub_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_axihub_arvalid);
        xsim_sc_channel<0, bool > *p_1_s_axihub_arready = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axihub_arready.bind(*p_1_s_axihub_arready);
        p_1_s_axihub_arready->set_sv_netview_offsetfromdp(8184240);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_1_s_axihub_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_1->s_axihub_rdata.bind(*p_1_s_axihub_rdata);
        p_1_s_axihub_rdata->set_sv_netview_offsetfromdp(8184296);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_1_s_axihub_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_1->s_axihub_rresp.bind(*p_1_s_axihub_rresp);
        p_1_s_axihub_rresp->set_sv_netview_offsetfromdp(8184352);
        xsim_sc_channel<0, bool > *p_1_s_axihub_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axihub_rvalid.bind(*p_1_s_axihub_rvalid);
        p_1_s_axihub_rvalid->set_sv_netview_offsetfromdp(8184408);
        xsim_sc_channel<0, bool > *p_1_s_axihub_rready = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axihub_rready.bind(*p_1_s_axihub_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_axihub_rready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_1_s_aximm_awaddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_1->s_aximm_awaddr.bind(*p_1_s_aximm_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_aximm_awaddr);
        xsim_sc_channel<0, bool > *p_1_s_aximm_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_aximm_awvalid.bind(*p_1_s_aximm_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_aximm_awvalid);
        xsim_sc_channel<0, bool > *p_1_s_aximm_awready = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_aximm_awready.bind(*p_1_s_aximm_awready);
        p_1_s_aximm_awready->set_sv_netview_offsetfromdp(8184632);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_1_s_aximm_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_1->s_aximm_awlen.bind(*p_1_s_aximm_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_aximm_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_1_s_aximm_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_1->s_aximm_awsize.bind(*p_1_s_aximm_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_aximm_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_1_s_aximm_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_1->s_aximm_awburst.bind(*p_1_s_aximm_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_aximm_awburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_1_s_aximm_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_1->s_aximm_awid.bind(*p_1_s_aximm_awid);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_aximm_awid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_1_s_aximm_wdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_1->s_aximm_wdata.bind(*p_1_s_aximm_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_aximm_wdata);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_1_s_aximm_wstrb = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_1->s_aximm_wstrb.bind(*p_1_s_aximm_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_aximm_wstrb);
        xsim_sc_channel<0, bool > *p_1_s_aximm_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_aximm_wvalid.bind(*p_1_s_aximm_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_aximm_wvalid);
        xsim_sc_channel<0, bool > *p_1_s_aximm_wready = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_aximm_wready.bind(*p_1_s_aximm_wready);
        p_1_s_aximm_wready->set_sv_netview_offsetfromdp(8185080);
        xsim_sc_channel<0, bool > *p_1_s_aximm_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_aximm_bvalid.bind(*p_1_s_aximm_bvalid);
        p_1_s_aximm_bvalid->set_sv_netview_offsetfromdp(8185136);
        xsim_sc_channel<0, bool > *p_1_s_aximm_bready = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_aximm_bready.bind(*p_1_s_aximm_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_aximm_bready);
        xsim_sc_channel<0, bool > *p_1_s_aximm_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_aximm_wlast.bind(*p_1_s_aximm_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_aximm_wlast);
        xsim_sc_channel<0, bool > *p_1_s_aximm_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_aximm_rlast.bind(*p_1_s_aximm_rlast);
        p_1_s_aximm_rlast->set_sv_netview_offsetfromdp(8185304);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_1_s_aximm_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_1->s_aximm_bresp.bind(*p_1_s_aximm_bresp);
        p_1_s_aximm_bresp->set_sv_netview_offsetfromdp(8185360);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_1_s_aximm_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_1->s_aximm_bid.bind(*p_1_s_aximm_bid);
        p_1_s_aximm_bid->set_sv_netview_offsetfromdp(8185416);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_1_s_aximm_araddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_1->s_aximm_araddr.bind(*p_1_s_aximm_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_aximm_araddr);
        xsim_sc_channel<0, bool > *p_1_s_aximm_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_aximm_arvalid.bind(*p_1_s_aximm_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_aximm_arvalid);
        xsim_sc_channel<0, bool > *p_1_s_aximm_arready = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_aximm_arready.bind(*p_1_s_aximm_arready);
        p_1_s_aximm_arready->set_sv_netview_offsetfromdp(8185584);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_1_s_aximm_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_1->s_aximm_arlen.bind(*p_1_s_aximm_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_aximm_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_1_s_aximm_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_1->s_aximm_arsize.bind(*p_1_s_aximm_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_aximm_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_1_s_aximm_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_1->s_aximm_arburst.bind(*p_1_s_aximm_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_aximm_arburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_1_s_aximm_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_1->s_aximm_arid.bind(*p_1_s_aximm_arid);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_aximm_arid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_1_s_aximm_rdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_1->s_aximm_rdata.bind(*p_1_s_aximm_rdata);
        p_1_s_aximm_rdata->set_sv_netview_offsetfromdp(8185864);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_1_s_aximm_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_1->s_aximm_rid.bind(*p_1_s_aximm_rid);
        p_1_s_aximm_rid->set_sv_netview_offsetfromdp(8185920);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_1_s_aximm_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_1->s_aximm_rresp.bind(*p_1_s_aximm_rresp);
        p_1_s_aximm_rresp->set_sv_netview_offsetfromdp(8185976);
        xsim_sc_channel<0, bool > *p_1_s_aximm_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_aximm_rvalid.bind(*p_1_s_aximm_rvalid);
        p_1_s_aximm_rvalid->set_sv_netview_offsetfromdp(8186032);
        xsim_sc_channel<0, bool > *p_1_s_aximm_rready = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_aximm_rready.bind(*p_1_s_aximm_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_aximm_rready);
        sc_inst_2 = new emu_dpa_mon0_0(".emu_wrapper.emu_i.System_DPA.dpa_mon0");
        sc_inst_2->xsim_set_dbg_index(39);
        xsim_sc_channel<0, bool > *p_2_mon_clk = new xsim_sc_channel<0, bool >();
        sc_inst_2->mon_clk.bind(*p_2_mon_clk);
        (*_glb_hdl_sc_channel_map).push_back(p_2_mon_clk);
        xsim_sc_channel<0, bool > *p_2_mon_resetn = new xsim_sc_channel<0, bool >();
        sc_inst_2->mon_resetn.bind(*p_2_mon_resetn);
        (*_glb_hdl_sc_channel_map).push_back(p_2_mon_resetn);
        xsim_sc_channel<0, bool > *p_2_trace_clk = new xsim_sc_channel<0, bool >();
        sc_inst_2->trace_clk.bind(*p_2_trace_clk);
        (*_glb_hdl_sc_channel_map).push_back(p_2_trace_clk);
        xsim_sc_channel<0, bool > *p_2_trace_rst = new xsim_sc_channel<0, bool >();
        sc_inst_2->trace_rst.bind(*p_2_trace_rst);
        (*_glb_hdl_sc_channel_map).push_back(p_2_trace_rst);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_2_s_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_2->s_axi_awaddr.bind(*p_2_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_2_s_axi_awaddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_2_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_2->s_axi_awprot.bind(*p_2_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_2_s_axi_awprot);
        xsim_sc_channel<0, bool > *p_2_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_2->s_axi_awvalid.bind(*p_2_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_2_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_2_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_2->s_axi_awready.bind(*p_2_s_axi_awready);
        p_2_s_axi_awready->set_sv_netview_offsetfromdp(8186584);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_2_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_2->s_axi_wdata.bind(*p_2_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_2_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_2_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_2->s_axi_wstrb.bind(*p_2_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_2_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_2_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_2->s_axi_wvalid.bind(*p_2_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_2_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_2_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_2->s_axi_wready.bind(*p_2_s_axi_wready);
        p_2_s_axi_wready->set_sv_netview_offsetfromdp(8186808);
        xsim_sc_channel<0, bool > *p_2_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_2->s_axi_bvalid.bind(*p_2_s_axi_bvalid);
        p_2_s_axi_bvalid->set_sv_netview_offsetfromdp(8186864);
        xsim_sc_channel<0, bool > *p_2_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_2->s_axi_bready.bind(*p_2_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_2_s_axi_bready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_2_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_2->s_axi_bresp.bind(*p_2_s_axi_bresp);
        p_2_s_axi_bresp->set_sv_netview_offsetfromdp(8186976);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_2_s_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_2->s_axi_araddr.bind(*p_2_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_2_s_axi_araddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_2_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_2->s_axi_arprot.bind(*p_2_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_2_s_axi_arprot);
        xsim_sc_channel<0, bool > *p_2_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_2->s_axi_arvalid.bind(*p_2_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_2_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_2_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_2->s_axi_arready.bind(*p_2_s_axi_arready);
        p_2_s_axi_arready->set_sv_netview_offsetfromdp(8187200);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_2_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_2->s_axi_rdata.bind(*p_2_s_axi_rdata);
        p_2_s_axi_rdata->set_sv_netview_offsetfromdp(8187256);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_2_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_2->s_axi_rresp.bind(*p_2_s_axi_rresp);
        p_2_s_axi_rresp->set_sv_netview_offsetfromdp(8187312);
        xsim_sc_channel<0, bool > *p_2_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_2->s_axi_rvalid.bind(*p_2_s_axi_rvalid);
        p_2_s_axi_rvalid->set_sv_netview_offsetfromdp(8187368);
        xsim_sc_channel<0, bool > *p_2_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_2->s_axi_rready.bind(*p_2_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_2_s_axi_rready);
        xsim_sc_channel<0, bool > *p_2_mon_AWVALID = new xsim_sc_channel<0, bool >();
        sc_inst_2->mon_AWVALID.bind(*p_2_mon_AWVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_2_mon_AWVALID);
        xsim_sc_channel<0, bool > *p_2_mon_AWREADY = new xsim_sc_channel<0, bool >();
        sc_inst_2->mon_AWREADY.bind(*p_2_mon_AWREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_2_mon_AWREADY);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_2_mon_AWADDR = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_2->mon_AWADDR.bind(*p_2_mon_AWADDR);
        (*_glb_hdl_sc_channel_map).push_back(p_2_mon_AWADDR);
        xsim_sc_channel<0, bool > *p_2_mon_WVALID = new xsim_sc_channel<0, bool >();
        sc_inst_2->mon_WVALID.bind(*p_2_mon_WVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_2_mon_WVALID);
        xsim_sc_channel<0, bool > *p_2_mon_WREADY = new xsim_sc_channel<0, bool >();
        sc_inst_2->mon_WREADY.bind(*p_2_mon_WREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_2_mon_WREADY);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_2_mon_WDATA = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_2->mon_WDATA.bind(*p_2_mon_WDATA);
        (*_glb_hdl_sc_channel_map).push_back(p_2_mon_WDATA);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_2_mon_WSTRB = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_2->mon_WSTRB.bind(*p_2_mon_WSTRB);
        (*_glb_hdl_sc_channel_map).push_back(p_2_mon_WSTRB);
        xsim_sc_channel<0, bool > *p_2_mon_ARVALID = new xsim_sc_channel<0, bool >();
        sc_inst_2->mon_ARVALID.bind(*p_2_mon_ARVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_2_mon_ARVALID);
        xsim_sc_channel<0, bool > *p_2_mon_ARREADY = new xsim_sc_channel<0, bool >();
        sc_inst_2->mon_ARREADY.bind(*p_2_mon_ARREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_2_mon_ARREADY);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_2_mon_ARADDR = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_2->mon_ARADDR.bind(*p_2_mon_ARADDR);
        (*_glb_hdl_sc_channel_map).push_back(p_2_mon_ARADDR);
        xsim_sc_channel<0, bool > *p_2_mon_RVALID = new xsim_sc_channel<0, bool >();
        sc_inst_2->mon_RVALID.bind(*p_2_mon_RVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_2_mon_RVALID);
        xsim_sc_channel<0, bool > *p_2_mon_RREADY = new xsim_sc_channel<0, bool >();
        sc_inst_2->mon_RREADY.bind(*p_2_mon_RREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_2_mon_RREADY);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_2_mon_RDATA = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_2->mon_RDATA.bind(*p_2_mon_RDATA);
        (*_glb_hdl_sc_channel_map).push_back(p_2_mon_RDATA);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_2_mon_RRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_2->mon_RRESP.bind(*p_2_mon_RRESP);
        (*_glb_hdl_sc_channel_map).push_back(p_2_mon_RRESP);
        xsim_sc_channel<0, bool > *p_2_mon_BVALID = new xsim_sc_channel<0, bool >();
        sc_inst_2->mon_BVALID.bind(*p_2_mon_BVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_2_mon_BVALID);
        xsim_sc_channel<0, bool > *p_2_mon_BREADY = new xsim_sc_channel<0, bool >();
        sc_inst_2->mon_BREADY.bind(*p_2_mon_BREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_2_mon_BREADY);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_2_mon_BRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_2->mon_BRESP.bind(*p_2_mon_BRESP);
        (*_glb_hdl_sc_channel_map).push_back(p_2_mon_BRESP);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_2_m_axis_tready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_2->m_axis_tready.bind(*p_2_m_axis_tready);
        (*_glb_hdl_sc_channel_map).push_back(p_2_m_axis_tready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_2_m_axis_tdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_2->m_axis_tdata.bind(*p_2_m_axis_tdata);
        p_2_m_axis_tdata->set_sv_netview_offsetfromdp(8188488);
        xsim_sc_channel<0, bool > *p_2_m_axis_tlast = new xsim_sc_channel<0, bool >();
        sc_inst_2->m_axis_tlast.bind(*p_2_m_axis_tlast);
        p_2_m_axis_tlast->set_sv_netview_offsetfromdp(8188544);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_2_m_axis_tid = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_2->m_axis_tid.bind(*p_2_m_axis_tid);
        p_2_m_axis_tid->set_sv_netview_offsetfromdp(8188600);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_2_m_axis_tdest = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_2->m_axis_tdest.bind(*p_2_m_axis_tdest);
        p_2_m_axis_tdest->set_sv_netview_offsetfromdp(8188656);
        xsim_sc_channel<0, bool > *p_2_m_axis_tvalid = new xsim_sc_channel<0, bool >();
        sc_inst_2->m_axis_tvalid.bind(*p_2_m_axis_tvalid);
        p_2_m_axis_tvalid->set_sv_netview_offsetfromdp(8188712);
        sc_inst_3 = new emu_dpa_mon1_0(".emu_wrapper.emu_i.System_DPA.dpa_mon1");
        sc_inst_3->xsim_set_dbg_index(40);
        xsim_sc_channel<0, bool > *p_3_mon_clk = new xsim_sc_channel<0, bool >();
        sc_inst_3->mon_clk.bind(*p_3_mon_clk);
        (*_glb_hdl_sc_channel_map).push_back(p_3_mon_clk);
        xsim_sc_channel<0, bool > *p_3_mon_resetn = new xsim_sc_channel<0, bool >();
        sc_inst_3->mon_resetn.bind(*p_3_mon_resetn);
        (*_glb_hdl_sc_channel_map).push_back(p_3_mon_resetn);
        xsim_sc_channel<0, bool > *p_3_trace_clk = new xsim_sc_channel<0, bool >();
        sc_inst_3->trace_clk.bind(*p_3_trace_clk);
        (*_glb_hdl_sc_channel_map).push_back(p_3_trace_clk);
        xsim_sc_channel<0, bool > *p_3_trace_rst = new xsim_sc_channel<0, bool >();
        sc_inst_3->trace_rst.bind(*p_3_trace_rst);
        (*_glb_hdl_sc_channel_map).push_back(p_3_trace_rst);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_3_s_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_3->s_axi_awaddr.bind(*p_3_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_3_s_axi_awaddr);
        xsim_sc_channel<0, bool > *p_3_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_awvalid.bind(*p_3_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_3_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_3_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_awready.bind(*p_3_s_axi_awready);
        p_3_s_axi_awready->set_sv_netview_offsetfromdp(8189152);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_3_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_3->s_axi_wdata.bind(*p_3_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_3_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_3_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_3->s_axi_wstrb.bind(*p_3_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_3_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_3_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_wvalid.bind(*p_3_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_3_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_3_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_wready.bind(*p_3_s_axi_wready);
        p_3_s_axi_wready->set_sv_netview_offsetfromdp(8189376);
        xsim_sc_channel<0, bool > *p_3_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_bvalid.bind(*p_3_s_axi_bvalid);
        p_3_s_axi_bvalid->set_sv_netview_offsetfromdp(8189432);
        xsim_sc_channel<0, bool > *p_3_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_bready.bind(*p_3_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_3_s_axi_bready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_3_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_3->s_axi_bresp.bind(*p_3_s_axi_bresp);
        p_3_s_axi_bresp->set_sv_netview_offsetfromdp(8189544);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_3_s_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_3->s_axi_araddr.bind(*p_3_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_3_s_axi_araddr);
        xsim_sc_channel<0, bool > *p_3_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_arvalid.bind(*p_3_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_3_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_3_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_arready.bind(*p_3_s_axi_arready);
        p_3_s_axi_arready->set_sv_netview_offsetfromdp(8189712);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_3_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_3->s_axi_rdata.bind(*p_3_s_axi_rdata);
        p_3_s_axi_rdata->set_sv_netview_offsetfromdp(8189768);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_3_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_3->s_axi_rresp.bind(*p_3_s_axi_rresp);
        p_3_s_axi_rresp->set_sv_netview_offsetfromdp(8189824);
        xsim_sc_channel<0, bool > *p_3_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_rvalid.bind(*p_3_s_axi_rvalid);
        p_3_s_axi_rvalid->set_sv_netview_offsetfromdp(8189880);
        xsim_sc_channel<0, bool > *p_3_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_rready.bind(*p_3_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_3_s_axi_rready);
        xsim_sc_channel<0, bool > *p_3_mon_AWVALID = new xsim_sc_channel<0, bool >();
        sc_inst_3->mon_AWVALID.bind(*p_3_mon_AWVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_3_mon_AWVALID);
        xsim_sc_channel<0, bool > *p_3_mon_AWREADY = new xsim_sc_channel<0, bool >();
        sc_inst_3->mon_AWREADY.bind(*p_3_mon_AWREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_3_mon_AWREADY);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_3_mon_AWADDR = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_3->mon_AWADDR.bind(*p_3_mon_AWADDR);
        (*_glb_hdl_sc_channel_map).push_back(p_3_mon_AWADDR);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_3_mon_AWID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_3->mon_AWID.bind(*p_3_mon_AWID);
        (*_glb_hdl_sc_channel_map).push_back(p_3_mon_AWID);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_3_mon_AWLEN = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_3->mon_AWLEN.bind(*p_3_mon_AWLEN);
        (*_glb_hdl_sc_channel_map).push_back(p_3_mon_AWLEN);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_3_mon_AWSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_3->mon_AWSIZE.bind(*p_3_mon_AWSIZE);
        (*_glb_hdl_sc_channel_map).push_back(p_3_mon_AWSIZE);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_3_mon_AWBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_3->mon_AWBURST.bind(*p_3_mon_AWBURST);
        (*_glb_hdl_sc_channel_map).push_back(p_3_mon_AWBURST);
        xsim_sc_channel<0, bool > *p_3_mon_WVALID = new xsim_sc_channel<0, bool >();
        sc_inst_3->mon_WVALID.bind(*p_3_mon_WVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_3_mon_WVALID);
        xsim_sc_channel<0, bool > *p_3_mon_WREADY = new xsim_sc_channel<0, bool >();
        sc_inst_3->mon_WREADY.bind(*p_3_mon_WREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_3_mon_WREADY);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_3_mon_WDATA = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_3->mon_WDATA.bind(*p_3_mon_WDATA);
        (*_glb_hdl_sc_channel_map).push_back(p_3_mon_WDATA);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_3_mon_WSTRB = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_3->mon_WSTRB.bind(*p_3_mon_WSTRB);
        (*_glb_hdl_sc_channel_map).push_back(p_3_mon_WSTRB);
        xsim_sc_channel<0, bool > *p_3_mon_WLAST = new xsim_sc_channel<0, bool >();
        sc_inst_3->mon_WLAST.bind(*p_3_mon_WLAST);
        (*_glb_hdl_sc_channel_map).push_back(p_3_mon_WLAST);
        xsim_sc_channel<0, bool > *p_3_mon_ARVALID = new xsim_sc_channel<0, bool >();
        sc_inst_3->mon_ARVALID.bind(*p_3_mon_ARVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_3_mon_ARVALID);
        xsim_sc_channel<0, bool > *p_3_mon_ARREADY = new xsim_sc_channel<0, bool >();
        sc_inst_3->mon_ARREADY.bind(*p_3_mon_ARREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_3_mon_ARREADY);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_3_mon_ARADDR = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_3->mon_ARADDR.bind(*p_3_mon_ARADDR);
        (*_glb_hdl_sc_channel_map).push_back(p_3_mon_ARADDR);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_3_mon_ARID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_3->mon_ARID.bind(*p_3_mon_ARID);
        (*_glb_hdl_sc_channel_map).push_back(p_3_mon_ARID);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_3_mon_ARLEN = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_3->mon_ARLEN.bind(*p_3_mon_ARLEN);
        (*_glb_hdl_sc_channel_map).push_back(p_3_mon_ARLEN);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_3_mon_ARSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_3->mon_ARSIZE.bind(*p_3_mon_ARSIZE);
        (*_glb_hdl_sc_channel_map).push_back(p_3_mon_ARSIZE);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_3_mon_ARBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_3->mon_ARBURST.bind(*p_3_mon_ARBURST);
        (*_glb_hdl_sc_channel_map).push_back(p_3_mon_ARBURST);
        xsim_sc_channel<0, bool > *p_3_mon_RVALID = new xsim_sc_channel<0, bool >();
        sc_inst_3->mon_RVALID.bind(*p_3_mon_RVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_3_mon_RVALID);
        xsim_sc_channel<0, bool > *p_3_mon_RREADY = new xsim_sc_channel<0, bool >();
        sc_inst_3->mon_RREADY.bind(*p_3_mon_RREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_3_mon_RREADY);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_3_mon_RDATA = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_3->mon_RDATA.bind(*p_3_mon_RDATA);
        (*_glb_hdl_sc_channel_map).push_back(p_3_mon_RDATA);
        xsim_sc_channel<0, bool > *p_3_mon_RLAST = new xsim_sc_channel<0, bool >();
        sc_inst_3->mon_RLAST.bind(*p_3_mon_RLAST);
        (*_glb_hdl_sc_channel_map).push_back(p_3_mon_RLAST);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_3_mon_RID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_3->mon_RID.bind(*p_3_mon_RID);
        (*_glb_hdl_sc_channel_map).push_back(p_3_mon_RID);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_3_mon_RRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_3->mon_RRESP.bind(*p_3_mon_RRESP);
        (*_glb_hdl_sc_channel_map).push_back(p_3_mon_RRESP);
        xsim_sc_channel<0, bool > *p_3_mon_BVALID = new xsim_sc_channel<0, bool >();
        sc_inst_3->mon_BVALID.bind(*p_3_mon_BVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_3_mon_BVALID);
        xsim_sc_channel<0, bool > *p_3_mon_BREADY = new xsim_sc_channel<0, bool >();
        sc_inst_3->mon_BREADY.bind(*p_3_mon_BREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_3_mon_BREADY);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_3_mon_BRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_3->mon_BRESP.bind(*p_3_mon_BRESP);
        (*_glb_hdl_sc_channel_map).push_back(p_3_mon_BRESP);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_3_mon_BID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_3->mon_BID.bind(*p_3_mon_BID);
        (*_glb_hdl_sc_channel_map).push_back(p_3_mon_BID);
        xsim_sc_channel<0, bool > *p_3_m_axis_rd_tready = new xsim_sc_channel<0, bool >();
        sc_inst_3->m_axis_rd_tready.bind(*p_3_m_axis_rd_tready);
        (*_glb_hdl_sc_channel_map).push_back(p_3_m_axis_rd_tready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_3_m_axis_rd_tdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_3->m_axis_rd_tdata.bind(*p_3_m_axis_rd_tdata);
        p_3_m_axis_rd_tdata->set_sv_netview_offsetfromdp(8191672);
        xsim_sc_channel<0, bool > *p_3_m_axis_rd_tlast = new xsim_sc_channel<0, bool >();
        sc_inst_3->m_axis_rd_tlast.bind(*p_3_m_axis_rd_tlast);
        p_3_m_axis_rd_tlast->set_sv_netview_offsetfromdp(8191728);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_3_m_axis_rd_tid = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_3->m_axis_rd_tid.bind(*p_3_m_axis_rd_tid);
        p_3_m_axis_rd_tid->set_sv_netview_offsetfromdp(8191784);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_3_m_axis_rd_tdest = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_3->m_axis_rd_tdest.bind(*p_3_m_axis_rd_tdest);
        p_3_m_axis_rd_tdest->set_sv_netview_offsetfromdp(8191840);
        xsim_sc_channel<0, bool > *p_3_m_axis_wr_tready = new xsim_sc_channel<0, bool >();
        sc_inst_3->m_axis_wr_tready.bind(*p_3_m_axis_wr_tready);
        (*_glb_hdl_sc_channel_map).push_back(p_3_m_axis_wr_tready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_3_m_axis_wr_tdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_3->m_axis_wr_tdata.bind(*p_3_m_axis_wr_tdata);
        p_3_m_axis_wr_tdata->set_sv_netview_offsetfromdp(8191952);
        xsim_sc_channel<0, bool > *p_3_m_axis_wr_tlast = new xsim_sc_channel<0, bool >();
        sc_inst_3->m_axis_wr_tlast.bind(*p_3_m_axis_wr_tlast);
        p_3_m_axis_wr_tlast->set_sv_netview_offsetfromdp(8192008);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_3_m_axis_wr_tid = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_3->m_axis_wr_tid.bind(*p_3_m_axis_wr_tid);
        p_3_m_axis_wr_tid->set_sv_netview_offsetfromdp(8192064);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_3_m_axis_wr_tdest = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_3->m_axis_wr_tdest.bind(*p_3_m_axis_wr_tdest);
        p_3_m_axis_wr_tdest->set_sv_netview_offsetfromdp(8192120);
        xsim_sc_channel<0, bool > *p_3_m_axis_wr_tvalid = new xsim_sc_channel<0, bool >();
        sc_inst_3->m_axis_wr_tvalid.bind(*p_3_m_axis_wr_tvalid);
        p_3_m_axis_wr_tvalid->set_sv_netview_offsetfromdp(8192176);
        xsim_sc_channel<0, bool > *p_3_m_axis_rd_tvalid = new xsim_sc_channel<0, bool >();
        sc_inst_3->m_axis_rd_tvalid.bind(*p_3_m_axis_rd_tvalid);
        p_3_m_axis_rd_tvalid->set_sv_netview_offsetfromdp(8192232);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_3_s_axi_awaddr_mon = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_3->s_axi_awaddr_mon.bind(*p_3_s_axi_awaddr_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_3_s_axi_awaddr_mon);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_3_s_axi_awprot_mon = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_3->s_axi_awprot_mon.bind(*p_3_s_axi_awprot_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_3_s_axi_awprot_mon);
        xsim_sc_channel<0, bool > *p_3_s_axi_awvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_awvalid_mon.bind(*p_3_s_axi_awvalid_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_3_s_axi_awvalid_mon);
        xsim_sc_channel<0, bool > *p_3_s_axi_awready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_awready_mon.bind(*p_3_s_axi_awready_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_3_s_axi_awready_mon);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_3_s_axi_wdata_mon = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_3->s_axi_wdata_mon.bind(*p_3_s_axi_wdata_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_3_s_axi_wdata_mon);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_3_s_axi_wstrb_mon = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_3->s_axi_wstrb_mon.bind(*p_3_s_axi_wstrb_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_3_s_axi_wstrb_mon);
        xsim_sc_channel<0, bool > *p_3_s_axi_wvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_wvalid_mon.bind(*p_3_s_axi_wvalid_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_3_s_axi_wvalid_mon);
        xsim_sc_channel<0, bool > *p_3_s_axi_wready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_wready_mon.bind(*p_3_s_axi_wready_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_3_s_axi_wready_mon);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_3_s_axi_bresp_mon = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_3->s_axi_bresp_mon.bind(*p_3_s_axi_bresp_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_3_s_axi_bresp_mon);
        xsim_sc_channel<0, bool > *p_3_s_axi_bvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_bvalid_mon.bind(*p_3_s_axi_bvalid_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_3_s_axi_bvalid_mon);
        xsim_sc_channel<0, bool > *p_3_s_axi_bready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_bready_mon.bind(*p_3_s_axi_bready_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_3_s_axi_bready_mon);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_3_s_axi_araddr_mon = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_3->s_axi_araddr_mon.bind(*p_3_s_axi_araddr_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_3_s_axi_araddr_mon);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_3_s_axi_arprot_mon = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_3->s_axi_arprot_mon.bind(*p_3_s_axi_arprot_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_3_s_axi_arprot_mon);
        xsim_sc_channel<0, bool > *p_3_s_axi_arvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_arvalid_mon.bind(*p_3_s_axi_arvalid_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_3_s_axi_arvalid_mon);
        xsim_sc_channel<0, bool > *p_3_s_axi_arready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_arready_mon.bind(*p_3_s_axi_arready_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_3_s_axi_arready_mon);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_3_s_axi_rdata_mon = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_3->s_axi_rdata_mon.bind(*p_3_s_axi_rdata_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_3_s_axi_rdata_mon);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_3_s_axi_rresp_mon = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_3->s_axi_rresp_mon.bind(*p_3_s_axi_rresp_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_3_s_axi_rresp_mon);
        xsim_sc_channel<0, bool > *p_3_s_axi_rvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_rvalid_mon.bind(*p_3_s_axi_rvalid_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_3_s_axi_rvalid_mon);
        xsim_sc_channel<0, bool > *p_3_s_axi_rready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_rready_mon.bind(*p_3_s_axi_rready_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_3_s_axi_rready_mon);
        sc_inst_4 = new emu_dpa_mon2_0(".emu_wrapper.emu_i.System_DPA.dpa_mon2");
        sc_inst_4->xsim_set_dbg_index(41);
        xsim_sc_channel<0, bool > *p_4_mon_clk = new xsim_sc_channel<0, bool >();
        sc_inst_4->mon_clk.bind(*p_4_mon_clk);
        (*_glb_hdl_sc_channel_map).push_back(p_4_mon_clk);
        xsim_sc_channel<0, bool > *p_4_mon_resetn = new xsim_sc_channel<0, bool >();
        sc_inst_4->mon_resetn.bind(*p_4_mon_resetn);
        (*_glb_hdl_sc_channel_map).push_back(p_4_mon_resetn);
        xsim_sc_channel<0, bool > *p_4_trace_clk = new xsim_sc_channel<0, bool >();
        sc_inst_4->trace_clk.bind(*p_4_trace_clk);
        (*_glb_hdl_sc_channel_map).push_back(p_4_trace_clk);
        xsim_sc_channel<0, bool > *p_4_trace_rst = new xsim_sc_channel<0, bool >();
        sc_inst_4->trace_rst.bind(*p_4_trace_rst);
        (*_glb_hdl_sc_channel_map).push_back(p_4_trace_rst);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_4_s_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_4->s_axi_awaddr.bind(*p_4_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_4_s_axi_awaddr);
        xsim_sc_channel<0, bool > *p_4_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_4->s_axi_awvalid.bind(*p_4_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_4_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_4_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_4->s_axi_awready.bind(*p_4_s_axi_awready);
        p_4_s_axi_awready->set_sv_netview_offsetfromdp(8193736);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_4_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_4->s_axi_wdata.bind(*p_4_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_4_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_4_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_4->s_axi_wstrb.bind(*p_4_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_4_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_4_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_4->s_axi_wvalid.bind(*p_4_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_4_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_4_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_4->s_axi_wready.bind(*p_4_s_axi_wready);
        p_4_s_axi_wready->set_sv_netview_offsetfromdp(8193960);
        xsim_sc_channel<0, bool > *p_4_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_4->s_axi_bvalid.bind(*p_4_s_axi_bvalid);
        p_4_s_axi_bvalid->set_sv_netview_offsetfromdp(8194016);
        xsim_sc_channel<0, bool > *p_4_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_4->s_axi_bready.bind(*p_4_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_4_s_axi_bready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_4_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_4->s_axi_bresp.bind(*p_4_s_axi_bresp);
        p_4_s_axi_bresp->set_sv_netview_offsetfromdp(8194128);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_4_s_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_4->s_axi_araddr.bind(*p_4_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_4_s_axi_araddr);
        xsim_sc_channel<0, bool > *p_4_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_4->s_axi_arvalid.bind(*p_4_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_4_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_4_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_4->s_axi_arready.bind(*p_4_s_axi_arready);
        p_4_s_axi_arready->set_sv_netview_offsetfromdp(8194296);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_4_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_4->s_axi_rdata.bind(*p_4_s_axi_rdata);
        p_4_s_axi_rdata->set_sv_netview_offsetfromdp(8194352);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_4_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_4->s_axi_rresp.bind(*p_4_s_axi_rresp);
        p_4_s_axi_rresp->set_sv_netview_offsetfromdp(8194408);
        xsim_sc_channel<0, bool > *p_4_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_4->s_axi_rvalid.bind(*p_4_s_axi_rvalid);
        p_4_s_axi_rvalid->set_sv_netview_offsetfromdp(8194464);
        xsim_sc_channel<0, bool > *p_4_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_4->s_axi_rready.bind(*p_4_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_4_s_axi_rready);
        xsim_sc_channel<0, bool > *p_4_mon_AWVALID = new xsim_sc_channel<0, bool >();
        sc_inst_4->mon_AWVALID.bind(*p_4_mon_AWVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_4_mon_AWVALID);
        xsim_sc_channel<0, bool > *p_4_mon_AWREADY = new xsim_sc_channel<0, bool >();
        sc_inst_4->mon_AWREADY.bind(*p_4_mon_AWREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_4_mon_AWREADY);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_4_mon_AWADDR = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_4->mon_AWADDR.bind(*p_4_mon_AWADDR);
        (*_glb_hdl_sc_channel_map).push_back(p_4_mon_AWADDR);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_mon_AWID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->mon_AWID.bind(*p_4_mon_AWID);
        (*_glb_hdl_sc_channel_map).push_back(p_4_mon_AWID);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_4_mon_AWLEN = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_4->mon_AWLEN.bind(*p_4_mon_AWLEN);
        (*_glb_hdl_sc_channel_map).push_back(p_4_mon_AWLEN);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_4_mon_AWSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_4->mon_AWSIZE.bind(*p_4_mon_AWSIZE);
        (*_glb_hdl_sc_channel_map).push_back(p_4_mon_AWSIZE);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_4_mon_AWBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_4->mon_AWBURST.bind(*p_4_mon_AWBURST);
        (*_glb_hdl_sc_channel_map).push_back(p_4_mon_AWBURST);
        xsim_sc_channel<0, bool > *p_4_mon_WVALID = new xsim_sc_channel<0, bool >();
        sc_inst_4->mon_WVALID.bind(*p_4_mon_WVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_4_mon_WVALID);
        xsim_sc_channel<0, bool > *p_4_mon_WREADY = new xsim_sc_channel<0, bool >();
        sc_inst_4->mon_WREADY.bind(*p_4_mon_WREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_4_mon_WREADY);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_4_mon_WDATA = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_4->mon_WDATA.bind(*p_4_mon_WDATA);
        (*_glb_hdl_sc_channel_map).push_back(p_4_mon_WDATA);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_4_mon_WSTRB = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_4->mon_WSTRB.bind(*p_4_mon_WSTRB);
        (*_glb_hdl_sc_channel_map).push_back(p_4_mon_WSTRB);
        xsim_sc_channel<0, bool > *p_4_mon_WLAST = new xsim_sc_channel<0, bool >();
        sc_inst_4->mon_WLAST.bind(*p_4_mon_WLAST);
        (*_glb_hdl_sc_channel_map).push_back(p_4_mon_WLAST);
        xsim_sc_channel<0, bool > *p_4_mon_ARVALID = new xsim_sc_channel<0, bool >();
        sc_inst_4->mon_ARVALID.bind(*p_4_mon_ARVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_4_mon_ARVALID);
        xsim_sc_channel<0, bool > *p_4_mon_ARREADY = new xsim_sc_channel<0, bool >();
        sc_inst_4->mon_ARREADY.bind(*p_4_mon_ARREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_4_mon_ARREADY);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_4_mon_ARADDR = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_4->mon_ARADDR.bind(*p_4_mon_ARADDR);
        (*_glb_hdl_sc_channel_map).push_back(p_4_mon_ARADDR);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_mon_ARID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->mon_ARID.bind(*p_4_mon_ARID);
        (*_glb_hdl_sc_channel_map).push_back(p_4_mon_ARID);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_4_mon_ARLEN = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_4->mon_ARLEN.bind(*p_4_mon_ARLEN);
        (*_glb_hdl_sc_channel_map).push_back(p_4_mon_ARLEN);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_4_mon_ARSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_4->mon_ARSIZE.bind(*p_4_mon_ARSIZE);
        (*_glb_hdl_sc_channel_map).push_back(p_4_mon_ARSIZE);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_4_mon_ARBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_4->mon_ARBURST.bind(*p_4_mon_ARBURST);
        (*_glb_hdl_sc_channel_map).push_back(p_4_mon_ARBURST);
        xsim_sc_channel<0, bool > *p_4_mon_RVALID = new xsim_sc_channel<0, bool >();
        sc_inst_4->mon_RVALID.bind(*p_4_mon_RVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_4_mon_RVALID);
        xsim_sc_channel<0, bool > *p_4_mon_RREADY = new xsim_sc_channel<0, bool >();
        sc_inst_4->mon_RREADY.bind(*p_4_mon_RREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_4_mon_RREADY);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_4_mon_RDATA = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_4->mon_RDATA.bind(*p_4_mon_RDATA);
        (*_glb_hdl_sc_channel_map).push_back(p_4_mon_RDATA);
        xsim_sc_channel<0, bool > *p_4_mon_RLAST = new xsim_sc_channel<0, bool >();
        sc_inst_4->mon_RLAST.bind(*p_4_mon_RLAST);
        (*_glb_hdl_sc_channel_map).push_back(p_4_mon_RLAST);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_mon_RID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->mon_RID.bind(*p_4_mon_RID);
        (*_glb_hdl_sc_channel_map).push_back(p_4_mon_RID);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_4_mon_RRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_4->mon_RRESP.bind(*p_4_mon_RRESP);
        (*_glb_hdl_sc_channel_map).push_back(p_4_mon_RRESP);
        xsim_sc_channel<0, bool > *p_4_mon_BVALID = new xsim_sc_channel<0, bool >();
        sc_inst_4->mon_BVALID.bind(*p_4_mon_BVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_4_mon_BVALID);
        xsim_sc_channel<0, bool > *p_4_mon_BREADY = new xsim_sc_channel<0, bool >();
        sc_inst_4->mon_BREADY.bind(*p_4_mon_BREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_4_mon_BREADY);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_4_mon_BRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_4->mon_BRESP.bind(*p_4_mon_BRESP);
        (*_glb_hdl_sc_channel_map).push_back(p_4_mon_BRESP);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_mon_BID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->mon_BID.bind(*p_4_mon_BID);
        (*_glb_hdl_sc_channel_map).push_back(p_4_mon_BID);
        xsim_sc_channel<0, bool > *p_4_m_axis_rd_tready = new xsim_sc_channel<0, bool >();
        sc_inst_4->m_axis_rd_tready.bind(*p_4_m_axis_rd_tready);
        (*_glb_hdl_sc_channel_map).push_back(p_4_m_axis_rd_tready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_4_m_axis_rd_tdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_4->m_axis_rd_tdata.bind(*p_4_m_axis_rd_tdata);
        p_4_m_axis_rd_tdata->set_sv_netview_offsetfromdp(8196256);
        xsim_sc_channel<0, bool > *p_4_m_axis_rd_tlast = new xsim_sc_channel<0, bool >();
        sc_inst_4->m_axis_rd_tlast.bind(*p_4_m_axis_rd_tlast);
        p_4_m_axis_rd_tlast->set_sv_netview_offsetfromdp(8196312);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_4_m_axis_rd_tid = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_4->m_axis_rd_tid.bind(*p_4_m_axis_rd_tid);
        p_4_m_axis_rd_tid->set_sv_netview_offsetfromdp(8196368);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_4_m_axis_rd_tdest = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_4->m_axis_rd_tdest.bind(*p_4_m_axis_rd_tdest);
        p_4_m_axis_rd_tdest->set_sv_netview_offsetfromdp(8196424);
        xsim_sc_channel<0, bool > *p_4_m_axis_wr_tready = new xsim_sc_channel<0, bool >();
        sc_inst_4->m_axis_wr_tready.bind(*p_4_m_axis_wr_tready);
        (*_glb_hdl_sc_channel_map).push_back(p_4_m_axis_wr_tready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_4_m_axis_wr_tdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_4->m_axis_wr_tdata.bind(*p_4_m_axis_wr_tdata);
        p_4_m_axis_wr_tdata->set_sv_netview_offsetfromdp(8196536);
        xsim_sc_channel<0, bool > *p_4_m_axis_wr_tlast = new xsim_sc_channel<0, bool >();
        sc_inst_4->m_axis_wr_tlast.bind(*p_4_m_axis_wr_tlast);
        p_4_m_axis_wr_tlast->set_sv_netview_offsetfromdp(8196592);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_4_m_axis_wr_tid = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_4->m_axis_wr_tid.bind(*p_4_m_axis_wr_tid);
        p_4_m_axis_wr_tid->set_sv_netview_offsetfromdp(8196648);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_4_m_axis_wr_tdest = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_4->m_axis_wr_tdest.bind(*p_4_m_axis_wr_tdest);
        p_4_m_axis_wr_tdest->set_sv_netview_offsetfromdp(8196704);
        xsim_sc_channel<0, bool > *p_4_m_axis_wr_tvalid = new xsim_sc_channel<0, bool >();
        sc_inst_4->m_axis_wr_tvalid.bind(*p_4_m_axis_wr_tvalid);
        p_4_m_axis_wr_tvalid->set_sv_netview_offsetfromdp(8196760);
        xsim_sc_channel<0, bool > *p_4_m_axis_rd_tvalid = new xsim_sc_channel<0, bool >();
        sc_inst_4->m_axis_rd_tvalid.bind(*p_4_m_axis_rd_tvalid);
        p_4_m_axis_rd_tvalid->set_sv_netview_offsetfromdp(8196816);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_4_s_axi_awaddr_mon = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_4->s_axi_awaddr_mon.bind(*p_4_s_axi_awaddr_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_4_s_axi_awaddr_mon);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_4_s_axi_awprot_mon = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_4->s_axi_awprot_mon.bind(*p_4_s_axi_awprot_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_4_s_axi_awprot_mon);
        xsim_sc_channel<0, bool > *p_4_s_axi_awvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_4->s_axi_awvalid_mon.bind(*p_4_s_axi_awvalid_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_4_s_axi_awvalid_mon);
        xsim_sc_channel<0, bool > *p_4_s_axi_awready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_4->s_axi_awready_mon.bind(*p_4_s_axi_awready_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_4_s_axi_awready_mon);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_4_s_axi_wdata_mon = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_4->s_axi_wdata_mon.bind(*p_4_s_axi_wdata_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_4_s_axi_wdata_mon);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_4_s_axi_wstrb_mon = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_4->s_axi_wstrb_mon.bind(*p_4_s_axi_wstrb_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_4_s_axi_wstrb_mon);
        xsim_sc_channel<0, bool > *p_4_s_axi_wvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_4->s_axi_wvalid_mon.bind(*p_4_s_axi_wvalid_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_4_s_axi_wvalid_mon);
        xsim_sc_channel<0, bool > *p_4_s_axi_wready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_4->s_axi_wready_mon.bind(*p_4_s_axi_wready_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_4_s_axi_wready_mon);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_4_s_axi_bresp_mon = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_4->s_axi_bresp_mon.bind(*p_4_s_axi_bresp_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_4_s_axi_bresp_mon);
        xsim_sc_channel<0, bool > *p_4_s_axi_bvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_4->s_axi_bvalid_mon.bind(*p_4_s_axi_bvalid_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_4_s_axi_bvalid_mon);
        xsim_sc_channel<0, bool > *p_4_s_axi_bready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_4->s_axi_bready_mon.bind(*p_4_s_axi_bready_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_4_s_axi_bready_mon);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_4_s_axi_araddr_mon = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_4->s_axi_araddr_mon.bind(*p_4_s_axi_araddr_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_4_s_axi_araddr_mon);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_4_s_axi_arprot_mon = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_4->s_axi_arprot_mon.bind(*p_4_s_axi_arprot_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_4_s_axi_arprot_mon);
        xsim_sc_channel<0, bool > *p_4_s_axi_arvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_4->s_axi_arvalid_mon.bind(*p_4_s_axi_arvalid_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_4_s_axi_arvalid_mon);
        xsim_sc_channel<0, bool > *p_4_s_axi_arready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_4->s_axi_arready_mon.bind(*p_4_s_axi_arready_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_4_s_axi_arready_mon);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_4_s_axi_rdata_mon = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_4->s_axi_rdata_mon.bind(*p_4_s_axi_rdata_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_4_s_axi_rdata_mon);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_4_s_axi_rresp_mon = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_4->s_axi_rresp_mon.bind(*p_4_s_axi_rresp_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_4_s_axi_rresp_mon);
        xsim_sc_channel<0, bool > *p_4_s_axi_rvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_4->s_axi_rvalid_mon.bind(*p_4_s_axi_rvalid_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_4_s_axi_rvalid_mon);
        xsim_sc_channel<0, bool > *p_4_s_axi_rready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_4->s_axi_rready_mon.bind(*p_4_s_axi_rready_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_4_s_axi_rready_mon);
        sc_inst_5 = new emu_dpa_mon3_0(".emu_wrapper.emu_i.System_DPA.dpa_mon3");
        sc_inst_5->xsim_set_dbg_index(42);
        xsim_sc_channel<0, bool > *p_5_mon_clk = new xsim_sc_channel<0, bool >();
        sc_inst_5->mon_clk.bind(*p_5_mon_clk);
        (*_glb_hdl_sc_channel_map).push_back(p_5_mon_clk);
        xsim_sc_channel<0, bool > *p_5_mon_resetn = new xsim_sc_channel<0, bool >();
        sc_inst_5->mon_resetn.bind(*p_5_mon_resetn);
        (*_glb_hdl_sc_channel_map).push_back(p_5_mon_resetn);
        xsim_sc_channel<0, bool > *p_5_trace_clk = new xsim_sc_channel<0, bool >();
        sc_inst_5->trace_clk.bind(*p_5_trace_clk);
        (*_glb_hdl_sc_channel_map).push_back(p_5_trace_clk);
        xsim_sc_channel<0, bool > *p_5_trace_rst = new xsim_sc_channel<0, bool >();
        sc_inst_5->trace_rst.bind(*p_5_trace_rst);
        (*_glb_hdl_sc_channel_map).push_back(p_5_trace_rst);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_5_s_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_5->s_axi_awaddr.bind(*p_5_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_5_s_axi_awaddr);
        xsim_sc_channel<0, bool > *p_5_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_5->s_axi_awvalid.bind(*p_5_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_5_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_5_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_5->s_axi_awready.bind(*p_5_s_axi_awready);
        p_5_s_axi_awready->set_sv_netview_offsetfromdp(8198320);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_5_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_5->s_axi_wdata.bind(*p_5_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_5_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_5_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_5->s_axi_wstrb.bind(*p_5_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_5_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_5_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_5->s_axi_wvalid.bind(*p_5_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_5_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_5_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_5->s_axi_wready.bind(*p_5_s_axi_wready);
        p_5_s_axi_wready->set_sv_netview_offsetfromdp(8198544);
        xsim_sc_channel<0, bool > *p_5_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_5->s_axi_bvalid.bind(*p_5_s_axi_bvalid);
        p_5_s_axi_bvalid->set_sv_netview_offsetfromdp(8198600);
        xsim_sc_channel<0, bool > *p_5_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_5->s_axi_bready.bind(*p_5_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_5_s_axi_bready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_5_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_5->s_axi_bresp.bind(*p_5_s_axi_bresp);
        p_5_s_axi_bresp->set_sv_netview_offsetfromdp(8198712);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_5_s_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_5->s_axi_araddr.bind(*p_5_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_5_s_axi_araddr);
        xsim_sc_channel<0, bool > *p_5_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_5->s_axi_arvalid.bind(*p_5_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_5_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_5_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_5->s_axi_arready.bind(*p_5_s_axi_arready);
        p_5_s_axi_arready->set_sv_netview_offsetfromdp(8198880);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_5_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_5->s_axi_rdata.bind(*p_5_s_axi_rdata);
        p_5_s_axi_rdata->set_sv_netview_offsetfromdp(8198936);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_5_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_5->s_axi_rresp.bind(*p_5_s_axi_rresp);
        p_5_s_axi_rresp->set_sv_netview_offsetfromdp(8198992);
        xsim_sc_channel<0, bool > *p_5_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_5->s_axi_rvalid.bind(*p_5_s_axi_rvalid);
        p_5_s_axi_rvalid->set_sv_netview_offsetfromdp(8199048);
        xsim_sc_channel<0, bool > *p_5_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_5->s_axi_rready.bind(*p_5_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_5_s_axi_rready);
        xsim_sc_channel<0, bool > *p_5_mon_AWVALID = new xsim_sc_channel<0, bool >();
        sc_inst_5->mon_AWVALID.bind(*p_5_mon_AWVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_5_mon_AWVALID);
        xsim_sc_channel<0, bool > *p_5_mon_AWREADY = new xsim_sc_channel<0, bool >();
        sc_inst_5->mon_AWREADY.bind(*p_5_mon_AWREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_5_mon_AWREADY);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_5_mon_AWADDR = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_5->mon_AWADDR.bind(*p_5_mon_AWADDR);
        (*_glb_hdl_sc_channel_map).push_back(p_5_mon_AWADDR);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_mon_AWID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->mon_AWID.bind(*p_5_mon_AWID);
        (*_glb_hdl_sc_channel_map).push_back(p_5_mon_AWID);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_5_mon_AWLEN = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_5->mon_AWLEN.bind(*p_5_mon_AWLEN);
        (*_glb_hdl_sc_channel_map).push_back(p_5_mon_AWLEN);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_5_mon_AWSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_5->mon_AWSIZE.bind(*p_5_mon_AWSIZE);
        (*_glb_hdl_sc_channel_map).push_back(p_5_mon_AWSIZE);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_5_mon_AWBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_5->mon_AWBURST.bind(*p_5_mon_AWBURST);
        (*_glb_hdl_sc_channel_map).push_back(p_5_mon_AWBURST);
        xsim_sc_channel<0, bool > *p_5_mon_WVALID = new xsim_sc_channel<0, bool >();
        sc_inst_5->mon_WVALID.bind(*p_5_mon_WVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_5_mon_WVALID);
        xsim_sc_channel<0, bool > *p_5_mon_WREADY = new xsim_sc_channel<0, bool >();
        sc_inst_5->mon_WREADY.bind(*p_5_mon_WREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_5_mon_WREADY);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_5_mon_WDATA = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_5->mon_WDATA.bind(*p_5_mon_WDATA);
        (*_glb_hdl_sc_channel_map).push_back(p_5_mon_WDATA);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_5_mon_WSTRB = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_5->mon_WSTRB.bind(*p_5_mon_WSTRB);
        (*_glb_hdl_sc_channel_map).push_back(p_5_mon_WSTRB);
        xsim_sc_channel<0, bool > *p_5_mon_WLAST = new xsim_sc_channel<0, bool >();
        sc_inst_5->mon_WLAST.bind(*p_5_mon_WLAST);
        (*_glb_hdl_sc_channel_map).push_back(p_5_mon_WLAST);
        xsim_sc_channel<0, bool > *p_5_mon_ARVALID = new xsim_sc_channel<0, bool >();
        sc_inst_5->mon_ARVALID.bind(*p_5_mon_ARVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_5_mon_ARVALID);
        xsim_sc_channel<0, bool > *p_5_mon_ARREADY = new xsim_sc_channel<0, bool >();
        sc_inst_5->mon_ARREADY.bind(*p_5_mon_ARREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_5_mon_ARREADY);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_5_mon_ARADDR = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_5->mon_ARADDR.bind(*p_5_mon_ARADDR);
        (*_glb_hdl_sc_channel_map).push_back(p_5_mon_ARADDR);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_mon_ARID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->mon_ARID.bind(*p_5_mon_ARID);
        (*_glb_hdl_sc_channel_map).push_back(p_5_mon_ARID);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_5_mon_ARLEN = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_5->mon_ARLEN.bind(*p_5_mon_ARLEN);
        (*_glb_hdl_sc_channel_map).push_back(p_5_mon_ARLEN);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_5_mon_ARSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_5->mon_ARSIZE.bind(*p_5_mon_ARSIZE);
        (*_glb_hdl_sc_channel_map).push_back(p_5_mon_ARSIZE);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_5_mon_ARBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_5->mon_ARBURST.bind(*p_5_mon_ARBURST);
        (*_glb_hdl_sc_channel_map).push_back(p_5_mon_ARBURST);
        xsim_sc_channel<0, bool > *p_5_mon_RVALID = new xsim_sc_channel<0, bool >();
        sc_inst_5->mon_RVALID.bind(*p_5_mon_RVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_5_mon_RVALID);
        xsim_sc_channel<0, bool > *p_5_mon_RREADY = new xsim_sc_channel<0, bool >();
        sc_inst_5->mon_RREADY.bind(*p_5_mon_RREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_5_mon_RREADY);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_5_mon_RDATA = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_5->mon_RDATA.bind(*p_5_mon_RDATA);
        (*_glb_hdl_sc_channel_map).push_back(p_5_mon_RDATA);
        xsim_sc_channel<0, bool > *p_5_mon_RLAST = new xsim_sc_channel<0, bool >();
        sc_inst_5->mon_RLAST.bind(*p_5_mon_RLAST);
        (*_glb_hdl_sc_channel_map).push_back(p_5_mon_RLAST);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_mon_RID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->mon_RID.bind(*p_5_mon_RID);
        (*_glb_hdl_sc_channel_map).push_back(p_5_mon_RID);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_5_mon_RRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_5->mon_RRESP.bind(*p_5_mon_RRESP);
        (*_glb_hdl_sc_channel_map).push_back(p_5_mon_RRESP);
        xsim_sc_channel<0, bool > *p_5_mon_BVALID = new xsim_sc_channel<0, bool >();
        sc_inst_5->mon_BVALID.bind(*p_5_mon_BVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_5_mon_BVALID);
        xsim_sc_channel<0, bool > *p_5_mon_BREADY = new xsim_sc_channel<0, bool >();
        sc_inst_5->mon_BREADY.bind(*p_5_mon_BREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_5_mon_BREADY);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_5_mon_BRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_5->mon_BRESP.bind(*p_5_mon_BRESP);
        (*_glb_hdl_sc_channel_map).push_back(p_5_mon_BRESP);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_mon_BID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->mon_BID.bind(*p_5_mon_BID);
        (*_glb_hdl_sc_channel_map).push_back(p_5_mon_BID);
        xsim_sc_channel<0, bool > *p_5_m_axis_rd_tready = new xsim_sc_channel<0, bool >();
        sc_inst_5->m_axis_rd_tready.bind(*p_5_m_axis_rd_tready);
        (*_glb_hdl_sc_channel_map).push_back(p_5_m_axis_rd_tready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_5_m_axis_rd_tdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_5->m_axis_rd_tdata.bind(*p_5_m_axis_rd_tdata);
        p_5_m_axis_rd_tdata->set_sv_netview_offsetfromdp(8200840);
        xsim_sc_channel<0, bool > *p_5_m_axis_rd_tlast = new xsim_sc_channel<0, bool >();
        sc_inst_5->m_axis_rd_tlast.bind(*p_5_m_axis_rd_tlast);
        p_5_m_axis_rd_tlast->set_sv_netview_offsetfromdp(8200896);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_5_m_axis_rd_tid = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_5->m_axis_rd_tid.bind(*p_5_m_axis_rd_tid);
        p_5_m_axis_rd_tid->set_sv_netview_offsetfromdp(8200952);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_5_m_axis_rd_tdest = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_5->m_axis_rd_tdest.bind(*p_5_m_axis_rd_tdest);
        p_5_m_axis_rd_tdest->set_sv_netview_offsetfromdp(8201008);
        xsim_sc_channel<0, bool > *p_5_m_axis_wr_tready = new xsim_sc_channel<0, bool >();
        sc_inst_5->m_axis_wr_tready.bind(*p_5_m_axis_wr_tready);
        (*_glb_hdl_sc_channel_map).push_back(p_5_m_axis_wr_tready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_5_m_axis_wr_tdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_5->m_axis_wr_tdata.bind(*p_5_m_axis_wr_tdata);
        p_5_m_axis_wr_tdata->set_sv_netview_offsetfromdp(8201120);
        xsim_sc_channel<0, bool > *p_5_m_axis_wr_tlast = new xsim_sc_channel<0, bool >();
        sc_inst_5->m_axis_wr_tlast.bind(*p_5_m_axis_wr_tlast);
        p_5_m_axis_wr_tlast->set_sv_netview_offsetfromdp(8201176);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_5_m_axis_wr_tid = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_5->m_axis_wr_tid.bind(*p_5_m_axis_wr_tid);
        p_5_m_axis_wr_tid->set_sv_netview_offsetfromdp(8201232);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_5_m_axis_wr_tdest = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_5->m_axis_wr_tdest.bind(*p_5_m_axis_wr_tdest);
        p_5_m_axis_wr_tdest->set_sv_netview_offsetfromdp(8201288);
        xsim_sc_channel<0, bool > *p_5_m_axis_wr_tvalid = new xsim_sc_channel<0, bool >();
        sc_inst_5->m_axis_wr_tvalid.bind(*p_5_m_axis_wr_tvalid);
        p_5_m_axis_wr_tvalid->set_sv_netview_offsetfromdp(8201344);
        xsim_sc_channel<0, bool > *p_5_m_axis_rd_tvalid = new xsim_sc_channel<0, bool >();
        sc_inst_5->m_axis_rd_tvalid.bind(*p_5_m_axis_rd_tvalid);
        p_5_m_axis_rd_tvalid->set_sv_netview_offsetfromdp(8201400);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_5_s_axi_awaddr_mon = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_5->s_axi_awaddr_mon.bind(*p_5_s_axi_awaddr_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_5_s_axi_awaddr_mon);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_5_s_axi_awprot_mon = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_5->s_axi_awprot_mon.bind(*p_5_s_axi_awprot_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_5_s_axi_awprot_mon);
        xsim_sc_channel<0, bool > *p_5_s_axi_awvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_5->s_axi_awvalid_mon.bind(*p_5_s_axi_awvalid_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_5_s_axi_awvalid_mon);
        xsim_sc_channel<0, bool > *p_5_s_axi_awready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_5->s_axi_awready_mon.bind(*p_5_s_axi_awready_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_5_s_axi_awready_mon);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_5_s_axi_wdata_mon = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_5->s_axi_wdata_mon.bind(*p_5_s_axi_wdata_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_5_s_axi_wdata_mon);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_5_s_axi_wstrb_mon = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_5->s_axi_wstrb_mon.bind(*p_5_s_axi_wstrb_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_5_s_axi_wstrb_mon);
        xsim_sc_channel<0, bool > *p_5_s_axi_wvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_5->s_axi_wvalid_mon.bind(*p_5_s_axi_wvalid_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_5_s_axi_wvalid_mon);
        xsim_sc_channel<0, bool > *p_5_s_axi_wready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_5->s_axi_wready_mon.bind(*p_5_s_axi_wready_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_5_s_axi_wready_mon);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_5_s_axi_bresp_mon = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_5->s_axi_bresp_mon.bind(*p_5_s_axi_bresp_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_5_s_axi_bresp_mon);
        xsim_sc_channel<0, bool > *p_5_s_axi_bvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_5->s_axi_bvalid_mon.bind(*p_5_s_axi_bvalid_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_5_s_axi_bvalid_mon);
        xsim_sc_channel<0, bool > *p_5_s_axi_bready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_5->s_axi_bready_mon.bind(*p_5_s_axi_bready_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_5_s_axi_bready_mon);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_5_s_axi_araddr_mon = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_5->s_axi_araddr_mon.bind(*p_5_s_axi_araddr_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_5_s_axi_araddr_mon);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_5_s_axi_arprot_mon = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_5->s_axi_arprot_mon.bind(*p_5_s_axi_arprot_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_5_s_axi_arprot_mon);
        xsim_sc_channel<0, bool > *p_5_s_axi_arvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_5->s_axi_arvalid_mon.bind(*p_5_s_axi_arvalid_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_5_s_axi_arvalid_mon);
        xsim_sc_channel<0, bool > *p_5_s_axi_arready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_5->s_axi_arready_mon.bind(*p_5_s_axi_arready_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_5_s_axi_arready_mon);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_5_s_axi_rdata_mon = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_5->s_axi_rdata_mon.bind(*p_5_s_axi_rdata_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_5_s_axi_rdata_mon);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_5_s_axi_rresp_mon = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_5->s_axi_rresp_mon.bind(*p_5_s_axi_rresp_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_5_s_axi_rresp_mon);
        xsim_sc_channel<0, bool > *p_5_s_axi_rvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_5->s_axi_rvalid_mon.bind(*p_5_s_axi_rvalid_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_5_s_axi_rvalid_mon);
        xsim_sc_channel<0, bool > *p_5_s_axi_rready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_5->s_axi_rready_mon.bind(*p_5_s_axi_rready_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_5_s_axi_rready_mon);
        sc_inst_6 = new emu_dpa_mon4_0(".emu_wrapper.emu_i.System_DPA.dpa_mon4");
        sc_inst_6->xsim_set_dbg_index(43);
        xsim_sc_channel<0, bool > *p_6_mon_clk = new xsim_sc_channel<0, bool >();
        sc_inst_6->mon_clk.bind(*p_6_mon_clk);
        (*_glb_hdl_sc_channel_map).push_back(p_6_mon_clk);
        xsim_sc_channel<0, bool > *p_6_mon_resetn = new xsim_sc_channel<0, bool >();
        sc_inst_6->mon_resetn.bind(*p_6_mon_resetn);
        (*_glb_hdl_sc_channel_map).push_back(p_6_mon_resetn);
        xsim_sc_channel<0, bool > *p_6_trace_clk = new xsim_sc_channel<0, bool >();
        sc_inst_6->trace_clk.bind(*p_6_trace_clk);
        (*_glb_hdl_sc_channel_map).push_back(p_6_trace_clk);
        xsim_sc_channel<0, bool > *p_6_trace_rst = new xsim_sc_channel<0, bool >();
        sc_inst_6->trace_rst.bind(*p_6_trace_rst);
        (*_glb_hdl_sc_channel_map).push_back(p_6_trace_rst);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_6_s_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_6->s_axi_awaddr.bind(*p_6_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_6_s_axi_awaddr);
        xsim_sc_channel<0, bool > *p_6_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_6->s_axi_awvalid.bind(*p_6_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_6_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_6_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_6->s_axi_awready.bind(*p_6_s_axi_awready);
        p_6_s_axi_awready->set_sv_netview_offsetfromdp(8202904);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_6_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_6->s_axi_wdata.bind(*p_6_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_6_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_6_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_6->s_axi_wstrb.bind(*p_6_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_6_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_6_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_6->s_axi_wvalid.bind(*p_6_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_6_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_6_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_6->s_axi_wready.bind(*p_6_s_axi_wready);
        p_6_s_axi_wready->set_sv_netview_offsetfromdp(8203128);
        xsim_sc_channel<0, bool > *p_6_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_6->s_axi_bvalid.bind(*p_6_s_axi_bvalid);
        p_6_s_axi_bvalid->set_sv_netview_offsetfromdp(8203184);
        xsim_sc_channel<0, bool > *p_6_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_6->s_axi_bready.bind(*p_6_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_6_s_axi_bready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_6_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_6->s_axi_bresp.bind(*p_6_s_axi_bresp);
        p_6_s_axi_bresp->set_sv_netview_offsetfromdp(8203296);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_6_s_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_6->s_axi_araddr.bind(*p_6_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_6_s_axi_araddr);
        xsim_sc_channel<0, bool > *p_6_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_6->s_axi_arvalid.bind(*p_6_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_6_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_6_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_6->s_axi_arready.bind(*p_6_s_axi_arready);
        p_6_s_axi_arready->set_sv_netview_offsetfromdp(8203464);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_6_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_6->s_axi_rdata.bind(*p_6_s_axi_rdata);
        p_6_s_axi_rdata->set_sv_netview_offsetfromdp(8203520);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_6_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_6->s_axi_rresp.bind(*p_6_s_axi_rresp);
        p_6_s_axi_rresp->set_sv_netview_offsetfromdp(8203576);
        xsim_sc_channel<0, bool > *p_6_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_6->s_axi_rvalid.bind(*p_6_s_axi_rvalid);
        p_6_s_axi_rvalid->set_sv_netview_offsetfromdp(8203632);
        xsim_sc_channel<0, bool > *p_6_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_6->s_axi_rready.bind(*p_6_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_6_s_axi_rready);
        xsim_sc_channel<0, bool > *p_6_mon_AWVALID = new xsim_sc_channel<0, bool >();
        sc_inst_6->mon_AWVALID.bind(*p_6_mon_AWVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_6_mon_AWVALID);
        xsim_sc_channel<0, bool > *p_6_mon_AWREADY = new xsim_sc_channel<0, bool >();
        sc_inst_6->mon_AWREADY.bind(*p_6_mon_AWREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_6_mon_AWREADY);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_6_mon_AWADDR = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_6->mon_AWADDR.bind(*p_6_mon_AWADDR);
        (*_glb_hdl_sc_channel_map).push_back(p_6_mon_AWADDR);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_mon_AWID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->mon_AWID.bind(*p_6_mon_AWID);
        (*_glb_hdl_sc_channel_map).push_back(p_6_mon_AWID);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_6_mon_AWLEN = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_6->mon_AWLEN.bind(*p_6_mon_AWLEN);
        (*_glb_hdl_sc_channel_map).push_back(p_6_mon_AWLEN);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_6_mon_AWSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_6->mon_AWSIZE.bind(*p_6_mon_AWSIZE);
        (*_glb_hdl_sc_channel_map).push_back(p_6_mon_AWSIZE);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_6_mon_AWBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_6->mon_AWBURST.bind(*p_6_mon_AWBURST);
        (*_glb_hdl_sc_channel_map).push_back(p_6_mon_AWBURST);
        xsim_sc_channel<0, bool > *p_6_mon_WVALID = new xsim_sc_channel<0, bool >();
        sc_inst_6->mon_WVALID.bind(*p_6_mon_WVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_6_mon_WVALID);
        xsim_sc_channel<0, bool > *p_6_mon_WREADY = new xsim_sc_channel<0, bool >();
        sc_inst_6->mon_WREADY.bind(*p_6_mon_WREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_6_mon_WREADY);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_6_mon_WDATA = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_6->mon_WDATA.bind(*p_6_mon_WDATA);
        (*_glb_hdl_sc_channel_map).push_back(p_6_mon_WDATA);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_6_mon_WSTRB = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_6->mon_WSTRB.bind(*p_6_mon_WSTRB);
        (*_glb_hdl_sc_channel_map).push_back(p_6_mon_WSTRB);
        xsim_sc_channel<0, bool > *p_6_mon_WLAST = new xsim_sc_channel<0, bool >();
        sc_inst_6->mon_WLAST.bind(*p_6_mon_WLAST);
        (*_glb_hdl_sc_channel_map).push_back(p_6_mon_WLAST);
        xsim_sc_channel<0, bool > *p_6_mon_ARVALID = new xsim_sc_channel<0, bool >();
        sc_inst_6->mon_ARVALID.bind(*p_6_mon_ARVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_6_mon_ARVALID);
        xsim_sc_channel<0, bool > *p_6_mon_ARREADY = new xsim_sc_channel<0, bool >();
        sc_inst_6->mon_ARREADY.bind(*p_6_mon_ARREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_6_mon_ARREADY);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_6_mon_ARADDR = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_6->mon_ARADDR.bind(*p_6_mon_ARADDR);
        (*_glb_hdl_sc_channel_map).push_back(p_6_mon_ARADDR);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_mon_ARID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->mon_ARID.bind(*p_6_mon_ARID);
        (*_glb_hdl_sc_channel_map).push_back(p_6_mon_ARID);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_6_mon_ARLEN = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_6->mon_ARLEN.bind(*p_6_mon_ARLEN);
        (*_glb_hdl_sc_channel_map).push_back(p_6_mon_ARLEN);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_6_mon_ARSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_6->mon_ARSIZE.bind(*p_6_mon_ARSIZE);
        (*_glb_hdl_sc_channel_map).push_back(p_6_mon_ARSIZE);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_6_mon_ARBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_6->mon_ARBURST.bind(*p_6_mon_ARBURST);
        (*_glb_hdl_sc_channel_map).push_back(p_6_mon_ARBURST);
        xsim_sc_channel<0, bool > *p_6_mon_RVALID = new xsim_sc_channel<0, bool >();
        sc_inst_6->mon_RVALID.bind(*p_6_mon_RVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_6_mon_RVALID);
        xsim_sc_channel<0, bool > *p_6_mon_RREADY = new xsim_sc_channel<0, bool >();
        sc_inst_6->mon_RREADY.bind(*p_6_mon_RREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_6_mon_RREADY);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_6_mon_RDATA = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_6->mon_RDATA.bind(*p_6_mon_RDATA);
        (*_glb_hdl_sc_channel_map).push_back(p_6_mon_RDATA);
        xsim_sc_channel<0, bool > *p_6_mon_RLAST = new xsim_sc_channel<0, bool >();
        sc_inst_6->mon_RLAST.bind(*p_6_mon_RLAST);
        (*_glb_hdl_sc_channel_map).push_back(p_6_mon_RLAST);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_mon_RID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->mon_RID.bind(*p_6_mon_RID);
        (*_glb_hdl_sc_channel_map).push_back(p_6_mon_RID);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_6_mon_RRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_6->mon_RRESP.bind(*p_6_mon_RRESP);
        (*_glb_hdl_sc_channel_map).push_back(p_6_mon_RRESP);
        xsim_sc_channel<0, bool > *p_6_mon_BVALID = new xsim_sc_channel<0, bool >();
        sc_inst_6->mon_BVALID.bind(*p_6_mon_BVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_6_mon_BVALID);
        xsim_sc_channel<0, bool > *p_6_mon_BREADY = new xsim_sc_channel<0, bool >();
        sc_inst_6->mon_BREADY.bind(*p_6_mon_BREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_6_mon_BREADY);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_6_mon_BRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_6->mon_BRESP.bind(*p_6_mon_BRESP);
        (*_glb_hdl_sc_channel_map).push_back(p_6_mon_BRESP);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_mon_BID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->mon_BID.bind(*p_6_mon_BID);
        (*_glb_hdl_sc_channel_map).push_back(p_6_mon_BID);
        xsim_sc_channel<0, bool > *p_6_m_axis_rd_tready = new xsim_sc_channel<0, bool >();
        sc_inst_6->m_axis_rd_tready.bind(*p_6_m_axis_rd_tready);
        (*_glb_hdl_sc_channel_map).push_back(p_6_m_axis_rd_tready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_6_m_axis_rd_tdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_6->m_axis_rd_tdata.bind(*p_6_m_axis_rd_tdata);
        p_6_m_axis_rd_tdata->set_sv_netview_offsetfromdp(8205424);
        xsim_sc_channel<0, bool > *p_6_m_axis_rd_tlast = new xsim_sc_channel<0, bool >();
        sc_inst_6->m_axis_rd_tlast.bind(*p_6_m_axis_rd_tlast);
        p_6_m_axis_rd_tlast->set_sv_netview_offsetfromdp(8205480);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_6_m_axis_rd_tid = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_6->m_axis_rd_tid.bind(*p_6_m_axis_rd_tid);
        p_6_m_axis_rd_tid->set_sv_netview_offsetfromdp(8205536);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_6_m_axis_rd_tdest = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_6->m_axis_rd_tdest.bind(*p_6_m_axis_rd_tdest);
        p_6_m_axis_rd_tdest->set_sv_netview_offsetfromdp(8205592);
        xsim_sc_channel<0, bool > *p_6_m_axis_wr_tready = new xsim_sc_channel<0, bool >();
        sc_inst_6->m_axis_wr_tready.bind(*p_6_m_axis_wr_tready);
        (*_glb_hdl_sc_channel_map).push_back(p_6_m_axis_wr_tready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_6_m_axis_wr_tdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_6->m_axis_wr_tdata.bind(*p_6_m_axis_wr_tdata);
        p_6_m_axis_wr_tdata->set_sv_netview_offsetfromdp(8205704);
        xsim_sc_channel<0, bool > *p_6_m_axis_wr_tlast = new xsim_sc_channel<0, bool >();
        sc_inst_6->m_axis_wr_tlast.bind(*p_6_m_axis_wr_tlast);
        p_6_m_axis_wr_tlast->set_sv_netview_offsetfromdp(8205760);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_6_m_axis_wr_tid = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_6->m_axis_wr_tid.bind(*p_6_m_axis_wr_tid);
        p_6_m_axis_wr_tid->set_sv_netview_offsetfromdp(8205816);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_6_m_axis_wr_tdest = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_6->m_axis_wr_tdest.bind(*p_6_m_axis_wr_tdest);
        p_6_m_axis_wr_tdest->set_sv_netview_offsetfromdp(8205872);
        xsim_sc_channel<0, bool > *p_6_m_axis_wr_tvalid = new xsim_sc_channel<0, bool >();
        sc_inst_6->m_axis_wr_tvalid.bind(*p_6_m_axis_wr_tvalid);
        p_6_m_axis_wr_tvalid->set_sv_netview_offsetfromdp(8205928);
        xsim_sc_channel<0, bool > *p_6_m_axis_rd_tvalid = new xsim_sc_channel<0, bool >();
        sc_inst_6->m_axis_rd_tvalid.bind(*p_6_m_axis_rd_tvalid);
        p_6_m_axis_rd_tvalid->set_sv_netview_offsetfromdp(8205984);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_6_s_axi_awaddr_mon = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_6->s_axi_awaddr_mon.bind(*p_6_s_axi_awaddr_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_6_s_axi_awaddr_mon);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_6_s_axi_awprot_mon = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_6->s_axi_awprot_mon.bind(*p_6_s_axi_awprot_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_6_s_axi_awprot_mon);
        xsim_sc_channel<0, bool > *p_6_s_axi_awvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_6->s_axi_awvalid_mon.bind(*p_6_s_axi_awvalid_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_6_s_axi_awvalid_mon);
        xsim_sc_channel<0, bool > *p_6_s_axi_awready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_6->s_axi_awready_mon.bind(*p_6_s_axi_awready_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_6_s_axi_awready_mon);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_6_s_axi_wdata_mon = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_6->s_axi_wdata_mon.bind(*p_6_s_axi_wdata_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_6_s_axi_wdata_mon);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_6_s_axi_wstrb_mon = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_6->s_axi_wstrb_mon.bind(*p_6_s_axi_wstrb_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_6_s_axi_wstrb_mon);
        xsim_sc_channel<0, bool > *p_6_s_axi_wvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_6->s_axi_wvalid_mon.bind(*p_6_s_axi_wvalid_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_6_s_axi_wvalid_mon);
        xsim_sc_channel<0, bool > *p_6_s_axi_wready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_6->s_axi_wready_mon.bind(*p_6_s_axi_wready_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_6_s_axi_wready_mon);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_6_s_axi_bresp_mon = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_6->s_axi_bresp_mon.bind(*p_6_s_axi_bresp_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_6_s_axi_bresp_mon);
        xsim_sc_channel<0, bool > *p_6_s_axi_bvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_6->s_axi_bvalid_mon.bind(*p_6_s_axi_bvalid_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_6_s_axi_bvalid_mon);
        xsim_sc_channel<0, bool > *p_6_s_axi_bready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_6->s_axi_bready_mon.bind(*p_6_s_axi_bready_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_6_s_axi_bready_mon);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_6_s_axi_araddr_mon = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_6->s_axi_araddr_mon.bind(*p_6_s_axi_araddr_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_6_s_axi_araddr_mon);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_6_s_axi_arprot_mon = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_6->s_axi_arprot_mon.bind(*p_6_s_axi_arprot_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_6_s_axi_arprot_mon);
        xsim_sc_channel<0, bool > *p_6_s_axi_arvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_6->s_axi_arvalid_mon.bind(*p_6_s_axi_arvalid_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_6_s_axi_arvalid_mon);
        xsim_sc_channel<0, bool > *p_6_s_axi_arready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_6->s_axi_arready_mon.bind(*p_6_s_axi_arready_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_6_s_axi_arready_mon);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_6_s_axi_rdata_mon = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_6->s_axi_rdata_mon.bind(*p_6_s_axi_rdata_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_6_s_axi_rdata_mon);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_6_s_axi_rresp_mon = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_6->s_axi_rresp_mon.bind(*p_6_s_axi_rresp_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_6_s_axi_rresp_mon);
        xsim_sc_channel<0, bool > *p_6_s_axi_rvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_6->s_axi_rvalid_mon.bind(*p_6_s_axi_rvalid_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_6_s_axi_rvalid_mon);
        xsim_sc_channel<0, bool > *p_6_s_axi_rready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_6->s_axi_rready_mon.bind(*p_6_s_axi_rready_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_6_s_axi_rready_mon);
        sc_inst_7 = new emu_dpa_mon5_0(".emu_wrapper.emu_i.System_DPA.dpa_mon5");
        sc_inst_7->xsim_set_dbg_index(44);
        xsim_sc_channel<0, bool > *p_7_mon_clk = new xsim_sc_channel<0, bool >();
        sc_inst_7->mon_clk.bind(*p_7_mon_clk);
        (*_glb_hdl_sc_channel_map).push_back(p_7_mon_clk);
        xsim_sc_channel<0, bool > *p_7_mon_resetn = new xsim_sc_channel<0, bool >();
        sc_inst_7->mon_resetn.bind(*p_7_mon_resetn);
        (*_glb_hdl_sc_channel_map).push_back(p_7_mon_resetn);
        xsim_sc_channel<0, bool > *p_7_trace_clk = new xsim_sc_channel<0, bool >();
        sc_inst_7->trace_clk.bind(*p_7_trace_clk);
        (*_glb_hdl_sc_channel_map).push_back(p_7_trace_clk);
        xsim_sc_channel<0, bool > *p_7_trace_rst = new xsim_sc_channel<0, bool >();
        sc_inst_7->trace_rst.bind(*p_7_trace_rst);
        (*_glb_hdl_sc_channel_map).push_back(p_7_trace_rst);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_7_s_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_7->s_axi_awaddr.bind(*p_7_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_axi_awaddr);
        xsim_sc_channel<0, bool > *p_7_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_7->s_axi_awvalid.bind(*p_7_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_7_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_7->s_axi_awready.bind(*p_7_s_axi_awready);
        p_7_s_axi_awready->set_sv_netview_offsetfromdp(8207488);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_7_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_7->s_axi_wdata.bind(*p_7_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_7_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_7->s_axi_wstrb.bind(*p_7_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_7_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_7->s_axi_wvalid.bind(*p_7_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_7_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_7->s_axi_wready.bind(*p_7_s_axi_wready);
        p_7_s_axi_wready->set_sv_netview_offsetfromdp(8207712);
        xsim_sc_channel<0, bool > *p_7_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_7->s_axi_bvalid.bind(*p_7_s_axi_bvalid);
        p_7_s_axi_bvalid->set_sv_netview_offsetfromdp(8207768);
        xsim_sc_channel<0, bool > *p_7_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_7->s_axi_bready.bind(*p_7_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_axi_bready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_7_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_7->s_axi_bresp.bind(*p_7_s_axi_bresp);
        p_7_s_axi_bresp->set_sv_netview_offsetfromdp(8207880);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_7_s_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_7->s_axi_araddr.bind(*p_7_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_axi_araddr);
        xsim_sc_channel<0, bool > *p_7_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_7->s_axi_arvalid.bind(*p_7_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_7_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_7->s_axi_arready.bind(*p_7_s_axi_arready);
        p_7_s_axi_arready->set_sv_netview_offsetfromdp(8208048);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_7_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_7->s_axi_rdata.bind(*p_7_s_axi_rdata);
        p_7_s_axi_rdata->set_sv_netview_offsetfromdp(8208104);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_7_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_7->s_axi_rresp.bind(*p_7_s_axi_rresp);
        p_7_s_axi_rresp->set_sv_netview_offsetfromdp(8208160);
        xsim_sc_channel<0, bool > *p_7_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_7->s_axi_rvalid.bind(*p_7_s_axi_rvalid);
        p_7_s_axi_rvalid->set_sv_netview_offsetfromdp(8208216);
        xsim_sc_channel<0, bool > *p_7_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_7->s_axi_rready.bind(*p_7_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_axi_rready);
        xsim_sc_channel<0, bool > *p_7_mon_AWVALID = new xsim_sc_channel<0, bool >();
        sc_inst_7->mon_AWVALID.bind(*p_7_mon_AWVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_7_mon_AWVALID);
        xsim_sc_channel<0, bool > *p_7_mon_AWREADY = new xsim_sc_channel<0, bool >();
        sc_inst_7->mon_AWREADY.bind(*p_7_mon_AWREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_7_mon_AWREADY);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_7_mon_AWADDR = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_7->mon_AWADDR.bind(*p_7_mon_AWADDR);
        (*_glb_hdl_sc_channel_map).push_back(p_7_mon_AWADDR);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_7_mon_AWID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_7->mon_AWID.bind(*p_7_mon_AWID);
        (*_glb_hdl_sc_channel_map).push_back(p_7_mon_AWID);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_7_mon_AWLEN = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_7->mon_AWLEN.bind(*p_7_mon_AWLEN);
        (*_glb_hdl_sc_channel_map).push_back(p_7_mon_AWLEN);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_7_mon_AWSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_7->mon_AWSIZE.bind(*p_7_mon_AWSIZE);
        (*_glb_hdl_sc_channel_map).push_back(p_7_mon_AWSIZE);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_7_mon_AWBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_7->mon_AWBURST.bind(*p_7_mon_AWBURST);
        (*_glb_hdl_sc_channel_map).push_back(p_7_mon_AWBURST);
        xsim_sc_channel<0, bool > *p_7_mon_WVALID = new xsim_sc_channel<0, bool >();
        sc_inst_7->mon_WVALID.bind(*p_7_mon_WVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_7_mon_WVALID);
        xsim_sc_channel<0, bool > *p_7_mon_WREADY = new xsim_sc_channel<0, bool >();
        sc_inst_7->mon_WREADY.bind(*p_7_mon_WREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_7_mon_WREADY);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_7_mon_WDATA = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_7->mon_WDATA.bind(*p_7_mon_WDATA);
        (*_glb_hdl_sc_channel_map).push_back(p_7_mon_WDATA);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_7_mon_WSTRB = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_7->mon_WSTRB.bind(*p_7_mon_WSTRB);
        (*_glb_hdl_sc_channel_map).push_back(p_7_mon_WSTRB);
        xsim_sc_channel<0, bool > *p_7_mon_WLAST = new xsim_sc_channel<0, bool >();
        sc_inst_7->mon_WLAST.bind(*p_7_mon_WLAST);
        (*_glb_hdl_sc_channel_map).push_back(p_7_mon_WLAST);
        xsim_sc_channel<0, bool > *p_7_mon_ARVALID = new xsim_sc_channel<0, bool >();
        sc_inst_7->mon_ARVALID.bind(*p_7_mon_ARVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_7_mon_ARVALID);
        xsim_sc_channel<0, bool > *p_7_mon_ARREADY = new xsim_sc_channel<0, bool >();
        sc_inst_7->mon_ARREADY.bind(*p_7_mon_ARREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_7_mon_ARREADY);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_7_mon_ARADDR = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_7->mon_ARADDR.bind(*p_7_mon_ARADDR);
        (*_glb_hdl_sc_channel_map).push_back(p_7_mon_ARADDR);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_7_mon_ARID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_7->mon_ARID.bind(*p_7_mon_ARID);
        (*_glb_hdl_sc_channel_map).push_back(p_7_mon_ARID);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_7_mon_ARLEN = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_7->mon_ARLEN.bind(*p_7_mon_ARLEN);
        (*_glb_hdl_sc_channel_map).push_back(p_7_mon_ARLEN);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_7_mon_ARSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_7->mon_ARSIZE.bind(*p_7_mon_ARSIZE);
        (*_glb_hdl_sc_channel_map).push_back(p_7_mon_ARSIZE);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_7_mon_ARBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_7->mon_ARBURST.bind(*p_7_mon_ARBURST);
        (*_glb_hdl_sc_channel_map).push_back(p_7_mon_ARBURST);
        xsim_sc_channel<0, bool > *p_7_mon_RVALID = new xsim_sc_channel<0, bool >();
        sc_inst_7->mon_RVALID.bind(*p_7_mon_RVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_7_mon_RVALID);
        xsim_sc_channel<0, bool > *p_7_mon_RREADY = new xsim_sc_channel<0, bool >();
        sc_inst_7->mon_RREADY.bind(*p_7_mon_RREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_7_mon_RREADY);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_7_mon_RDATA = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_7->mon_RDATA.bind(*p_7_mon_RDATA);
        (*_glb_hdl_sc_channel_map).push_back(p_7_mon_RDATA);
        xsim_sc_channel<0, bool > *p_7_mon_RLAST = new xsim_sc_channel<0, bool >();
        sc_inst_7->mon_RLAST.bind(*p_7_mon_RLAST);
        (*_glb_hdl_sc_channel_map).push_back(p_7_mon_RLAST);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_7_mon_RID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_7->mon_RID.bind(*p_7_mon_RID);
        (*_glb_hdl_sc_channel_map).push_back(p_7_mon_RID);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_7_mon_RRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_7->mon_RRESP.bind(*p_7_mon_RRESP);
        (*_glb_hdl_sc_channel_map).push_back(p_7_mon_RRESP);
        xsim_sc_channel<0, bool > *p_7_mon_BVALID = new xsim_sc_channel<0, bool >();
        sc_inst_7->mon_BVALID.bind(*p_7_mon_BVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_7_mon_BVALID);
        xsim_sc_channel<0, bool > *p_7_mon_BREADY = new xsim_sc_channel<0, bool >();
        sc_inst_7->mon_BREADY.bind(*p_7_mon_BREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_7_mon_BREADY);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_7_mon_BRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_7->mon_BRESP.bind(*p_7_mon_BRESP);
        (*_glb_hdl_sc_channel_map).push_back(p_7_mon_BRESP);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_7_mon_BID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_7->mon_BID.bind(*p_7_mon_BID);
        (*_glb_hdl_sc_channel_map).push_back(p_7_mon_BID);
        xsim_sc_channel<0, bool > *p_7_m_axis_rd_tready = new xsim_sc_channel<0, bool >();
        sc_inst_7->m_axis_rd_tready.bind(*p_7_m_axis_rd_tready);
        (*_glb_hdl_sc_channel_map).push_back(p_7_m_axis_rd_tready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_7_m_axis_rd_tdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_7->m_axis_rd_tdata.bind(*p_7_m_axis_rd_tdata);
        p_7_m_axis_rd_tdata->set_sv_netview_offsetfromdp(8210008);
        xsim_sc_channel<0, bool > *p_7_m_axis_rd_tlast = new xsim_sc_channel<0, bool >();
        sc_inst_7->m_axis_rd_tlast.bind(*p_7_m_axis_rd_tlast);
        p_7_m_axis_rd_tlast->set_sv_netview_offsetfromdp(8210064);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_7_m_axis_rd_tid = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_7->m_axis_rd_tid.bind(*p_7_m_axis_rd_tid);
        p_7_m_axis_rd_tid->set_sv_netview_offsetfromdp(8210120);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_7_m_axis_rd_tdest = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_7->m_axis_rd_tdest.bind(*p_7_m_axis_rd_tdest);
        p_7_m_axis_rd_tdest->set_sv_netview_offsetfromdp(8210176);
        xsim_sc_channel<0, bool > *p_7_m_axis_wr_tready = new xsim_sc_channel<0, bool >();
        sc_inst_7->m_axis_wr_tready.bind(*p_7_m_axis_wr_tready);
        (*_glb_hdl_sc_channel_map).push_back(p_7_m_axis_wr_tready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_7_m_axis_wr_tdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_7->m_axis_wr_tdata.bind(*p_7_m_axis_wr_tdata);
        p_7_m_axis_wr_tdata->set_sv_netview_offsetfromdp(8210288);
        xsim_sc_channel<0, bool > *p_7_m_axis_wr_tlast = new xsim_sc_channel<0, bool >();
        sc_inst_7->m_axis_wr_tlast.bind(*p_7_m_axis_wr_tlast);
        p_7_m_axis_wr_tlast->set_sv_netview_offsetfromdp(8210344);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_7_m_axis_wr_tid = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_7->m_axis_wr_tid.bind(*p_7_m_axis_wr_tid);
        p_7_m_axis_wr_tid->set_sv_netview_offsetfromdp(8210400);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_7_m_axis_wr_tdest = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_7->m_axis_wr_tdest.bind(*p_7_m_axis_wr_tdest);
        p_7_m_axis_wr_tdest->set_sv_netview_offsetfromdp(8210456);
        xsim_sc_channel<0, bool > *p_7_m_axis_wr_tvalid = new xsim_sc_channel<0, bool >();
        sc_inst_7->m_axis_wr_tvalid.bind(*p_7_m_axis_wr_tvalid);
        p_7_m_axis_wr_tvalid->set_sv_netview_offsetfromdp(8210512);
        xsim_sc_channel<0, bool > *p_7_m_axis_rd_tvalid = new xsim_sc_channel<0, bool >();
        sc_inst_7->m_axis_rd_tvalid.bind(*p_7_m_axis_rd_tvalid);
        p_7_m_axis_rd_tvalid->set_sv_netview_offsetfromdp(8210568);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_7_s_axi_awaddr_mon = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_7->s_axi_awaddr_mon.bind(*p_7_s_axi_awaddr_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_axi_awaddr_mon);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_7_s_axi_awprot_mon = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_7->s_axi_awprot_mon.bind(*p_7_s_axi_awprot_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_axi_awprot_mon);
        xsim_sc_channel<0, bool > *p_7_s_axi_awvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_7->s_axi_awvalid_mon.bind(*p_7_s_axi_awvalid_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_axi_awvalid_mon);
        xsim_sc_channel<0, bool > *p_7_s_axi_awready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_7->s_axi_awready_mon.bind(*p_7_s_axi_awready_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_axi_awready_mon);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_7_s_axi_wdata_mon = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_7->s_axi_wdata_mon.bind(*p_7_s_axi_wdata_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_axi_wdata_mon);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_7_s_axi_wstrb_mon = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_7->s_axi_wstrb_mon.bind(*p_7_s_axi_wstrb_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_axi_wstrb_mon);
        xsim_sc_channel<0, bool > *p_7_s_axi_wvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_7->s_axi_wvalid_mon.bind(*p_7_s_axi_wvalid_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_axi_wvalid_mon);
        xsim_sc_channel<0, bool > *p_7_s_axi_wready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_7->s_axi_wready_mon.bind(*p_7_s_axi_wready_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_axi_wready_mon);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_7_s_axi_bresp_mon = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_7->s_axi_bresp_mon.bind(*p_7_s_axi_bresp_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_axi_bresp_mon);
        xsim_sc_channel<0, bool > *p_7_s_axi_bvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_7->s_axi_bvalid_mon.bind(*p_7_s_axi_bvalid_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_axi_bvalid_mon);
        xsim_sc_channel<0, bool > *p_7_s_axi_bready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_7->s_axi_bready_mon.bind(*p_7_s_axi_bready_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_axi_bready_mon);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_7_s_axi_araddr_mon = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_7->s_axi_araddr_mon.bind(*p_7_s_axi_araddr_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_axi_araddr_mon);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_7_s_axi_arprot_mon = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_7->s_axi_arprot_mon.bind(*p_7_s_axi_arprot_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_axi_arprot_mon);
        xsim_sc_channel<0, bool > *p_7_s_axi_arvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_7->s_axi_arvalid_mon.bind(*p_7_s_axi_arvalid_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_axi_arvalid_mon);
        xsim_sc_channel<0, bool > *p_7_s_axi_arready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_7->s_axi_arready_mon.bind(*p_7_s_axi_arready_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_axi_arready_mon);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_7_s_axi_rdata_mon = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_7->s_axi_rdata_mon.bind(*p_7_s_axi_rdata_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_axi_rdata_mon);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_7_s_axi_rresp_mon = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_7->s_axi_rresp_mon.bind(*p_7_s_axi_rresp_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_axi_rresp_mon);
        xsim_sc_channel<0, bool > *p_7_s_axi_rvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_7->s_axi_rvalid_mon.bind(*p_7_s_axi_rvalid_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_axi_rvalid_mon);
        xsim_sc_channel<0, bool > *p_7_s_axi_rready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_7->s_axi_rready_mon.bind(*p_7_s_axi_rready_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_axi_rready_mon);
        sc_inst_8 = new emu_sci(".emu_wrapper.emu_i.emu_sci_inst");
        sc_inst_8->xsim_set_dbg_index(23);
        sc_inst_9 = new emu_memory_subsystem_0(".emu_wrapper.emu_i.memory_subsystem");
        sc_inst_9->xsim_set_dbg_index(27);
        xsim_sc_channel<0, bool > *p_9_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_9->aclk.bind(*p_9_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_9_aclk);
        xsim_sc_channel<0, bool > *p_9_aclk1 = new xsim_sc_channel<0, bool >();
        sc_inst_9->aclk1.bind(*p_9_aclk1);
        (*_glb_hdl_sc_channel_map).push_back(p_9_aclk1);
        xsim_sc_channel<0, bool > *p_9_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_9->aresetn.bind(*p_9_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_9_aresetn);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_9_S00_AXI_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_9->S00_AXI_awid.bind(*p_9_S00_AXI_awid);
        (*_glb_hdl_sc_channel_map).push_back(p_9_S00_AXI_awid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_9_S00_AXI_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_9->S00_AXI_awaddr.bind(*p_9_S00_AXI_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_9_S00_AXI_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_9_S00_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_9->S00_AXI_awlen.bind(*p_9_S00_AXI_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_9_S00_AXI_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_9_S00_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_9->S00_AXI_awsize.bind(*p_9_S00_AXI_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_9_S00_AXI_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_9_S00_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_9->S00_AXI_awburst.bind(*p_9_S00_AXI_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_9_S00_AXI_awburst);
        xsim_sc_channel<0, bool > *p_9_S00_AXI_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_9->S00_AXI_awlock.bind(*p_9_S00_AXI_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_9_S00_AXI_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_9_S00_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_9->S00_AXI_awcache.bind(*p_9_S00_AXI_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_9_S00_AXI_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_9_S00_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_9->S00_AXI_awprot.bind(*p_9_S00_AXI_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_9_S00_AXI_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_9_S00_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_9->S00_AXI_awqos.bind(*p_9_S00_AXI_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_9_S00_AXI_awqos);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_9_S00_AXI_awuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_9->S00_AXI_awuser.bind(*p_9_S00_AXI_awuser);
        (*_glb_hdl_sc_channel_map).push_back(p_9_S00_AXI_awuser);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_9_S00_AXI_awvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_9->S00_AXI_awvalid.bind(*p_9_S00_AXI_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_9_S00_AXI_awvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_9_S00_AXI_awready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_9->S00_AXI_awready.bind(*p_9_S00_AXI_awready);
        p_9_S00_AXI_awready->set_sv_netview_offsetfromdp(8386384);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_9_S00_AXI_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_9->S00_AXI_wdata.bind(*p_9_S00_AXI_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_9_S00_AXI_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_9_S00_AXI_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_9->S00_AXI_wstrb.bind(*p_9_S00_AXI_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_9_S00_AXI_wstrb);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_9_S00_AXI_wlast = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_9->S00_AXI_wlast.bind(*p_9_S00_AXI_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_9_S00_AXI_wlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_9_S00_AXI_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_9->S00_AXI_wuser.bind(*p_9_S00_AXI_wuser);
        (*_glb_hdl_sc_channel_map).push_back(p_9_S00_AXI_wuser);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_9_S00_AXI_wvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_9->S00_AXI_wvalid.bind(*p_9_S00_AXI_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_9_S00_AXI_wvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_9_S00_AXI_wready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_9->S00_AXI_wready.bind(*p_9_S00_AXI_wready);
        p_9_S00_AXI_wready->set_sv_netview_offsetfromdp(8386720);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_9_S00_AXI_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_9->S00_AXI_bid.bind(*p_9_S00_AXI_bid);
        p_9_S00_AXI_bid->set_sv_netview_offsetfromdp(8386776);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_9_S00_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_9->S00_AXI_bresp.bind(*p_9_S00_AXI_bresp);
        p_9_S00_AXI_bresp->set_sv_netview_offsetfromdp(8386832);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_9_S00_AXI_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_9->S00_AXI_buser.bind(*p_9_S00_AXI_buser);
        p_9_S00_AXI_buser->set_sv_netview_offsetfromdp(8386888);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_9_S00_AXI_bvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_9->S00_AXI_bvalid.bind(*p_9_S00_AXI_bvalid);
        p_9_S00_AXI_bvalid->set_sv_netview_offsetfromdp(8386944);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_9_S00_AXI_bready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_9->S00_AXI_bready.bind(*p_9_S00_AXI_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_9_S00_AXI_bready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_9_S00_AXI_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_9->S00_AXI_arid.bind(*p_9_S00_AXI_arid);
        (*_glb_hdl_sc_channel_map).push_back(p_9_S00_AXI_arid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_9_S00_AXI_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_9->S00_AXI_araddr.bind(*p_9_S00_AXI_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_9_S00_AXI_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_9_S00_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_9->S00_AXI_arlen.bind(*p_9_S00_AXI_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_9_S00_AXI_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_9_S00_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_9->S00_AXI_arsize.bind(*p_9_S00_AXI_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_9_S00_AXI_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_9_S00_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_9->S00_AXI_arburst.bind(*p_9_S00_AXI_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_9_S00_AXI_arburst);
        xsim_sc_channel<0, bool > *p_9_S00_AXI_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_9->S00_AXI_arlock.bind(*p_9_S00_AXI_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_9_S00_AXI_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_9_S00_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_9->S00_AXI_arcache.bind(*p_9_S00_AXI_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_9_S00_AXI_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_9_S00_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_9->S00_AXI_arprot.bind(*p_9_S00_AXI_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_9_S00_AXI_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_9_S00_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_9->S00_AXI_arqos.bind(*p_9_S00_AXI_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_9_S00_AXI_arqos);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_9_S00_AXI_aruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_9->S00_AXI_aruser.bind(*p_9_S00_AXI_aruser);
        (*_glb_hdl_sc_channel_map).push_back(p_9_S00_AXI_aruser);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_9_S00_AXI_arvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_9->S00_AXI_arvalid.bind(*p_9_S00_AXI_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_9_S00_AXI_arvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_9_S00_AXI_arready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_9->S00_AXI_arready.bind(*p_9_S00_AXI_arready);
        p_9_S00_AXI_arready->set_sv_netview_offsetfromdp(8387672);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_9_S00_AXI_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_9->S00_AXI_rid.bind(*p_9_S00_AXI_rid);
        p_9_S00_AXI_rid->set_sv_netview_offsetfromdp(8387728);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_9_S00_AXI_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_9->S00_AXI_rdata.bind(*p_9_S00_AXI_rdata);
        p_9_S00_AXI_rdata->set_sv_netview_offsetfromdp(8387784);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_9_S00_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_9->S00_AXI_rresp.bind(*p_9_S00_AXI_rresp);
        p_9_S00_AXI_rresp->set_sv_netview_offsetfromdp(8387840);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_9_S00_AXI_rlast = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_9->S00_AXI_rlast.bind(*p_9_S00_AXI_rlast);
        p_9_S00_AXI_rlast->set_sv_netview_offsetfromdp(8387896);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_9_S00_AXI_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_9->S00_AXI_ruser.bind(*p_9_S00_AXI_ruser);
        p_9_S00_AXI_ruser->set_sv_netview_offsetfromdp(8387952);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_9_S00_AXI_rvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_9->S00_AXI_rvalid.bind(*p_9_S00_AXI_rvalid);
        p_9_S00_AXI_rvalid->set_sv_netview_offsetfromdp(8388008);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_9_S00_AXI_rready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_9->S00_AXI_rready.bind(*p_9_S00_AXI_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_9_S00_AXI_rready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_9_S01_AXI_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_9->S01_AXI_awid.bind(*p_9_S01_AXI_awid);
        (*_glb_hdl_sc_channel_map).push_back(p_9_S01_AXI_awid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_9_S01_AXI_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_9->S01_AXI_awaddr.bind(*p_9_S01_AXI_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_9_S01_AXI_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_9_S01_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_9->S01_AXI_awlen.bind(*p_9_S01_AXI_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_9_S01_AXI_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_9_S01_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_9->S01_AXI_awsize.bind(*p_9_S01_AXI_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_9_S01_AXI_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_9_S01_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_9->S01_AXI_awburst.bind(*p_9_S01_AXI_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_9_S01_AXI_awburst);
        xsim_sc_channel<0, bool > *p_9_S01_AXI_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_9->S01_AXI_awlock.bind(*p_9_S01_AXI_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_9_S01_AXI_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_9_S01_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_9->S01_AXI_awcache.bind(*p_9_S01_AXI_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_9_S01_AXI_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_9_S01_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_9->S01_AXI_awprot.bind(*p_9_S01_AXI_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_9_S01_AXI_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_9_S01_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_9->S01_AXI_awqos.bind(*p_9_S01_AXI_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_9_S01_AXI_awqos);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_9_S01_AXI_awuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_9->S01_AXI_awuser.bind(*p_9_S01_AXI_awuser);
        (*_glb_hdl_sc_channel_map).push_back(p_9_S01_AXI_awuser);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_9_S01_AXI_awvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_9->S01_AXI_awvalid.bind(*p_9_S01_AXI_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_9_S01_AXI_awvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_9_S01_AXI_awready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_9->S01_AXI_awready.bind(*p_9_S01_AXI_awready);
        p_9_S01_AXI_awready->set_sv_netview_offsetfromdp(8388736);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_9_S01_AXI_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_9->S01_AXI_wdata.bind(*p_9_S01_AXI_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_9_S01_AXI_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_9_S01_AXI_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_9->S01_AXI_wstrb.bind(*p_9_S01_AXI_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_9_S01_AXI_wstrb);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_9_S01_AXI_wlast = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_9->S01_AXI_wlast.bind(*p_9_S01_AXI_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_9_S01_AXI_wlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_9_S01_AXI_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_9->S01_AXI_wuser.bind(*p_9_S01_AXI_wuser);
        (*_glb_hdl_sc_channel_map).push_back(p_9_S01_AXI_wuser);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_9_S01_AXI_wvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_9->S01_AXI_wvalid.bind(*p_9_S01_AXI_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_9_S01_AXI_wvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_9_S01_AXI_wready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_9->S01_AXI_wready.bind(*p_9_S01_AXI_wready);
        p_9_S01_AXI_wready->set_sv_netview_offsetfromdp(8389072);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_9_S01_AXI_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_9->S01_AXI_bid.bind(*p_9_S01_AXI_bid);
        p_9_S01_AXI_bid->set_sv_netview_offsetfromdp(8389128);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_9_S01_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_9->S01_AXI_bresp.bind(*p_9_S01_AXI_bresp);
        p_9_S01_AXI_bresp->set_sv_netview_offsetfromdp(8389184);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_9_S01_AXI_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_9->S01_AXI_buser.bind(*p_9_S01_AXI_buser);
        p_9_S01_AXI_buser->set_sv_netview_offsetfromdp(8389240);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_9_S01_AXI_bvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_9->S01_AXI_bvalid.bind(*p_9_S01_AXI_bvalid);
        p_9_S01_AXI_bvalid->set_sv_netview_offsetfromdp(8389296);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_9_S01_AXI_bready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_9->S01_AXI_bready.bind(*p_9_S01_AXI_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_9_S01_AXI_bready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_9_S01_AXI_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_9->S01_AXI_arid.bind(*p_9_S01_AXI_arid);
        (*_glb_hdl_sc_channel_map).push_back(p_9_S01_AXI_arid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_9_S01_AXI_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_9->S01_AXI_araddr.bind(*p_9_S01_AXI_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_9_S01_AXI_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_9_S01_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_9->S01_AXI_arlen.bind(*p_9_S01_AXI_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_9_S01_AXI_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_9_S01_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_9->S01_AXI_arsize.bind(*p_9_S01_AXI_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_9_S01_AXI_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_9_S01_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_9->S01_AXI_arburst.bind(*p_9_S01_AXI_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_9_S01_AXI_arburst);
        xsim_sc_channel<0, bool > *p_9_S01_AXI_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_9->S01_AXI_arlock.bind(*p_9_S01_AXI_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_9_S01_AXI_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_9_S01_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_9->S01_AXI_arcache.bind(*p_9_S01_AXI_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_9_S01_AXI_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_9_S01_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_9->S01_AXI_arprot.bind(*p_9_S01_AXI_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_9_S01_AXI_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_9_S01_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_9->S01_AXI_arqos.bind(*p_9_S01_AXI_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_9_S01_AXI_arqos);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_9_S01_AXI_aruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_9->S01_AXI_aruser.bind(*p_9_S01_AXI_aruser);
        (*_glb_hdl_sc_channel_map).push_back(p_9_S01_AXI_aruser);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_9_S01_AXI_arvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_9->S01_AXI_arvalid.bind(*p_9_S01_AXI_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_9_S01_AXI_arvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_9_S01_AXI_arready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_9->S01_AXI_arready.bind(*p_9_S01_AXI_arready);
        p_9_S01_AXI_arready->set_sv_netview_offsetfromdp(8390024);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_9_S01_AXI_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_9->S01_AXI_rid.bind(*p_9_S01_AXI_rid);
        p_9_S01_AXI_rid->set_sv_netview_offsetfromdp(8390080);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_9_S01_AXI_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_9->S01_AXI_rdata.bind(*p_9_S01_AXI_rdata);
        p_9_S01_AXI_rdata->set_sv_netview_offsetfromdp(8390136);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_9_S01_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_9->S01_AXI_rresp.bind(*p_9_S01_AXI_rresp);
        p_9_S01_AXI_rresp->set_sv_netview_offsetfromdp(8390192);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_9_S01_AXI_rlast = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_9->S01_AXI_rlast.bind(*p_9_S01_AXI_rlast);
        p_9_S01_AXI_rlast->set_sv_netview_offsetfromdp(8390248);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_9_S01_AXI_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_9->S01_AXI_ruser.bind(*p_9_S01_AXI_ruser);
        p_9_S01_AXI_ruser->set_sv_netview_offsetfromdp(8390304);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_9_S01_AXI_rvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_9->S01_AXI_rvalid.bind(*p_9_S01_AXI_rvalid);
        p_9_S01_AXI_rvalid->set_sv_netview_offsetfromdp(8390360);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_9_S01_AXI_rready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_9->S01_AXI_rready.bind(*p_9_S01_AXI_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_9_S01_AXI_rready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_9_S02_AXI_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_9->S02_AXI_awid.bind(*p_9_S02_AXI_awid);
        (*_glb_hdl_sc_channel_map).push_back(p_9_S02_AXI_awid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_9_S02_AXI_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_9->S02_AXI_awaddr.bind(*p_9_S02_AXI_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_9_S02_AXI_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_9_S02_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_9->S02_AXI_awlen.bind(*p_9_S02_AXI_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_9_S02_AXI_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_9_S02_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_9->S02_AXI_awsize.bind(*p_9_S02_AXI_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_9_S02_AXI_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_9_S02_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_9->S02_AXI_awburst.bind(*p_9_S02_AXI_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_9_S02_AXI_awburst);
        xsim_sc_channel<0, bool > *p_9_S02_AXI_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_9->S02_AXI_awlock.bind(*p_9_S02_AXI_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_9_S02_AXI_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_9_S02_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_9->S02_AXI_awcache.bind(*p_9_S02_AXI_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_9_S02_AXI_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_9_S02_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_9->S02_AXI_awprot.bind(*p_9_S02_AXI_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_9_S02_AXI_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_9_S02_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_9->S02_AXI_awqos.bind(*p_9_S02_AXI_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_9_S02_AXI_awqos);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_9_S02_AXI_awuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_9->S02_AXI_awuser.bind(*p_9_S02_AXI_awuser);
        (*_glb_hdl_sc_channel_map).push_back(p_9_S02_AXI_awuser);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_9_S02_AXI_awvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_9->S02_AXI_awvalid.bind(*p_9_S02_AXI_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_9_S02_AXI_awvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_9_S02_AXI_awready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_9->S02_AXI_awready.bind(*p_9_S02_AXI_awready);
        p_9_S02_AXI_awready->set_sv_netview_offsetfromdp(8391088);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_9_S02_AXI_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_9->S02_AXI_wdata.bind(*p_9_S02_AXI_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_9_S02_AXI_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_9_S02_AXI_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_9->S02_AXI_wstrb.bind(*p_9_S02_AXI_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_9_S02_AXI_wstrb);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_9_S02_AXI_wlast = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_9->S02_AXI_wlast.bind(*p_9_S02_AXI_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_9_S02_AXI_wlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_9_S02_AXI_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_9->S02_AXI_wuser.bind(*p_9_S02_AXI_wuser);
        (*_glb_hdl_sc_channel_map).push_back(p_9_S02_AXI_wuser);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_9_S02_AXI_wvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_9->S02_AXI_wvalid.bind(*p_9_S02_AXI_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_9_S02_AXI_wvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_9_S02_AXI_wready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_9->S02_AXI_wready.bind(*p_9_S02_AXI_wready);
        p_9_S02_AXI_wready->set_sv_netview_offsetfromdp(8391424);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_9_S02_AXI_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_9->S02_AXI_bid.bind(*p_9_S02_AXI_bid);
        p_9_S02_AXI_bid->set_sv_netview_offsetfromdp(8391480);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_9_S02_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_9->S02_AXI_bresp.bind(*p_9_S02_AXI_bresp);
        p_9_S02_AXI_bresp->set_sv_netview_offsetfromdp(8391536);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_9_S02_AXI_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_9->S02_AXI_buser.bind(*p_9_S02_AXI_buser);
        p_9_S02_AXI_buser->set_sv_netview_offsetfromdp(8391592);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_9_S02_AXI_bvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_9->S02_AXI_bvalid.bind(*p_9_S02_AXI_bvalid);
        p_9_S02_AXI_bvalid->set_sv_netview_offsetfromdp(8391648);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_9_S02_AXI_bready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_9->S02_AXI_bready.bind(*p_9_S02_AXI_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_9_S02_AXI_bready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_9_S02_AXI_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_9->S02_AXI_arid.bind(*p_9_S02_AXI_arid);
        (*_glb_hdl_sc_channel_map).push_back(p_9_S02_AXI_arid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_9_S02_AXI_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_9->S02_AXI_araddr.bind(*p_9_S02_AXI_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_9_S02_AXI_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_9_S02_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_9->S02_AXI_arlen.bind(*p_9_S02_AXI_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_9_S02_AXI_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_9_S02_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_9->S02_AXI_arsize.bind(*p_9_S02_AXI_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_9_S02_AXI_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_9_S02_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_9->S02_AXI_arburst.bind(*p_9_S02_AXI_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_9_S02_AXI_arburst);
        xsim_sc_channel<0, bool > *p_9_S02_AXI_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_9->S02_AXI_arlock.bind(*p_9_S02_AXI_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_9_S02_AXI_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_9_S02_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_9->S02_AXI_arcache.bind(*p_9_S02_AXI_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_9_S02_AXI_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_9_S02_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_9->S02_AXI_arprot.bind(*p_9_S02_AXI_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_9_S02_AXI_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_9_S02_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_9->S02_AXI_arqos.bind(*p_9_S02_AXI_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_9_S02_AXI_arqos);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_9_S02_AXI_aruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_9->S02_AXI_aruser.bind(*p_9_S02_AXI_aruser);
        (*_glb_hdl_sc_channel_map).push_back(p_9_S02_AXI_aruser);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_9_S02_AXI_arvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_9->S02_AXI_arvalid.bind(*p_9_S02_AXI_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_9_S02_AXI_arvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_9_S02_AXI_arready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_9->S02_AXI_arready.bind(*p_9_S02_AXI_arready);
        p_9_S02_AXI_arready->set_sv_netview_offsetfromdp(8392376);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_9_S02_AXI_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_9->S02_AXI_rid.bind(*p_9_S02_AXI_rid);
        p_9_S02_AXI_rid->set_sv_netview_offsetfromdp(8392432);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_9_S02_AXI_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_9->S02_AXI_rdata.bind(*p_9_S02_AXI_rdata);
        p_9_S02_AXI_rdata->set_sv_netview_offsetfromdp(8392488);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_9_S02_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_9->S02_AXI_rresp.bind(*p_9_S02_AXI_rresp);
        p_9_S02_AXI_rresp->set_sv_netview_offsetfromdp(8392544);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_9_S02_AXI_rlast = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_9->S02_AXI_rlast.bind(*p_9_S02_AXI_rlast);
        p_9_S02_AXI_rlast->set_sv_netview_offsetfromdp(8392600);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_9_S02_AXI_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_9->S02_AXI_ruser.bind(*p_9_S02_AXI_ruser);
        p_9_S02_AXI_ruser->set_sv_netview_offsetfromdp(8392656);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_9_S02_AXI_rvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_9->S02_AXI_rvalid.bind(*p_9_S02_AXI_rvalid);
        p_9_S02_AXI_rvalid->set_sv_netview_offsetfromdp(8392712);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_9_S02_AXI_rready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_9->S02_AXI_rready.bind(*p_9_S02_AXI_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_9_S02_AXI_rready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_9_S03_AXI_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_9->S03_AXI_awid.bind(*p_9_S03_AXI_awid);
        (*_glb_hdl_sc_channel_map).push_back(p_9_S03_AXI_awid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_9_S03_AXI_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_9->S03_AXI_awaddr.bind(*p_9_S03_AXI_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_9_S03_AXI_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_9_S03_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_9->S03_AXI_awlen.bind(*p_9_S03_AXI_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_9_S03_AXI_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_9_S03_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_9->S03_AXI_awsize.bind(*p_9_S03_AXI_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_9_S03_AXI_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_9_S03_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_9->S03_AXI_awburst.bind(*p_9_S03_AXI_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_9_S03_AXI_awburst);
        xsim_sc_channel<0, bool > *p_9_S03_AXI_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_9->S03_AXI_awlock.bind(*p_9_S03_AXI_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_9_S03_AXI_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_9_S03_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_9->S03_AXI_awcache.bind(*p_9_S03_AXI_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_9_S03_AXI_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_9_S03_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_9->S03_AXI_awprot.bind(*p_9_S03_AXI_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_9_S03_AXI_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_9_S03_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_9->S03_AXI_awqos.bind(*p_9_S03_AXI_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_9_S03_AXI_awqos);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_9_S03_AXI_awuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_9->S03_AXI_awuser.bind(*p_9_S03_AXI_awuser);
        (*_glb_hdl_sc_channel_map).push_back(p_9_S03_AXI_awuser);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_9_S03_AXI_awvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_9->S03_AXI_awvalid.bind(*p_9_S03_AXI_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_9_S03_AXI_awvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_9_S03_AXI_awready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_9->S03_AXI_awready.bind(*p_9_S03_AXI_awready);
        p_9_S03_AXI_awready->set_sv_netview_offsetfromdp(8393440);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_9_S03_AXI_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_9->S03_AXI_wdata.bind(*p_9_S03_AXI_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_9_S03_AXI_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_9_S03_AXI_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_9->S03_AXI_wstrb.bind(*p_9_S03_AXI_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_9_S03_AXI_wstrb);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_9_S03_AXI_wlast = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_9->S03_AXI_wlast.bind(*p_9_S03_AXI_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_9_S03_AXI_wlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_9_S03_AXI_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_9->S03_AXI_wuser.bind(*p_9_S03_AXI_wuser);
        (*_glb_hdl_sc_channel_map).push_back(p_9_S03_AXI_wuser);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_9_S03_AXI_wvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_9->S03_AXI_wvalid.bind(*p_9_S03_AXI_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_9_S03_AXI_wvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_9_S03_AXI_wready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_9->S03_AXI_wready.bind(*p_9_S03_AXI_wready);
        p_9_S03_AXI_wready->set_sv_netview_offsetfromdp(8393776);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_9_S03_AXI_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_9->S03_AXI_bid.bind(*p_9_S03_AXI_bid);
        p_9_S03_AXI_bid->set_sv_netview_offsetfromdp(8393832);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_9_S03_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_9->S03_AXI_bresp.bind(*p_9_S03_AXI_bresp);
        p_9_S03_AXI_bresp->set_sv_netview_offsetfromdp(8393888);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_9_S03_AXI_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_9->S03_AXI_buser.bind(*p_9_S03_AXI_buser);
        p_9_S03_AXI_buser->set_sv_netview_offsetfromdp(8393944);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_9_S03_AXI_bvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_9->S03_AXI_bvalid.bind(*p_9_S03_AXI_bvalid);
        p_9_S03_AXI_bvalid->set_sv_netview_offsetfromdp(8394000);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_9_S03_AXI_bready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_9->S03_AXI_bready.bind(*p_9_S03_AXI_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_9_S03_AXI_bready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_9_S03_AXI_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_9->S03_AXI_arid.bind(*p_9_S03_AXI_arid);
        (*_glb_hdl_sc_channel_map).push_back(p_9_S03_AXI_arid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_9_S03_AXI_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_9->S03_AXI_araddr.bind(*p_9_S03_AXI_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_9_S03_AXI_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_9_S03_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_9->S03_AXI_arlen.bind(*p_9_S03_AXI_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_9_S03_AXI_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_9_S03_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_9->S03_AXI_arsize.bind(*p_9_S03_AXI_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_9_S03_AXI_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_9_S03_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_9->S03_AXI_arburst.bind(*p_9_S03_AXI_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_9_S03_AXI_arburst);
        xsim_sc_channel<0, bool > *p_9_S03_AXI_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_9->S03_AXI_arlock.bind(*p_9_S03_AXI_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_9_S03_AXI_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_9_S03_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_9->S03_AXI_arcache.bind(*p_9_S03_AXI_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_9_S03_AXI_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_9_S03_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_9->S03_AXI_arprot.bind(*p_9_S03_AXI_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_9_S03_AXI_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_9_S03_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_9->S03_AXI_arqos.bind(*p_9_S03_AXI_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_9_S03_AXI_arqos);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_9_S03_AXI_aruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_9->S03_AXI_aruser.bind(*p_9_S03_AXI_aruser);
        (*_glb_hdl_sc_channel_map).push_back(p_9_S03_AXI_aruser);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_9_S03_AXI_arvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_9->S03_AXI_arvalid.bind(*p_9_S03_AXI_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_9_S03_AXI_arvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_9_S03_AXI_arready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_9->S03_AXI_arready.bind(*p_9_S03_AXI_arready);
        p_9_S03_AXI_arready->set_sv_netview_offsetfromdp(8394728);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_9_S03_AXI_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_9->S03_AXI_rid.bind(*p_9_S03_AXI_rid);
        p_9_S03_AXI_rid->set_sv_netview_offsetfromdp(8394784);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_9_S03_AXI_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_9->S03_AXI_rdata.bind(*p_9_S03_AXI_rdata);
        p_9_S03_AXI_rdata->set_sv_netview_offsetfromdp(8394840);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_9_S03_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_9->S03_AXI_rresp.bind(*p_9_S03_AXI_rresp);
        p_9_S03_AXI_rresp->set_sv_netview_offsetfromdp(8394896);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_9_S03_AXI_rlast = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_9->S03_AXI_rlast.bind(*p_9_S03_AXI_rlast);
        p_9_S03_AXI_rlast->set_sv_netview_offsetfromdp(8394952);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_9_S03_AXI_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_9->S03_AXI_ruser.bind(*p_9_S03_AXI_ruser);
        p_9_S03_AXI_ruser->set_sv_netview_offsetfromdp(8395008);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_9_S03_AXI_rvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_9->S03_AXI_rvalid.bind(*p_9_S03_AXI_rvalid);
        p_9_S03_AXI_rvalid->set_sv_netview_offsetfromdp(8395064);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_9_S03_AXI_rready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_9->S03_AXI_rready.bind(*p_9_S03_AXI_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_9_S03_AXI_rready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_9_S04_AXI_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_9->S04_AXI_awaddr.bind(*p_9_S04_AXI_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_9_S04_AXI_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_9_S04_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_9->S04_AXI_awlen.bind(*p_9_S04_AXI_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_9_S04_AXI_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_9_S04_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_9->S04_AXI_awsize.bind(*p_9_S04_AXI_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_9_S04_AXI_awsize);
        xsim_sc_channel<0, bool > *p_9_S04_AXI_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_9->S04_AXI_awlock.bind(*p_9_S04_AXI_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_9_S04_AXI_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_9_S04_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_9->S04_AXI_awcache.bind(*p_9_S04_AXI_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_9_S04_AXI_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_9_S04_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_9->S04_AXI_awprot.bind(*p_9_S04_AXI_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_9_S04_AXI_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_9_S04_AXI_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_9->S04_AXI_awregion.bind(*p_9_S04_AXI_awregion);
        (*_glb_hdl_sc_channel_map).push_back(p_9_S04_AXI_awregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_9_S04_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_9->S04_AXI_awqos.bind(*p_9_S04_AXI_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_9_S04_AXI_awqos);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_9_S04_AXI_awvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_9->S04_AXI_awvalid.bind(*p_9_S04_AXI_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_9_S04_AXI_awvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_9_S04_AXI_awready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_9->S04_AXI_awready.bind(*p_9_S04_AXI_awready);
        p_9_S04_AXI_awready->set_sv_netview_offsetfromdp(8395680);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_9_S04_AXI_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_9->S04_AXI_wdata.bind(*p_9_S04_AXI_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_9_S04_AXI_wdata);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_9_S04_AXI_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_9->S04_AXI_wstrb.bind(*p_9_S04_AXI_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_9_S04_AXI_wstrb);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_9_S04_AXI_wlast = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_9->S04_AXI_wlast.bind(*p_9_S04_AXI_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_9_S04_AXI_wlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_9_S04_AXI_wvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_9->S04_AXI_wvalid.bind(*p_9_S04_AXI_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_9_S04_AXI_wvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_9_S04_AXI_wready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_9->S04_AXI_wready.bind(*p_9_S04_AXI_wready);
        p_9_S04_AXI_wready->set_sv_netview_offsetfromdp(8395960);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_9_S04_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_9->S04_AXI_bresp.bind(*p_9_S04_AXI_bresp);
        p_9_S04_AXI_bresp->set_sv_netview_offsetfromdp(8396016);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_9_S04_AXI_bvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_9->S04_AXI_bvalid.bind(*p_9_S04_AXI_bvalid);
        p_9_S04_AXI_bvalid->set_sv_netview_offsetfromdp(8396072);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_9_S04_AXI_bready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_9->S04_AXI_bready.bind(*p_9_S04_AXI_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_9_S04_AXI_bready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_9_S04_AXI_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_9->S04_AXI_araddr.bind(*p_9_S04_AXI_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_9_S04_AXI_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_9_S04_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_9->S04_AXI_arlen.bind(*p_9_S04_AXI_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_9_S04_AXI_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_9_S04_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_9->S04_AXI_arsize.bind(*p_9_S04_AXI_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_9_S04_AXI_arsize);
        xsim_sc_channel<0, bool > *p_9_S04_AXI_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_9->S04_AXI_arlock.bind(*p_9_S04_AXI_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_9_S04_AXI_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_9_S04_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_9->S04_AXI_arcache.bind(*p_9_S04_AXI_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_9_S04_AXI_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_9_S04_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_9->S04_AXI_arprot.bind(*p_9_S04_AXI_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_9_S04_AXI_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_9_S04_AXI_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_9->S04_AXI_arregion.bind(*p_9_S04_AXI_arregion);
        (*_glb_hdl_sc_channel_map).push_back(p_9_S04_AXI_arregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_9_S04_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_9->S04_AXI_arqos.bind(*p_9_S04_AXI_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_9_S04_AXI_arqos);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_9_S04_AXI_arvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_9->S04_AXI_arvalid.bind(*p_9_S04_AXI_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_9_S04_AXI_arvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_9_S04_AXI_arready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_9->S04_AXI_arready.bind(*p_9_S04_AXI_arready);
        p_9_S04_AXI_arready->set_sv_netview_offsetfromdp(8396688);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_9_S04_AXI_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_9->S04_AXI_rdata.bind(*p_9_S04_AXI_rdata);
        p_9_S04_AXI_rdata->set_sv_netview_offsetfromdp(8396744);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_9_S04_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_9->S04_AXI_rresp.bind(*p_9_S04_AXI_rresp);
        p_9_S04_AXI_rresp->set_sv_netview_offsetfromdp(8396800);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_9_S04_AXI_rlast = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_9->S04_AXI_rlast.bind(*p_9_S04_AXI_rlast);
        p_9_S04_AXI_rlast->set_sv_netview_offsetfromdp(8396856);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_9_S04_AXI_rvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_9->S04_AXI_rvalid.bind(*p_9_S04_AXI_rvalid);
        p_9_S04_AXI_rvalid->set_sv_netview_offsetfromdp(8396912);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_9_S04_AXI_rready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_9->S04_AXI_rready.bind(*p_9_S04_AXI_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_9_S04_AXI_rready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_9_S05_AXI_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_9->S05_AXI_awaddr.bind(*p_9_S05_AXI_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_9_S05_AXI_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_9_S05_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_9->S05_AXI_awlen.bind(*p_9_S05_AXI_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_9_S05_AXI_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_9_S05_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_9->S05_AXI_awsize.bind(*p_9_S05_AXI_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_9_S05_AXI_awsize);
        xsim_sc_channel<0, bool > *p_9_S05_AXI_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_9->S05_AXI_awlock.bind(*p_9_S05_AXI_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_9_S05_AXI_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_9_S05_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_9->S05_AXI_awcache.bind(*p_9_S05_AXI_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_9_S05_AXI_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_9_S05_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_9->S05_AXI_awprot.bind(*p_9_S05_AXI_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_9_S05_AXI_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_9_S05_AXI_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_9->S05_AXI_awregion.bind(*p_9_S05_AXI_awregion);
        (*_glb_hdl_sc_channel_map).push_back(p_9_S05_AXI_awregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_9_S05_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_9->S05_AXI_awqos.bind(*p_9_S05_AXI_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_9_S05_AXI_awqos);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_9_S05_AXI_awvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_9->S05_AXI_awvalid.bind(*p_9_S05_AXI_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_9_S05_AXI_awvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_9_S05_AXI_awready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_9->S05_AXI_awready.bind(*p_9_S05_AXI_awready);
        p_9_S05_AXI_awready->set_sv_netview_offsetfromdp(8397528);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_9_S05_AXI_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_9->S05_AXI_wdata.bind(*p_9_S05_AXI_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_9_S05_AXI_wdata);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_9_S05_AXI_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_9->S05_AXI_wstrb.bind(*p_9_S05_AXI_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_9_S05_AXI_wstrb);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_9_S05_AXI_wlast = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_9->S05_AXI_wlast.bind(*p_9_S05_AXI_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_9_S05_AXI_wlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_9_S05_AXI_wvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_9->S05_AXI_wvalid.bind(*p_9_S05_AXI_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_9_S05_AXI_wvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_9_S05_AXI_wready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_9->S05_AXI_wready.bind(*p_9_S05_AXI_wready);
        p_9_S05_AXI_wready->set_sv_netview_offsetfromdp(8397808);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_9_S05_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_9->S05_AXI_bresp.bind(*p_9_S05_AXI_bresp);
        p_9_S05_AXI_bresp->set_sv_netview_offsetfromdp(8397864);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_9_S05_AXI_bvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_9->S05_AXI_bvalid.bind(*p_9_S05_AXI_bvalid);
        p_9_S05_AXI_bvalid->set_sv_netview_offsetfromdp(8397920);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_9_S05_AXI_bready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_9->S05_AXI_bready.bind(*p_9_S05_AXI_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_9_S05_AXI_bready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_9_S05_AXI_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_9->S05_AXI_araddr.bind(*p_9_S05_AXI_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_9_S05_AXI_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_9_S05_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_9->S05_AXI_arlen.bind(*p_9_S05_AXI_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_9_S05_AXI_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_9_S05_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_9->S05_AXI_arsize.bind(*p_9_S05_AXI_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_9_S05_AXI_arsize);
        xsim_sc_channel<0, bool > *p_9_S05_AXI_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_9->S05_AXI_arlock.bind(*p_9_S05_AXI_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_9_S05_AXI_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_9_S05_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_9->S05_AXI_arcache.bind(*p_9_S05_AXI_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_9_S05_AXI_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_9_S05_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_9->S05_AXI_arprot.bind(*p_9_S05_AXI_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_9_S05_AXI_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_9_S05_AXI_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_9->S05_AXI_arregion.bind(*p_9_S05_AXI_arregion);
        (*_glb_hdl_sc_channel_map).push_back(p_9_S05_AXI_arregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_9_S05_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_9->S05_AXI_arqos.bind(*p_9_S05_AXI_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_9_S05_AXI_arqos);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_9_S05_AXI_arvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_9->S05_AXI_arvalid.bind(*p_9_S05_AXI_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_9_S05_AXI_arvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_9_S05_AXI_arready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_9->S05_AXI_arready.bind(*p_9_S05_AXI_arready);
        p_9_S05_AXI_arready->set_sv_netview_offsetfromdp(8398536);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_9_S05_AXI_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_9->S05_AXI_rdata.bind(*p_9_S05_AXI_rdata);
        p_9_S05_AXI_rdata->set_sv_netview_offsetfromdp(8398592);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_9_S05_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_9->S05_AXI_rresp.bind(*p_9_S05_AXI_rresp);
        p_9_S05_AXI_rresp->set_sv_netview_offsetfromdp(8398648);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_9_S05_AXI_rlast = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_9->S05_AXI_rlast.bind(*p_9_S05_AXI_rlast);
        p_9_S05_AXI_rlast->set_sv_netview_offsetfromdp(8398704);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_9_S05_AXI_rvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_9->S05_AXI_rvalid.bind(*p_9_S05_AXI_rvalid);
        p_9_S05_AXI_rvalid->set_sv_netview_offsetfromdp(8398760);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_9_S05_AXI_rready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_9->S05_AXI_rready.bind(*p_9_S05_AXI_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_9_S05_AXI_rready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_9_S06_AXI_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_9->S06_AXI_awaddr.bind(*p_9_S06_AXI_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_9_S06_AXI_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_9_S06_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_9->S06_AXI_awlen.bind(*p_9_S06_AXI_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_9_S06_AXI_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_9_S06_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_9->S06_AXI_awsize.bind(*p_9_S06_AXI_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_9_S06_AXI_awsize);
        xsim_sc_channel<0, bool > *p_9_S06_AXI_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_9->S06_AXI_awlock.bind(*p_9_S06_AXI_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_9_S06_AXI_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_9_S06_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_9->S06_AXI_awcache.bind(*p_9_S06_AXI_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_9_S06_AXI_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_9_S06_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_9->S06_AXI_awprot.bind(*p_9_S06_AXI_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_9_S06_AXI_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_9_S06_AXI_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_9->S06_AXI_awregion.bind(*p_9_S06_AXI_awregion);
        (*_glb_hdl_sc_channel_map).push_back(p_9_S06_AXI_awregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_9_S06_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_9->S06_AXI_awqos.bind(*p_9_S06_AXI_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_9_S06_AXI_awqos);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_9_S06_AXI_awvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_9->S06_AXI_awvalid.bind(*p_9_S06_AXI_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_9_S06_AXI_awvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_9_S06_AXI_awready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_9->S06_AXI_awready.bind(*p_9_S06_AXI_awready);
        p_9_S06_AXI_awready->set_sv_netview_offsetfromdp(8399376);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_9_S06_AXI_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_9->S06_AXI_wdata.bind(*p_9_S06_AXI_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_9_S06_AXI_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_9_S06_AXI_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_9->S06_AXI_wstrb.bind(*p_9_S06_AXI_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_9_S06_AXI_wstrb);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_9_S06_AXI_wlast = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_9->S06_AXI_wlast.bind(*p_9_S06_AXI_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_9_S06_AXI_wlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_9_S06_AXI_wvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_9->S06_AXI_wvalid.bind(*p_9_S06_AXI_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_9_S06_AXI_wvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_9_S06_AXI_wready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_9->S06_AXI_wready.bind(*p_9_S06_AXI_wready);
        p_9_S06_AXI_wready->set_sv_netview_offsetfromdp(8399656);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_9_S06_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_9->S06_AXI_bresp.bind(*p_9_S06_AXI_bresp);
        p_9_S06_AXI_bresp->set_sv_netview_offsetfromdp(8399712);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_9_S06_AXI_bvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_9->S06_AXI_bvalid.bind(*p_9_S06_AXI_bvalid);
        p_9_S06_AXI_bvalid->set_sv_netview_offsetfromdp(8399768);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_9_S06_AXI_bready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_9->S06_AXI_bready.bind(*p_9_S06_AXI_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_9_S06_AXI_bready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_9_S06_AXI_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_9->S06_AXI_araddr.bind(*p_9_S06_AXI_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_9_S06_AXI_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_9_S06_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_9->S06_AXI_arlen.bind(*p_9_S06_AXI_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_9_S06_AXI_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_9_S06_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_9->S06_AXI_arsize.bind(*p_9_S06_AXI_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_9_S06_AXI_arsize);
        xsim_sc_channel<0, bool > *p_9_S06_AXI_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_9->S06_AXI_arlock.bind(*p_9_S06_AXI_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_9_S06_AXI_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_9_S06_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_9->S06_AXI_arcache.bind(*p_9_S06_AXI_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_9_S06_AXI_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_9_S06_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_9->S06_AXI_arprot.bind(*p_9_S06_AXI_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_9_S06_AXI_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_9_S06_AXI_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_9->S06_AXI_arregion.bind(*p_9_S06_AXI_arregion);
        (*_glb_hdl_sc_channel_map).push_back(p_9_S06_AXI_arregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_9_S06_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_9->S06_AXI_arqos.bind(*p_9_S06_AXI_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_9_S06_AXI_arqos);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_9_S06_AXI_arvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_9->S06_AXI_arvalid.bind(*p_9_S06_AXI_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_9_S06_AXI_arvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_9_S06_AXI_arready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_9->S06_AXI_arready.bind(*p_9_S06_AXI_arready);
        p_9_S06_AXI_arready->set_sv_netview_offsetfromdp(8400384);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_9_S06_AXI_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_9->S06_AXI_rdata.bind(*p_9_S06_AXI_rdata);
        p_9_S06_AXI_rdata->set_sv_netview_offsetfromdp(8400440);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_9_S06_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_9->S06_AXI_rresp.bind(*p_9_S06_AXI_rresp);
        p_9_S06_AXI_rresp->set_sv_netview_offsetfromdp(8400496);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_9_S06_AXI_rlast = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_9->S06_AXI_rlast.bind(*p_9_S06_AXI_rlast);
        p_9_S06_AXI_rlast->set_sv_netview_offsetfromdp(8400552);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_9_S06_AXI_rvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_9->S06_AXI_rvalid.bind(*p_9_S06_AXI_rvalid);
        p_9_S06_AXI_rvalid->set_sv_netview_offsetfromdp(8400608);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_9_S06_AXI_rready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_9->S06_AXI_rready.bind(*p_9_S06_AXI_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_9_S06_AXI_rready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_9_S07_AXI_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_9->S07_AXI_awaddr.bind(*p_9_S07_AXI_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_9_S07_AXI_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_9_S07_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_9->S07_AXI_awlen.bind(*p_9_S07_AXI_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_9_S07_AXI_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_9_S07_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_9->S07_AXI_awsize.bind(*p_9_S07_AXI_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_9_S07_AXI_awsize);
        xsim_sc_channel<0, bool > *p_9_S07_AXI_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_9->S07_AXI_awlock.bind(*p_9_S07_AXI_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_9_S07_AXI_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_9_S07_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_9->S07_AXI_awcache.bind(*p_9_S07_AXI_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_9_S07_AXI_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_9_S07_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_9->S07_AXI_awprot.bind(*p_9_S07_AXI_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_9_S07_AXI_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_9_S07_AXI_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_9->S07_AXI_awregion.bind(*p_9_S07_AXI_awregion);
        (*_glb_hdl_sc_channel_map).push_back(p_9_S07_AXI_awregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_9_S07_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_9->S07_AXI_awqos.bind(*p_9_S07_AXI_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_9_S07_AXI_awqos);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_9_S07_AXI_awvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_9->S07_AXI_awvalid.bind(*p_9_S07_AXI_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_9_S07_AXI_awvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_9_S07_AXI_awready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_9->S07_AXI_awready.bind(*p_9_S07_AXI_awready);
        p_9_S07_AXI_awready->set_sv_netview_offsetfromdp(8401224);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_9_S07_AXI_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_9->S07_AXI_wdata.bind(*p_9_S07_AXI_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_9_S07_AXI_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_9_S07_AXI_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_9->S07_AXI_wstrb.bind(*p_9_S07_AXI_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_9_S07_AXI_wstrb);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_9_S07_AXI_wlast = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_9->S07_AXI_wlast.bind(*p_9_S07_AXI_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_9_S07_AXI_wlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_9_S07_AXI_wvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_9->S07_AXI_wvalid.bind(*p_9_S07_AXI_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_9_S07_AXI_wvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_9_S07_AXI_wready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_9->S07_AXI_wready.bind(*p_9_S07_AXI_wready);
        p_9_S07_AXI_wready->set_sv_netview_offsetfromdp(8401504);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_9_S07_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_9->S07_AXI_bresp.bind(*p_9_S07_AXI_bresp);
        p_9_S07_AXI_bresp->set_sv_netview_offsetfromdp(8401560);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_9_S07_AXI_bvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_9->S07_AXI_bvalid.bind(*p_9_S07_AXI_bvalid);
        p_9_S07_AXI_bvalid->set_sv_netview_offsetfromdp(8401616);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_9_S07_AXI_bready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_9->S07_AXI_bready.bind(*p_9_S07_AXI_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_9_S07_AXI_bready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_9_S07_AXI_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_9->S07_AXI_araddr.bind(*p_9_S07_AXI_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_9_S07_AXI_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_9_S07_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_9->S07_AXI_arlen.bind(*p_9_S07_AXI_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_9_S07_AXI_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_9_S07_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_9->S07_AXI_arsize.bind(*p_9_S07_AXI_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_9_S07_AXI_arsize);
        xsim_sc_channel<0, bool > *p_9_S07_AXI_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_9->S07_AXI_arlock.bind(*p_9_S07_AXI_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_9_S07_AXI_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_9_S07_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_9->S07_AXI_arcache.bind(*p_9_S07_AXI_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_9_S07_AXI_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_9_S07_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_9->S07_AXI_arprot.bind(*p_9_S07_AXI_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_9_S07_AXI_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_9_S07_AXI_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_9->S07_AXI_arregion.bind(*p_9_S07_AXI_arregion);
        (*_glb_hdl_sc_channel_map).push_back(p_9_S07_AXI_arregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_9_S07_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_9->S07_AXI_arqos.bind(*p_9_S07_AXI_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_9_S07_AXI_arqos);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_9_S07_AXI_arvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_9->S07_AXI_arvalid.bind(*p_9_S07_AXI_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_9_S07_AXI_arvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_9_S07_AXI_arready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_9->S07_AXI_arready.bind(*p_9_S07_AXI_arready);
        p_9_S07_AXI_arready->set_sv_netview_offsetfromdp(8402232);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_9_S07_AXI_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_9->S07_AXI_rdata.bind(*p_9_S07_AXI_rdata);
        p_9_S07_AXI_rdata->set_sv_netview_offsetfromdp(8402288);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_9_S07_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_9->S07_AXI_rresp.bind(*p_9_S07_AXI_rresp);
        p_9_S07_AXI_rresp->set_sv_netview_offsetfromdp(8402344);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_9_S07_AXI_rlast = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_9->S07_AXI_rlast.bind(*p_9_S07_AXI_rlast);
        p_9_S07_AXI_rlast->set_sv_netview_offsetfromdp(8402400);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_9_S07_AXI_rvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_9->S07_AXI_rvalid.bind(*p_9_S07_AXI_rvalid);
        p_9_S07_AXI_rvalid->set_sv_netview_offsetfromdp(8402456);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_9_S07_AXI_rready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_9->S07_AXI_rready.bind(*p_9_S07_AXI_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_9_S07_AXI_rready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_9_S08_AXI_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_9->S08_AXI_awaddr.bind(*p_9_S08_AXI_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_9_S08_AXI_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_9_S08_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_9->S08_AXI_awlen.bind(*p_9_S08_AXI_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_9_S08_AXI_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_9_S08_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_9->S08_AXI_awsize.bind(*p_9_S08_AXI_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_9_S08_AXI_awsize);
        xsim_sc_channel<0, bool > *p_9_S08_AXI_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_9->S08_AXI_awlock.bind(*p_9_S08_AXI_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_9_S08_AXI_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_9_S08_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_9->S08_AXI_awcache.bind(*p_9_S08_AXI_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_9_S08_AXI_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_9_S08_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_9->S08_AXI_awprot.bind(*p_9_S08_AXI_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_9_S08_AXI_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_9_S08_AXI_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_9->S08_AXI_awregion.bind(*p_9_S08_AXI_awregion);
        (*_glb_hdl_sc_channel_map).push_back(p_9_S08_AXI_awregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_9_S08_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_9->S08_AXI_awqos.bind(*p_9_S08_AXI_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_9_S08_AXI_awqos);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_9_S08_AXI_awvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_9->S08_AXI_awvalid.bind(*p_9_S08_AXI_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_9_S08_AXI_awvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_9_S08_AXI_awready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_9->S08_AXI_awready.bind(*p_9_S08_AXI_awready);
        p_9_S08_AXI_awready->set_sv_netview_offsetfromdp(8403072);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_9_S08_AXI_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_9->S08_AXI_wdata.bind(*p_9_S08_AXI_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_9_S08_AXI_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_9_S08_AXI_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_9->S08_AXI_wstrb.bind(*p_9_S08_AXI_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_9_S08_AXI_wstrb);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_9_S08_AXI_wlast = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_9->S08_AXI_wlast.bind(*p_9_S08_AXI_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_9_S08_AXI_wlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_9_S08_AXI_wvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_9->S08_AXI_wvalid.bind(*p_9_S08_AXI_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_9_S08_AXI_wvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_9_S08_AXI_wready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_9->S08_AXI_wready.bind(*p_9_S08_AXI_wready);
        p_9_S08_AXI_wready->set_sv_netview_offsetfromdp(8403352);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_9_S08_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_9->S08_AXI_bresp.bind(*p_9_S08_AXI_bresp);
        p_9_S08_AXI_bresp->set_sv_netview_offsetfromdp(8403408);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_9_S08_AXI_bvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_9->S08_AXI_bvalid.bind(*p_9_S08_AXI_bvalid);
        p_9_S08_AXI_bvalid->set_sv_netview_offsetfromdp(8403464);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_9_S08_AXI_bready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_9->S08_AXI_bready.bind(*p_9_S08_AXI_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_9_S08_AXI_bready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_9_S08_AXI_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_9->S08_AXI_araddr.bind(*p_9_S08_AXI_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_9_S08_AXI_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_9_S08_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_9->S08_AXI_arlen.bind(*p_9_S08_AXI_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_9_S08_AXI_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_9_S08_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_9->S08_AXI_arsize.bind(*p_9_S08_AXI_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_9_S08_AXI_arsize);
        xsim_sc_channel<0, bool > *p_9_S08_AXI_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_9->S08_AXI_arlock.bind(*p_9_S08_AXI_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_9_S08_AXI_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_9_S08_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_9->S08_AXI_arcache.bind(*p_9_S08_AXI_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_9_S08_AXI_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_9_S08_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_9->S08_AXI_arprot.bind(*p_9_S08_AXI_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_9_S08_AXI_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_9_S08_AXI_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_9->S08_AXI_arregion.bind(*p_9_S08_AXI_arregion);
        (*_glb_hdl_sc_channel_map).push_back(p_9_S08_AXI_arregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_9_S08_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_9->S08_AXI_arqos.bind(*p_9_S08_AXI_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_9_S08_AXI_arqos);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_9_S08_AXI_arvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_9->S08_AXI_arvalid.bind(*p_9_S08_AXI_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_9_S08_AXI_arvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_9_S08_AXI_arready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_9->S08_AXI_arready.bind(*p_9_S08_AXI_arready);
        p_9_S08_AXI_arready->set_sv_netview_offsetfromdp(8404080);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_9_S08_AXI_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_9->S08_AXI_rdata.bind(*p_9_S08_AXI_rdata);
        p_9_S08_AXI_rdata->set_sv_netview_offsetfromdp(8404136);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_9_S08_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_9->S08_AXI_rresp.bind(*p_9_S08_AXI_rresp);
        p_9_S08_AXI_rresp->set_sv_netview_offsetfromdp(8404192);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_9_S08_AXI_rlast = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_9->S08_AXI_rlast.bind(*p_9_S08_AXI_rlast);
        p_9_S08_AXI_rlast->set_sv_netview_offsetfromdp(8404248);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_9_S08_AXI_rvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_9->S08_AXI_rvalid.bind(*p_9_S08_AXI_rvalid);
        p_9_S08_AXI_rvalid->set_sv_netview_offsetfromdp(8404304);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_9_S08_AXI_rready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_9->S08_AXI_rready.bind(*p_9_S08_AXI_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_9_S08_AXI_rready);
        xsim_sc_channel<0, bool > *p_9_ddr4_mem_calib_complete = new xsim_sc_channel<0, bool >();
        sc_inst_9->ddr4_mem_calib_complete.bind(*p_9_ddr4_mem_calib_complete);
        p_9_ddr4_mem_calib_complete->set_sv_netview_offsetfromdp(8404416);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_9_M00_AXI_awid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_9->M00_AXI_awid.bind(*p_9_M00_AXI_awid);
        p_9_M00_AXI_awid->set_sv_netview_offsetfromdp(8404472);
        xsim_sc_channel<34, sc_dt::sc_bv<34> > *p_9_M00_AXI_awaddr = new xsim_sc_channel<34, sc_dt::sc_bv<34> >();
        sc_inst_9->M00_AXI_awaddr.bind(*p_9_M00_AXI_awaddr);
        p_9_M00_AXI_awaddr->set_sv_netview_offsetfromdp(8404528);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_9_M00_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_9->M00_AXI_awlen.bind(*p_9_M00_AXI_awlen);
        p_9_M00_AXI_awlen->set_sv_netview_offsetfromdp(8404584);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_9_M00_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_9->M00_AXI_awsize.bind(*p_9_M00_AXI_awsize);
        p_9_M00_AXI_awsize->set_sv_netview_offsetfromdp(8404640);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_9_M00_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_9->M00_AXI_awburst.bind(*p_9_M00_AXI_awburst);
        p_9_M00_AXI_awburst->set_sv_netview_offsetfromdp(8404696);
        xsim_sc_channel<0, bool > *p_9_M00_AXI_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_9->M00_AXI_awlock.bind(*p_9_M00_AXI_awlock);
        p_9_M00_AXI_awlock->set_sv_netview_offsetfromdp(8404752);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_9_M00_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_9->M00_AXI_awcache.bind(*p_9_M00_AXI_awcache);
        p_9_M00_AXI_awcache->set_sv_netview_offsetfromdp(8404808);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_9_M00_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_9->M00_AXI_awprot.bind(*p_9_M00_AXI_awprot);
        p_9_M00_AXI_awprot->set_sv_netview_offsetfromdp(8404864);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_9_M00_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_9->M00_AXI_awqos.bind(*p_9_M00_AXI_awqos);
        p_9_M00_AXI_awqos->set_sv_netview_offsetfromdp(8404920);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_9_M00_AXI_awuser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_9->M00_AXI_awuser.bind(*p_9_M00_AXI_awuser);
        p_9_M00_AXI_awuser->set_sv_netview_offsetfromdp(8404976);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_9_M00_AXI_awvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_9->M00_AXI_awvalid.bind(*p_9_M00_AXI_awvalid);
        p_9_M00_AXI_awvalid->set_sv_netview_offsetfromdp(8405032);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_9_M00_AXI_awready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_9->M00_AXI_awready.bind(*p_9_M00_AXI_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_9_M00_AXI_awready);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_9_M00_AXI_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_9->M00_AXI_wdata.bind(*p_9_M00_AXI_wdata);
        p_9_M00_AXI_wdata->set_sv_netview_offsetfromdp(8405144);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_9_M00_AXI_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_9->M00_AXI_wstrb.bind(*p_9_M00_AXI_wstrb);
        p_9_M00_AXI_wstrb->set_sv_netview_offsetfromdp(8405200);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_9_M00_AXI_wlast = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_9->M00_AXI_wlast.bind(*p_9_M00_AXI_wlast);
        p_9_M00_AXI_wlast->set_sv_netview_offsetfromdp(8405256);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_9_M00_AXI_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_9->M00_AXI_wuser.bind(*p_9_M00_AXI_wuser);
        p_9_M00_AXI_wuser->set_sv_netview_offsetfromdp(8405312);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_9_M00_AXI_wvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_9->M00_AXI_wvalid.bind(*p_9_M00_AXI_wvalid);
        p_9_M00_AXI_wvalid->set_sv_netview_offsetfromdp(8405368);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_9_M00_AXI_wready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_9->M00_AXI_wready.bind(*p_9_M00_AXI_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_9_M00_AXI_wready);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_9_M00_AXI_bid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_9->M00_AXI_bid.bind(*p_9_M00_AXI_bid);
        (*_glb_hdl_sc_channel_map).push_back(p_9_M00_AXI_bid);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_9_M00_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_9->M00_AXI_bresp.bind(*p_9_M00_AXI_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_9_M00_AXI_bresp);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_9_M00_AXI_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_9->M00_AXI_buser.bind(*p_9_M00_AXI_buser);
        (*_glb_hdl_sc_channel_map).push_back(p_9_M00_AXI_buser);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_9_M00_AXI_bvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_9->M00_AXI_bvalid.bind(*p_9_M00_AXI_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_9_M00_AXI_bvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_9_M00_AXI_bready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_9->M00_AXI_bready.bind(*p_9_M00_AXI_bready);
        p_9_M00_AXI_bready->set_sv_netview_offsetfromdp(8405704);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_9_M00_AXI_arid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_9->M00_AXI_arid.bind(*p_9_M00_AXI_arid);
        p_9_M00_AXI_arid->set_sv_netview_offsetfromdp(8405760);
        xsim_sc_channel<34, sc_dt::sc_bv<34> > *p_9_M00_AXI_araddr = new xsim_sc_channel<34, sc_dt::sc_bv<34> >();
        sc_inst_9->M00_AXI_araddr.bind(*p_9_M00_AXI_araddr);
        p_9_M00_AXI_araddr->set_sv_netview_offsetfromdp(8405816);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_9_M00_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_9->M00_AXI_arlen.bind(*p_9_M00_AXI_arlen);
        p_9_M00_AXI_arlen->set_sv_netview_offsetfromdp(8405872);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_9_M00_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_9->M00_AXI_arsize.bind(*p_9_M00_AXI_arsize);
        p_9_M00_AXI_arsize->set_sv_netview_offsetfromdp(8405928);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_9_M00_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_9->M00_AXI_arburst.bind(*p_9_M00_AXI_arburst);
        p_9_M00_AXI_arburst->set_sv_netview_offsetfromdp(8405984);
        xsim_sc_channel<0, bool > *p_9_M00_AXI_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_9->M00_AXI_arlock.bind(*p_9_M00_AXI_arlock);
        p_9_M00_AXI_arlock->set_sv_netview_offsetfromdp(8406040);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_9_M00_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_9->M00_AXI_arcache.bind(*p_9_M00_AXI_arcache);
        p_9_M00_AXI_arcache->set_sv_netview_offsetfromdp(8406096);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_9_M00_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_9->M00_AXI_arprot.bind(*p_9_M00_AXI_arprot);
        p_9_M00_AXI_arprot->set_sv_netview_offsetfromdp(8406152);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_9_M00_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_9->M00_AXI_arqos.bind(*p_9_M00_AXI_arqos);
        p_9_M00_AXI_arqos->set_sv_netview_offsetfromdp(8406208);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_9_M00_AXI_aruser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_9->M00_AXI_aruser.bind(*p_9_M00_AXI_aruser);
        p_9_M00_AXI_aruser->set_sv_netview_offsetfromdp(8406264);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_9_M00_AXI_arvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_9->M00_AXI_arvalid.bind(*p_9_M00_AXI_arvalid);
        p_9_M00_AXI_arvalid->set_sv_netview_offsetfromdp(8406320);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_9_M00_AXI_arready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_9->M00_AXI_arready.bind(*p_9_M00_AXI_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_9_M00_AXI_arready);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_9_M00_AXI_rid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_9->M00_AXI_rid.bind(*p_9_M00_AXI_rid);
        (*_glb_hdl_sc_channel_map).push_back(p_9_M00_AXI_rid);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_9_M00_AXI_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_9->M00_AXI_rdata.bind(*p_9_M00_AXI_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_9_M00_AXI_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_9_M00_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_9->M00_AXI_rresp.bind(*p_9_M00_AXI_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_9_M00_AXI_rresp);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_9_M00_AXI_rlast = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_9->M00_AXI_rlast.bind(*p_9_M00_AXI_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_9_M00_AXI_rlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_9_M00_AXI_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_9->M00_AXI_ruser.bind(*p_9_M00_AXI_ruser);
        (*_glb_hdl_sc_channel_map).push_back(p_9_M00_AXI_ruser);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_9_M00_AXI_rvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_9->M00_AXI_rvalid.bind(*p_9_M00_AXI_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_9_M00_AXI_rvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_9_M00_AXI_rready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_9->M00_AXI_rready.bind(*p_9_M00_AXI_rready);
        p_9_M00_AXI_rready->set_sv_netview_offsetfromdp(8406768);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_9_M01_AXI_awid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_9->M01_AXI_awid.bind(*p_9_M01_AXI_awid);
        p_9_M01_AXI_awid->set_sv_netview_offsetfromdp(8406824);
        xsim_sc_channel<34, sc_dt::sc_bv<34> > *p_9_M01_AXI_awaddr = new xsim_sc_channel<34, sc_dt::sc_bv<34> >();
        sc_inst_9->M01_AXI_awaddr.bind(*p_9_M01_AXI_awaddr);
        p_9_M01_AXI_awaddr->set_sv_netview_offsetfromdp(8406880);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_9_M01_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_9->M01_AXI_awlen.bind(*p_9_M01_AXI_awlen);
        p_9_M01_AXI_awlen->set_sv_netview_offsetfromdp(8406936);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_9_M01_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_9->M01_AXI_awsize.bind(*p_9_M01_AXI_awsize);
        p_9_M01_AXI_awsize->set_sv_netview_offsetfromdp(8406992);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_9_M01_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_9->M01_AXI_awburst.bind(*p_9_M01_AXI_awburst);
        p_9_M01_AXI_awburst->set_sv_netview_offsetfromdp(8407048);
        xsim_sc_channel<0, bool > *p_9_M01_AXI_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_9->M01_AXI_awlock.bind(*p_9_M01_AXI_awlock);
        p_9_M01_AXI_awlock->set_sv_netview_offsetfromdp(8407104);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_9_M01_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_9->M01_AXI_awcache.bind(*p_9_M01_AXI_awcache);
        p_9_M01_AXI_awcache->set_sv_netview_offsetfromdp(8407160);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_9_M01_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_9->M01_AXI_awprot.bind(*p_9_M01_AXI_awprot);
        p_9_M01_AXI_awprot->set_sv_netview_offsetfromdp(8407216);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_9_M01_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_9->M01_AXI_awqos.bind(*p_9_M01_AXI_awqos);
        p_9_M01_AXI_awqos->set_sv_netview_offsetfromdp(8407272);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_9_M01_AXI_awuser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_9->M01_AXI_awuser.bind(*p_9_M01_AXI_awuser);
        p_9_M01_AXI_awuser->set_sv_netview_offsetfromdp(8407328);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_9_M01_AXI_awvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_9->M01_AXI_awvalid.bind(*p_9_M01_AXI_awvalid);
        p_9_M01_AXI_awvalid->set_sv_netview_offsetfromdp(8407384);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_9_M01_AXI_awready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_9->M01_AXI_awready.bind(*p_9_M01_AXI_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_9_M01_AXI_awready);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_9_M01_AXI_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_9->M01_AXI_wdata.bind(*p_9_M01_AXI_wdata);
        p_9_M01_AXI_wdata->set_sv_netview_offsetfromdp(8407496);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_9_M01_AXI_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_9->M01_AXI_wstrb.bind(*p_9_M01_AXI_wstrb);
        p_9_M01_AXI_wstrb->set_sv_netview_offsetfromdp(8407552);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_9_M01_AXI_wlast = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_9->M01_AXI_wlast.bind(*p_9_M01_AXI_wlast);
        p_9_M01_AXI_wlast->set_sv_netview_offsetfromdp(8407608);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_9_M01_AXI_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_9->M01_AXI_wuser.bind(*p_9_M01_AXI_wuser);
        p_9_M01_AXI_wuser->set_sv_netview_offsetfromdp(8407664);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_9_M01_AXI_wvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_9->M01_AXI_wvalid.bind(*p_9_M01_AXI_wvalid);
        p_9_M01_AXI_wvalid->set_sv_netview_offsetfromdp(8407720);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_9_M01_AXI_wready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_9->M01_AXI_wready.bind(*p_9_M01_AXI_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_9_M01_AXI_wready);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_9_M01_AXI_bid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_9->M01_AXI_bid.bind(*p_9_M01_AXI_bid);
        (*_glb_hdl_sc_channel_map).push_back(p_9_M01_AXI_bid);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_9_M01_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_9->M01_AXI_bresp.bind(*p_9_M01_AXI_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_9_M01_AXI_bresp);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_9_M01_AXI_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_9->M01_AXI_buser.bind(*p_9_M01_AXI_buser);
        (*_glb_hdl_sc_channel_map).push_back(p_9_M01_AXI_buser);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_9_M01_AXI_bvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_9->M01_AXI_bvalid.bind(*p_9_M01_AXI_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_9_M01_AXI_bvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_9_M01_AXI_bready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_9->M01_AXI_bready.bind(*p_9_M01_AXI_bready);
        p_9_M01_AXI_bready->set_sv_netview_offsetfromdp(8408056);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_9_M01_AXI_arid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_9->M01_AXI_arid.bind(*p_9_M01_AXI_arid);
        p_9_M01_AXI_arid->set_sv_netview_offsetfromdp(8408112);
        xsim_sc_channel<34, sc_dt::sc_bv<34> > *p_9_M01_AXI_araddr = new xsim_sc_channel<34, sc_dt::sc_bv<34> >();
        sc_inst_9->M01_AXI_araddr.bind(*p_9_M01_AXI_araddr);
        p_9_M01_AXI_araddr->set_sv_netview_offsetfromdp(8408168);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_9_M01_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_9->M01_AXI_arlen.bind(*p_9_M01_AXI_arlen);
        p_9_M01_AXI_arlen->set_sv_netview_offsetfromdp(8408224);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_9_M01_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_9->M01_AXI_arsize.bind(*p_9_M01_AXI_arsize);
        p_9_M01_AXI_arsize->set_sv_netview_offsetfromdp(8408280);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_9_M01_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_9->M01_AXI_arburst.bind(*p_9_M01_AXI_arburst);
        p_9_M01_AXI_arburst->set_sv_netview_offsetfromdp(8408336);
        xsim_sc_channel<0, bool > *p_9_M01_AXI_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_9->M01_AXI_arlock.bind(*p_9_M01_AXI_arlock);
        p_9_M01_AXI_arlock->set_sv_netview_offsetfromdp(8408392);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_9_M01_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_9->M01_AXI_arcache.bind(*p_9_M01_AXI_arcache);
        p_9_M01_AXI_arcache->set_sv_netview_offsetfromdp(8408448);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_9_M01_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_9->M01_AXI_arprot.bind(*p_9_M01_AXI_arprot);
        p_9_M01_AXI_arprot->set_sv_netview_offsetfromdp(8408504);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_9_M01_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_9->M01_AXI_arqos.bind(*p_9_M01_AXI_arqos);
        p_9_M01_AXI_arqos->set_sv_netview_offsetfromdp(8408560);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_9_M01_AXI_aruser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_9->M01_AXI_aruser.bind(*p_9_M01_AXI_aruser);
        p_9_M01_AXI_aruser->set_sv_netview_offsetfromdp(8408616);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_9_M01_AXI_arvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_9->M01_AXI_arvalid.bind(*p_9_M01_AXI_arvalid);
        p_9_M01_AXI_arvalid->set_sv_netview_offsetfromdp(8408672);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_9_M01_AXI_arready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_9->M01_AXI_arready.bind(*p_9_M01_AXI_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_9_M01_AXI_arready);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_9_M01_AXI_rid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_9->M01_AXI_rid.bind(*p_9_M01_AXI_rid);
        (*_glb_hdl_sc_channel_map).push_back(p_9_M01_AXI_rid);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_9_M01_AXI_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_9->M01_AXI_rdata.bind(*p_9_M01_AXI_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_9_M01_AXI_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_9_M01_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_9->M01_AXI_rresp.bind(*p_9_M01_AXI_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_9_M01_AXI_rresp);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_9_M01_AXI_rlast = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_9->M01_AXI_rlast.bind(*p_9_M01_AXI_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_9_M01_AXI_rlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_9_M01_AXI_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_9->M01_AXI_ruser.bind(*p_9_M01_AXI_ruser);
        (*_glb_hdl_sc_channel_map).push_back(p_9_M01_AXI_ruser);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_9_M01_AXI_rvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_9->M01_AXI_rvalid.bind(*p_9_M01_AXI_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_9_M01_AXI_rvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_9_M01_AXI_rready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_9->M01_AXI_rready.bind(*p_9_M01_AXI_rready);
        p_9_M01_AXI_rready->set_sv_netview_offsetfromdp(8409120);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_9_M02_AXI_awid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_9->M02_AXI_awid.bind(*p_9_M02_AXI_awid);
        p_9_M02_AXI_awid->set_sv_netview_offsetfromdp(8409176);
        xsim_sc_channel<34, sc_dt::sc_bv<34> > *p_9_M02_AXI_awaddr = new xsim_sc_channel<34, sc_dt::sc_bv<34> >();
        sc_inst_9->M02_AXI_awaddr.bind(*p_9_M02_AXI_awaddr);
        p_9_M02_AXI_awaddr->set_sv_netview_offsetfromdp(8409232);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_9_M02_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_9->M02_AXI_awlen.bind(*p_9_M02_AXI_awlen);
        p_9_M02_AXI_awlen->set_sv_netview_offsetfromdp(8409288);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_9_M02_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_9->M02_AXI_awsize.bind(*p_9_M02_AXI_awsize);
        p_9_M02_AXI_awsize->set_sv_netview_offsetfromdp(8409344);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_9_M02_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_9->M02_AXI_awburst.bind(*p_9_M02_AXI_awburst);
        p_9_M02_AXI_awburst->set_sv_netview_offsetfromdp(8409400);
        xsim_sc_channel<0, bool > *p_9_M02_AXI_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_9->M02_AXI_awlock.bind(*p_9_M02_AXI_awlock);
        p_9_M02_AXI_awlock->set_sv_netview_offsetfromdp(8409456);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_9_M02_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_9->M02_AXI_awcache.bind(*p_9_M02_AXI_awcache);
        p_9_M02_AXI_awcache->set_sv_netview_offsetfromdp(8409512);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_9_M02_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_9->M02_AXI_awprot.bind(*p_9_M02_AXI_awprot);
        p_9_M02_AXI_awprot->set_sv_netview_offsetfromdp(8409568);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_9_M02_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_9->M02_AXI_awqos.bind(*p_9_M02_AXI_awqos);
        p_9_M02_AXI_awqos->set_sv_netview_offsetfromdp(8409624);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_9_M02_AXI_awuser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_9->M02_AXI_awuser.bind(*p_9_M02_AXI_awuser);
        p_9_M02_AXI_awuser->set_sv_netview_offsetfromdp(8409680);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_9_M02_AXI_awvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_9->M02_AXI_awvalid.bind(*p_9_M02_AXI_awvalid);
        p_9_M02_AXI_awvalid->set_sv_netview_offsetfromdp(8409736);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_9_M02_AXI_awready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_9->M02_AXI_awready.bind(*p_9_M02_AXI_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_9_M02_AXI_awready);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_9_M02_AXI_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_9->M02_AXI_wdata.bind(*p_9_M02_AXI_wdata);
        p_9_M02_AXI_wdata->set_sv_netview_offsetfromdp(8409848);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_9_M02_AXI_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_9->M02_AXI_wstrb.bind(*p_9_M02_AXI_wstrb);
        p_9_M02_AXI_wstrb->set_sv_netview_offsetfromdp(8409904);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_9_M02_AXI_wlast = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_9->M02_AXI_wlast.bind(*p_9_M02_AXI_wlast);
        p_9_M02_AXI_wlast->set_sv_netview_offsetfromdp(8409960);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_9_M02_AXI_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_9->M02_AXI_wuser.bind(*p_9_M02_AXI_wuser);
        p_9_M02_AXI_wuser->set_sv_netview_offsetfromdp(8410016);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_9_M02_AXI_wvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_9->M02_AXI_wvalid.bind(*p_9_M02_AXI_wvalid);
        p_9_M02_AXI_wvalid->set_sv_netview_offsetfromdp(8410072);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_9_M02_AXI_wready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_9->M02_AXI_wready.bind(*p_9_M02_AXI_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_9_M02_AXI_wready);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_9_M02_AXI_bid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_9->M02_AXI_bid.bind(*p_9_M02_AXI_bid);
        (*_glb_hdl_sc_channel_map).push_back(p_9_M02_AXI_bid);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_9_M02_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_9->M02_AXI_bresp.bind(*p_9_M02_AXI_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_9_M02_AXI_bresp);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_9_M02_AXI_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_9->M02_AXI_buser.bind(*p_9_M02_AXI_buser);
        (*_glb_hdl_sc_channel_map).push_back(p_9_M02_AXI_buser);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_9_M02_AXI_bvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_9->M02_AXI_bvalid.bind(*p_9_M02_AXI_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_9_M02_AXI_bvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_9_M02_AXI_bready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_9->M02_AXI_bready.bind(*p_9_M02_AXI_bready);
        p_9_M02_AXI_bready->set_sv_netview_offsetfromdp(8410408);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_9_M02_AXI_arid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_9->M02_AXI_arid.bind(*p_9_M02_AXI_arid);
        p_9_M02_AXI_arid->set_sv_netview_offsetfromdp(8410464);
        xsim_sc_channel<34, sc_dt::sc_bv<34> > *p_9_M02_AXI_araddr = new xsim_sc_channel<34, sc_dt::sc_bv<34> >();
        sc_inst_9->M02_AXI_araddr.bind(*p_9_M02_AXI_araddr);
        p_9_M02_AXI_araddr->set_sv_netview_offsetfromdp(8410520);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_9_M02_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_9->M02_AXI_arlen.bind(*p_9_M02_AXI_arlen);
        p_9_M02_AXI_arlen->set_sv_netview_offsetfromdp(8410576);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_9_M02_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_9->M02_AXI_arsize.bind(*p_9_M02_AXI_arsize);
        p_9_M02_AXI_arsize->set_sv_netview_offsetfromdp(8410632);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_9_M02_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_9->M02_AXI_arburst.bind(*p_9_M02_AXI_arburst);
        p_9_M02_AXI_arburst->set_sv_netview_offsetfromdp(8410688);
        xsim_sc_channel<0, bool > *p_9_M02_AXI_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_9->M02_AXI_arlock.bind(*p_9_M02_AXI_arlock);
        p_9_M02_AXI_arlock->set_sv_netview_offsetfromdp(8410744);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_9_M02_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_9->M02_AXI_arcache.bind(*p_9_M02_AXI_arcache);
        p_9_M02_AXI_arcache->set_sv_netview_offsetfromdp(8410800);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_9_M02_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_9->M02_AXI_arprot.bind(*p_9_M02_AXI_arprot);
        p_9_M02_AXI_arprot->set_sv_netview_offsetfromdp(8410856);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_9_M02_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_9->M02_AXI_arqos.bind(*p_9_M02_AXI_arqos);
        p_9_M02_AXI_arqos->set_sv_netview_offsetfromdp(8410912);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_9_M02_AXI_aruser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_9->M02_AXI_aruser.bind(*p_9_M02_AXI_aruser);
        p_9_M02_AXI_aruser->set_sv_netview_offsetfromdp(8410968);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_9_M02_AXI_arvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_9->M02_AXI_arvalid.bind(*p_9_M02_AXI_arvalid);
        p_9_M02_AXI_arvalid->set_sv_netview_offsetfromdp(8411024);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_9_M02_AXI_arready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_9->M02_AXI_arready.bind(*p_9_M02_AXI_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_9_M02_AXI_arready);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_9_M02_AXI_rid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_9->M02_AXI_rid.bind(*p_9_M02_AXI_rid);
        (*_glb_hdl_sc_channel_map).push_back(p_9_M02_AXI_rid);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_9_M02_AXI_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_9->M02_AXI_rdata.bind(*p_9_M02_AXI_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_9_M02_AXI_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_9_M02_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_9->M02_AXI_rresp.bind(*p_9_M02_AXI_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_9_M02_AXI_rresp);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_9_M02_AXI_rlast = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_9->M02_AXI_rlast.bind(*p_9_M02_AXI_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_9_M02_AXI_rlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_9_M02_AXI_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_9->M02_AXI_ruser.bind(*p_9_M02_AXI_ruser);
        (*_glb_hdl_sc_channel_map).push_back(p_9_M02_AXI_ruser);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_9_M02_AXI_rvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_9->M02_AXI_rvalid.bind(*p_9_M02_AXI_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_9_M02_AXI_rvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_9_M02_AXI_rready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_9->M02_AXI_rready.bind(*p_9_M02_AXI_rready);
        p_9_M02_AXI_rready->set_sv_netview_offsetfromdp(8411472);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_9_M03_AXI_awid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_9->M03_AXI_awid.bind(*p_9_M03_AXI_awid);
        p_9_M03_AXI_awid->set_sv_netview_offsetfromdp(8411528);
        xsim_sc_channel<34, sc_dt::sc_bv<34> > *p_9_M03_AXI_awaddr = new xsim_sc_channel<34, sc_dt::sc_bv<34> >();
        sc_inst_9->M03_AXI_awaddr.bind(*p_9_M03_AXI_awaddr);
        p_9_M03_AXI_awaddr->set_sv_netview_offsetfromdp(8411584);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_9_M03_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_9->M03_AXI_awlen.bind(*p_9_M03_AXI_awlen);
        p_9_M03_AXI_awlen->set_sv_netview_offsetfromdp(8411640);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_9_M03_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_9->M03_AXI_awsize.bind(*p_9_M03_AXI_awsize);
        p_9_M03_AXI_awsize->set_sv_netview_offsetfromdp(8411696);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_9_M03_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_9->M03_AXI_awburst.bind(*p_9_M03_AXI_awburst);
        p_9_M03_AXI_awburst->set_sv_netview_offsetfromdp(8411752);
        xsim_sc_channel<0, bool > *p_9_M03_AXI_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_9->M03_AXI_awlock.bind(*p_9_M03_AXI_awlock);
        p_9_M03_AXI_awlock->set_sv_netview_offsetfromdp(8411808);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_9_M03_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_9->M03_AXI_awcache.bind(*p_9_M03_AXI_awcache);
        p_9_M03_AXI_awcache->set_sv_netview_offsetfromdp(8411864);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_9_M03_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_9->M03_AXI_awprot.bind(*p_9_M03_AXI_awprot);
        p_9_M03_AXI_awprot->set_sv_netview_offsetfromdp(8411920);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_9_M03_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_9->M03_AXI_awqos.bind(*p_9_M03_AXI_awqos);
        p_9_M03_AXI_awqos->set_sv_netview_offsetfromdp(8411976);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_9_M03_AXI_awuser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_9->M03_AXI_awuser.bind(*p_9_M03_AXI_awuser);
        p_9_M03_AXI_awuser->set_sv_netview_offsetfromdp(8412032);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_9_M03_AXI_awvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_9->M03_AXI_awvalid.bind(*p_9_M03_AXI_awvalid);
        p_9_M03_AXI_awvalid->set_sv_netview_offsetfromdp(8412088);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_9_M03_AXI_awready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_9->M03_AXI_awready.bind(*p_9_M03_AXI_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_9_M03_AXI_awready);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_9_M03_AXI_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_9->M03_AXI_wdata.bind(*p_9_M03_AXI_wdata);
        p_9_M03_AXI_wdata->set_sv_netview_offsetfromdp(8412200);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_9_M03_AXI_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_9->M03_AXI_wstrb.bind(*p_9_M03_AXI_wstrb);
        p_9_M03_AXI_wstrb->set_sv_netview_offsetfromdp(8412256);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_9_M03_AXI_wlast = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_9->M03_AXI_wlast.bind(*p_9_M03_AXI_wlast);
        p_9_M03_AXI_wlast->set_sv_netview_offsetfromdp(8412312);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_9_M03_AXI_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_9->M03_AXI_wuser.bind(*p_9_M03_AXI_wuser);
        p_9_M03_AXI_wuser->set_sv_netview_offsetfromdp(8412368);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_9_M03_AXI_wvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_9->M03_AXI_wvalid.bind(*p_9_M03_AXI_wvalid);
        p_9_M03_AXI_wvalid->set_sv_netview_offsetfromdp(8412424);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_9_M03_AXI_wready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_9->M03_AXI_wready.bind(*p_9_M03_AXI_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_9_M03_AXI_wready);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_9_M03_AXI_bid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_9->M03_AXI_bid.bind(*p_9_M03_AXI_bid);
        (*_glb_hdl_sc_channel_map).push_back(p_9_M03_AXI_bid);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_9_M03_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_9->M03_AXI_bresp.bind(*p_9_M03_AXI_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_9_M03_AXI_bresp);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_9_M03_AXI_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_9->M03_AXI_buser.bind(*p_9_M03_AXI_buser);
        (*_glb_hdl_sc_channel_map).push_back(p_9_M03_AXI_buser);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_9_M03_AXI_bvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_9->M03_AXI_bvalid.bind(*p_9_M03_AXI_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_9_M03_AXI_bvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_9_M03_AXI_bready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_9->M03_AXI_bready.bind(*p_9_M03_AXI_bready);
        p_9_M03_AXI_bready->set_sv_netview_offsetfromdp(8412760);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_9_M03_AXI_arid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_9->M03_AXI_arid.bind(*p_9_M03_AXI_arid);
        p_9_M03_AXI_arid->set_sv_netview_offsetfromdp(8412816);
        xsim_sc_channel<34, sc_dt::sc_bv<34> > *p_9_M03_AXI_araddr = new xsim_sc_channel<34, sc_dt::sc_bv<34> >();
        sc_inst_9->M03_AXI_araddr.bind(*p_9_M03_AXI_araddr);
        p_9_M03_AXI_araddr->set_sv_netview_offsetfromdp(8412872);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_9_M03_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_9->M03_AXI_arlen.bind(*p_9_M03_AXI_arlen);
        p_9_M03_AXI_arlen->set_sv_netview_offsetfromdp(8412928);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_9_M03_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_9->M03_AXI_arsize.bind(*p_9_M03_AXI_arsize);
        p_9_M03_AXI_arsize->set_sv_netview_offsetfromdp(8412984);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_9_M03_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_9->M03_AXI_arburst.bind(*p_9_M03_AXI_arburst);
        p_9_M03_AXI_arburst->set_sv_netview_offsetfromdp(8413040);
        xsim_sc_channel<0, bool > *p_9_M03_AXI_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_9->M03_AXI_arlock.bind(*p_9_M03_AXI_arlock);
        p_9_M03_AXI_arlock->set_sv_netview_offsetfromdp(8413096);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_9_M03_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_9->M03_AXI_arcache.bind(*p_9_M03_AXI_arcache);
        p_9_M03_AXI_arcache->set_sv_netview_offsetfromdp(8413152);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_9_M03_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_9->M03_AXI_arprot.bind(*p_9_M03_AXI_arprot);
        p_9_M03_AXI_arprot->set_sv_netview_offsetfromdp(8413208);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_9_M03_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_9->M03_AXI_arqos.bind(*p_9_M03_AXI_arqos);
        p_9_M03_AXI_arqos->set_sv_netview_offsetfromdp(8413264);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_9_M03_AXI_aruser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_9->M03_AXI_aruser.bind(*p_9_M03_AXI_aruser);
        p_9_M03_AXI_aruser->set_sv_netview_offsetfromdp(8413320);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_9_M03_AXI_arvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_9->M03_AXI_arvalid.bind(*p_9_M03_AXI_arvalid);
        p_9_M03_AXI_arvalid->set_sv_netview_offsetfromdp(8413376);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_9_M03_AXI_arready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_9->M03_AXI_arready.bind(*p_9_M03_AXI_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_9_M03_AXI_arready);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_9_M03_AXI_rid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_9->M03_AXI_rid.bind(*p_9_M03_AXI_rid);
        (*_glb_hdl_sc_channel_map).push_back(p_9_M03_AXI_rid);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_9_M03_AXI_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_9->M03_AXI_rdata.bind(*p_9_M03_AXI_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_9_M03_AXI_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_9_M03_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_9->M03_AXI_rresp.bind(*p_9_M03_AXI_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_9_M03_AXI_rresp);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_9_M03_AXI_rlast = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_9->M03_AXI_rlast.bind(*p_9_M03_AXI_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_9_M03_AXI_rlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_9_M03_AXI_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_9->M03_AXI_ruser.bind(*p_9_M03_AXI_ruser);
        (*_glb_hdl_sc_channel_map).push_back(p_9_M03_AXI_ruser);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_9_M03_AXI_rvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_9->M03_AXI_rvalid.bind(*p_9_M03_AXI_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_9_M03_AXI_rvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_9_M03_AXI_rready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_9->M03_AXI_rready.bind(*p_9_M03_AXI_rready);
        p_9_M03_AXI_rready->set_sv_netview_offsetfromdp(8413824);
        sc_inst_10 = new emu_sim_ddr_0_0(".emu_wrapper.emu_i.sim_ddr_0");
        sc_inst_10->xsim_set_dbg_index(28);
        xsim_sc_channel<0, bool > *p_10_c0_ui_clk = new xsim_sc_channel<0, bool >();
        sc_inst_10->c0_ui_clk.bind(*p_10_c0_ui_clk);
        (*_glb_hdl_sc_channel_map).push_back(p_10_c0_ui_clk);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_10_c0_ddr_saxi_awid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_10->c0_ddr_saxi_awid.bind(*p_10_c0_ddr_saxi_awid);
        (*_glb_hdl_sc_channel_map).push_back(p_10_c0_ddr_saxi_awid);
        xsim_sc_channel<34, sc_dt::sc_bv<34> > *p_10_c0_ddr_saxi_awaddr = new xsim_sc_channel<34, sc_dt::sc_bv<34> >();
        sc_inst_10->c0_ddr_saxi_awaddr.bind(*p_10_c0_ddr_saxi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_10_c0_ddr_saxi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_10_c0_ddr_saxi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_10->c0_ddr_saxi_awlen.bind(*p_10_c0_ddr_saxi_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_10_c0_ddr_saxi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_10_c0_ddr_saxi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_10->c0_ddr_saxi_awsize.bind(*p_10_c0_ddr_saxi_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_10_c0_ddr_saxi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_10_c0_ddr_saxi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_10->c0_ddr_saxi_awburst.bind(*p_10_c0_ddr_saxi_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_10_c0_ddr_saxi_awburst);
        xsim_sc_channel<0, bool > *p_10_c0_ddr_saxi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_10->c0_ddr_saxi_awlock.bind(*p_10_c0_ddr_saxi_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_10_c0_ddr_saxi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_10_c0_ddr_saxi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_10->c0_ddr_saxi_awcache.bind(*p_10_c0_ddr_saxi_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_10_c0_ddr_saxi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_10_c0_ddr_saxi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_10->c0_ddr_saxi_awprot.bind(*p_10_c0_ddr_saxi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_10_c0_ddr_saxi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_10_c0_ddr_saxi_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_10->c0_ddr_saxi_awregion.bind(*p_10_c0_ddr_saxi_awregion);
        (*_glb_hdl_sc_channel_map).push_back(p_10_c0_ddr_saxi_awregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_10_c0_ddr_saxi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_10->c0_ddr_saxi_awqos.bind(*p_10_c0_ddr_saxi_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_10_c0_ddr_saxi_awqos);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_10_c0_ddr_saxi_awuser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_10->c0_ddr_saxi_awuser.bind(*p_10_c0_ddr_saxi_awuser);
        (*_glb_hdl_sc_channel_map).push_back(p_10_c0_ddr_saxi_awuser);
        xsim_sc_channel<0, bool > *p_10_c0_ddr_saxi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_10->c0_ddr_saxi_awvalid.bind(*p_10_c0_ddr_saxi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_10_c0_ddr_saxi_awvalid);
        xsim_sc_channel<0, bool > *p_10_c0_ddr_saxi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_10->c0_ddr_saxi_awready.bind(*p_10_c0_ddr_saxi_awready);
        p_10_c0_ddr_saxi_awready->set_sv_netview_offsetfromdp(8414656);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_10_c0_ddr_saxi_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_10->c0_ddr_saxi_wdata.bind(*p_10_c0_ddr_saxi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_10_c0_ddr_saxi_wdata);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_10_c0_ddr_saxi_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_10->c0_ddr_saxi_wstrb.bind(*p_10_c0_ddr_saxi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_10_c0_ddr_saxi_wstrb);
        xsim_sc_channel<0, bool > *p_10_c0_ddr_saxi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_10->c0_ddr_saxi_wlast.bind(*p_10_c0_ddr_saxi_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_10_c0_ddr_saxi_wlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_10_c0_ddr_saxi_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_10->c0_ddr_saxi_wuser.bind(*p_10_c0_ddr_saxi_wuser);
        (*_glb_hdl_sc_channel_map).push_back(p_10_c0_ddr_saxi_wuser);
        xsim_sc_channel<0, bool > *p_10_c0_ddr_saxi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_10->c0_ddr_saxi_wvalid.bind(*p_10_c0_ddr_saxi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_10_c0_ddr_saxi_wvalid);
        xsim_sc_channel<0, bool > *p_10_c0_ddr_saxi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_10->c0_ddr_saxi_wready.bind(*p_10_c0_ddr_saxi_wready);
        p_10_c0_ddr_saxi_wready->set_sv_netview_offsetfromdp(8414992);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_10_c0_ddr_saxi_bid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_10->c0_ddr_saxi_bid.bind(*p_10_c0_ddr_saxi_bid);
        p_10_c0_ddr_saxi_bid->set_sv_netview_offsetfromdp(8415048);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_10_c0_ddr_saxi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_10->c0_ddr_saxi_bresp.bind(*p_10_c0_ddr_saxi_bresp);
        p_10_c0_ddr_saxi_bresp->set_sv_netview_offsetfromdp(8415104);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_10_c0_ddr_saxi_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_10->c0_ddr_saxi_buser.bind(*p_10_c0_ddr_saxi_buser);
        p_10_c0_ddr_saxi_buser->set_sv_netview_offsetfromdp(8415160);
        xsim_sc_channel<0, bool > *p_10_c0_ddr_saxi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_10->c0_ddr_saxi_bvalid.bind(*p_10_c0_ddr_saxi_bvalid);
        p_10_c0_ddr_saxi_bvalid->set_sv_netview_offsetfromdp(8415216);
        xsim_sc_channel<0, bool > *p_10_c0_ddr_saxi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_10->c0_ddr_saxi_bready.bind(*p_10_c0_ddr_saxi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_10_c0_ddr_saxi_bready);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_10_c0_ddr_saxi_arid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_10->c0_ddr_saxi_arid.bind(*p_10_c0_ddr_saxi_arid);
        (*_glb_hdl_sc_channel_map).push_back(p_10_c0_ddr_saxi_arid);
        xsim_sc_channel<34, sc_dt::sc_bv<34> > *p_10_c0_ddr_saxi_araddr = new xsim_sc_channel<34, sc_dt::sc_bv<34> >();
        sc_inst_10->c0_ddr_saxi_araddr.bind(*p_10_c0_ddr_saxi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_10_c0_ddr_saxi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_10_c0_ddr_saxi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_10->c0_ddr_saxi_arlen.bind(*p_10_c0_ddr_saxi_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_10_c0_ddr_saxi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_10_c0_ddr_saxi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_10->c0_ddr_saxi_arsize.bind(*p_10_c0_ddr_saxi_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_10_c0_ddr_saxi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_10_c0_ddr_saxi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_10->c0_ddr_saxi_arburst.bind(*p_10_c0_ddr_saxi_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_10_c0_ddr_saxi_arburst);
        xsim_sc_channel<0, bool > *p_10_c0_ddr_saxi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_10->c0_ddr_saxi_arlock.bind(*p_10_c0_ddr_saxi_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_10_c0_ddr_saxi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_10_c0_ddr_saxi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_10->c0_ddr_saxi_arcache.bind(*p_10_c0_ddr_saxi_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_10_c0_ddr_saxi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_10_c0_ddr_saxi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_10->c0_ddr_saxi_arprot.bind(*p_10_c0_ddr_saxi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_10_c0_ddr_saxi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_10_c0_ddr_saxi_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_10->c0_ddr_saxi_arregion.bind(*p_10_c0_ddr_saxi_arregion);
        (*_glb_hdl_sc_channel_map).push_back(p_10_c0_ddr_saxi_arregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_10_c0_ddr_saxi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_10->c0_ddr_saxi_arqos.bind(*p_10_c0_ddr_saxi_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_10_c0_ddr_saxi_arqos);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_10_c0_ddr_saxi_aruser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_10->c0_ddr_saxi_aruser.bind(*p_10_c0_ddr_saxi_aruser);
        (*_glb_hdl_sc_channel_map).push_back(p_10_c0_ddr_saxi_aruser);
        xsim_sc_channel<0, bool > *p_10_c0_ddr_saxi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_10->c0_ddr_saxi_arvalid.bind(*p_10_c0_ddr_saxi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_10_c0_ddr_saxi_arvalid);
        xsim_sc_channel<0, bool > *p_10_c0_ddr_saxi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_10->c0_ddr_saxi_arready.bind(*p_10_c0_ddr_saxi_arready);
        p_10_c0_ddr_saxi_arready->set_sv_netview_offsetfromdp(8416000);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_10_c0_ddr_saxi_rid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_10->c0_ddr_saxi_rid.bind(*p_10_c0_ddr_saxi_rid);
        p_10_c0_ddr_saxi_rid->set_sv_netview_offsetfromdp(8416056);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_10_c0_ddr_saxi_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_10->c0_ddr_saxi_rdata.bind(*p_10_c0_ddr_saxi_rdata);
        p_10_c0_ddr_saxi_rdata->set_sv_netview_offsetfromdp(8416112);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_10_c0_ddr_saxi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_10->c0_ddr_saxi_rresp.bind(*p_10_c0_ddr_saxi_rresp);
        p_10_c0_ddr_saxi_rresp->set_sv_netview_offsetfromdp(8416168);
        xsim_sc_channel<0, bool > *p_10_c0_ddr_saxi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_10->c0_ddr_saxi_rlast.bind(*p_10_c0_ddr_saxi_rlast);
        p_10_c0_ddr_saxi_rlast->set_sv_netview_offsetfromdp(8416224);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_10_c0_ddr_saxi_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_10->c0_ddr_saxi_ruser.bind(*p_10_c0_ddr_saxi_ruser);
        p_10_c0_ddr_saxi_ruser->set_sv_netview_offsetfromdp(8416280);
        xsim_sc_channel<0, bool > *p_10_c0_ddr_saxi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_10->c0_ddr_saxi_rvalid.bind(*p_10_c0_ddr_saxi_rvalid);
        p_10_c0_ddr_saxi_rvalid->set_sv_netview_offsetfromdp(8416336);
        xsim_sc_channel<0, bool > *p_10_c0_ddr_saxi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_10->c0_ddr_saxi_rready.bind(*p_10_c0_ddr_saxi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_10_c0_ddr_saxi_rready);
        xsim_sc_channel<0, bool > *p_10_c0_ddr_saxi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_10->c0_ddr_saxi_aclk.bind(*p_10_c0_ddr_saxi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_10_c0_ddr_saxi_aclk);
        xsim_sc_channel<0, bool > *p_10_c0_ddr_saxi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_10->c0_ddr_saxi_aresetn.bind(*p_10_c0_ddr_saxi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_10_c0_ddr_saxi_aresetn);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_10_s_xdma_axi_awid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_10->s_xdma_axi_awid.bind(*p_10_s_xdma_axi_awid);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s_xdma_axi_awid);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_10_s_xdma_axi_awaddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_10->s_xdma_axi_awaddr.bind(*p_10_s_xdma_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s_xdma_axi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_10_s_xdma_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_10->s_xdma_axi_awlen.bind(*p_10_s_xdma_axi_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s_xdma_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_10_s_xdma_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_10->s_xdma_axi_awsize.bind(*p_10_s_xdma_axi_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s_xdma_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_10_s_xdma_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_10->s_xdma_axi_awburst.bind(*p_10_s_xdma_axi_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s_xdma_axi_awburst);
        xsim_sc_channel<0, bool > *p_10_s_xdma_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_10->s_xdma_axi_awlock.bind(*p_10_s_xdma_axi_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s_xdma_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_10_s_xdma_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_10->s_xdma_axi_awcache.bind(*p_10_s_xdma_axi_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s_xdma_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_10_s_xdma_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_10->s_xdma_axi_awprot.bind(*p_10_s_xdma_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s_xdma_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_10_s_xdma_axi_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_10->s_xdma_axi_awregion.bind(*p_10_s_xdma_axi_awregion);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s_xdma_axi_awregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_10_s_xdma_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_10->s_xdma_axi_awqos.bind(*p_10_s_xdma_axi_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s_xdma_axi_awqos);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_10_s_xdma_axi_awuser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_10->s_xdma_axi_awuser.bind(*p_10_s_xdma_axi_awuser);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s_xdma_axi_awuser);
        xsim_sc_channel<0, bool > *p_10_s_xdma_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_10->s_xdma_axi_awvalid.bind(*p_10_s_xdma_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s_xdma_axi_awvalid);
        xsim_sc_channel<0, bool > *p_10_s_xdma_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_10->s_xdma_axi_awready.bind(*p_10_s_xdma_axi_awready);
        p_10_s_xdma_axi_awready->set_sv_netview_offsetfromdp(8417232);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_10_s_xdma_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_10->s_xdma_axi_wdata.bind(*p_10_s_xdma_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s_xdma_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_10_s_xdma_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_10->s_xdma_axi_wstrb.bind(*p_10_s_xdma_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s_xdma_axi_wstrb);
        xsim_sc_channel<0, bool > *p_10_s_xdma_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_10->s_xdma_axi_wlast.bind(*p_10_s_xdma_axi_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s_xdma_axi_wlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_10_s_xdma_axi_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_10->s_xdma_axi_wuser.bind(*p_10_s_xdma_axi_wuser);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s_xdma_axi_wuser);
        xsim_sc_channel<0, bool > *p_10_s_xdma_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_10->s_xdma_axi_wvalid.bind(*p_10_s_xdma_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s_xdma_axi_wvalid);
        xsim_sc_channel<0, bool > *p_10_s_xdma_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_10->s_xdma_axi_wready.bind(*p_10_s_xdma_axi_wready);
        p_10_s_xdma_axi_wready->set_sv_netview_offsetfromdp(8417568);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_10_s_xdma_axi_bid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_10->s_xdma_axi_bid.bind(*p_10_s_xdma_axi_bid);
        p_10_s_xdma_axi_bid->set_sv_netview_offsetfromdp(8417624);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_10_s_xdma_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_10->s_xdma_axi_bresp.bind(*p_10_s_xdma_axi_bresp);
        p_10_s_xdma_axi_bresp->set_sv_netview_offsetfromdp(8417680);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_10_s_xdma_axi_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_10->s_xdma_axi_buser.bind(*p_10_s_xdma_axi_buser);
        p_10_s_xdma_axi_buser->set_sv_netview_offsetfromdp(8417736);
        xsim_sc_channel<0, bool > *p_10_s_xdma_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_10->s_xdma_axi_bvalid.bind(*p_10_s_xdma_axi_bvalid);
        p_10_s_xdma_axi_bvalid->set_sv_netview_offsetfromdp(8417792);
        xsim_sc_channel<0, bool > *p_10_s_xdma_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_10->s_xdma_axi_bready.bind(*p_10_s_xdma_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s_xdma_axi_bready);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_10_s_xdma_axi_arid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_10->s_xdma_axi_arid.bind(*p_10_s_xdma_axi_arid);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s_xdma_axi_arid);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_10_s_xdma_axi_araddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_10->s_xdma_axi_araddr.bind(*p_10_s_xdma_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s_xdma_axi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_10_s_xdma_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_10->s_xdma_axi_arlen.bind(*p_10_s_xdma_axi_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s_xdma_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_10_s_xdma_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_10->s_xdma_axi_arsize.bind(*p_10_s_xdma_axi_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s_xdma_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_10_s_xdma_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_10->s_xdma_axi_arburst.bind(*p_10_s_xdma_axi_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s_xdma_axi_arburst);
        xsim_sc_channel<0, bool > *p_10_s_xdma_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_10->s_xdma_axi_arlock.bind(*p_10_s_xdma_axi_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s_xdma_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_10_s_xdma_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_10->s_xdma_axi_arcache.bind(*p_10_s_xdma_axi_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s_xdma_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_10_s_xdma_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_10->s_xdma_axi_arprot.bind(*p_10_s_xdma_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s_xdma_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_10_s_xdma_axi_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_10->s_xdma_axi_arregion.bind(*p_10_s_xdma_axi_arregion);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s_xdma_axi_arregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_10_s_xdma_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_10->s_xdma_axi_arqos.bind(*p_10_s_xdma_axi_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s_xdma_axi_arqos);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_10_s_xdma_axi_aruser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_10->s_xdma_axi_aruser.bind(*p_10_s_xdma_axi_aruser);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s_xdma_axi_aruser);
        xsim_sc_channel<0, bool > *p_10_s_xdma_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_10->s_xdma_axi_arvalid.bind(*p_10_s_xdma_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s_xdma_axi_arvalid);
        xsim_sc_channel<0, bool > *p_10_s_xdma_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_10->s_xdma_axi_arready.bind(*p_10_s_xdma_axi_arready);
        p_10_s_xdma_axi_arready->set_sv_netview_offsetfromdp(8418576);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_10_s_xdma_axi_rid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_10->s_xdma_axi_rid.bind(*p_10_s_xdma_axi_rid);
        p_10_s_xdma_axi_rid->set_sv_netview_offsetfromdp(8418632);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_10_s_xdma_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_10->s_xdma_axi_rdata.bind(*p_10_s_xdma_axi_rdata);
        p_10_s_xdma_axi_rdata->set_sv_netview_offsetfromdp(8418688);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_10_s_xdma_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_10->s_xdma_axi_rresp.bind(*p_10_s_xdma_axi_rresp);
        p_10_s_xdma_axi_rresp->set_sv_netview_offsetfromdp(8418744);
        xsim_sc_channel<0, bool > *p_10_s_xdma_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_10->s_xdma_axi_rlast.bind(*p_10_s_xdma_axi_rlast);
        p_10_s_xdma_axi_rlast->set_sv_netview_offsetfromdp(8418800);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_10_s_xdma_axi_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_10->s_xdma_axi_ruser.bind(*p_10_s_xdma_axi_ruser);
        p_10_s_xdma_axi_ruser->set_sv_netview_offsetfromdp(8418856);
        xsim_sc_channel<0, bool > *p_10_s_xdma_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_10->s_xdma_axi_rvalid.bind(*p_10_s_xdma_axi_rvalid);
        p_10_s_xdma_axi_rvalid->set_sv_netview_offsetfromdp(8418912);
        xsim_sc_channel<0, bool > *p_10_s_xdma_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_10->s_xdma_axi_rready.bind(*p_10_s_xdma_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s_xdma_axi_rready);
        xsim_sc_channel<0, bool > *p_10_s_xdma_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_10->s_xdma_axi_aclk.bind(*p_10_s_xdma_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s_xdma_axi_aclk);
        xsim_sc_channel<0, bool > *p_10_s_xdma_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_10->s_xdma_axi_aresetn.bind(*p_10_s_xdma_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s_xdma_axi_aresetn);
        sc_inst_11 = new emu_sim_ddr_2_0(".emu_wrapper.emu_i.sim_ddr_2");
        sc_inst_11->xsim_set_dbg_index(29);
        xsim_sc_channel<0, bool > *p_11_c0_ui_clk = new xsim_sc_channel<0, bool >();
        sc_inst_11->c0_ui_clk.bind(*p_11_c0_ui_clk);
        (*_glb_hdl_sc_channel_map).push_back(p_11_c0_ui_clk);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_11_c0_ddr_saxi_awid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_11->c0_ddr_saxi_awid.bind(*p_11_c0_ddr_saxi_awid);
        (*_glb_hdl_sc_channel_map).push_back(p_11_c0_ddr_saxi_awid);
        xsim_sc_channel<34, sc_dt::sc_bv<34> > *p_11_c0_ddr_saxi_awaddr = new xsim_sc_channel<34, sc_dt::sc_bv<34> >();
        sc_inst_11->c0_ddr_saxi_awaddr.bind(*p_11_c0_ddr_saxi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_11_c0_ddr_saxi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_11_c0_ddr_saxi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_11->c0_ddr_saxi_awlen.bind(*p_11_c0_ddr_saxi_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_11_c0_ddr_saxi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_11_c0_ddr_saxi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_11->c0_ddr_saxi_awsize.bind(*p_11_c0_ddr_saxi_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_11_c0_ddr_saxi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_11_c0_ddr_saxi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_11->c0_ddr_saxi_awburst.bind(*p_11_c0_ddr_saxi_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_11_c0_ddr_saxi_awburst);
        xsim_sc_channel<0, bool > *p_11_c0_ddr_saxi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_11->c0_ddr_saxi_awlock.bind(*p_11_c0_ddr_saxi_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_11_c0_ddr_saxi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_11_c0_ddr_saxi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_11->c0_ddr_saxi_awcache.bind(*p_11_c0_ddr_saxi_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_11_c0_ddr_saxi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_11_c0_ddr_saxi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_11->c0_ddr_saxi_awprot.bind(*p_11_c0_ddr_saxi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_11_c0_ddr_saxi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_11_c0_ddr_saxi_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_11->c0_ddr_saxi_awregion.bind(*p_11_c0_ddr_saxi_awregion);
        (*_glb_hdl_sc_channel_map).push_back(p_11_c0_ddr_saxi_awregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_11_c0_ddr_saxi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_11->c0_ddr_saxi_awqos.bind(*p_11_c0_ddr_saxi_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_11_c0_ddr_saxi_awqos);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_11_c0_ddr_saxi_awuser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_11->c0_ddr_saxi_awuser.bind(*p_11_c0_ddr_saxi_awuser);
        (*_glb_hdl_sc_channel_map).push_back(p_11_c0_ddr_saxi_awuser);
        xsim_sc_channel<0, bool > *p_11_c0_ddr_saxi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_11->c0_ddr_saxi_awvalid.bind(*p_11_c0_ddr_saxi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_11_c0_ddr_saxi_awvalid);
        xsim_sc_channel<0, bool > *p_11_c0_ddr_saxi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_11->c0_ddr_saxi_awready.bind(*p_11_c0_ddr_saxi_awready);
        p_11_c0_ddr_saxi_awready->set_sv_netview_offsetfromdp(8419912);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_11_c0_ddr_saxi_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_11->c0_ddr_saxi_wdata.bind(*p_11_c0_ddr_saxi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_11_c0_ddr_saxi_wdata);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_11_c0_ddr_saxi_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_11->c0_ddr_saxi_wstrb.bind(*p_11_c0_ddr_saxi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_11_c0_ddr_saxi_wstrb);
        xsim_sc_channel<0, bool > *p_11_c0_ddr_saxi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_11->c0_ddr_saxi_wlast.bind(*p_11_c0_ddr_saxi_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_11_c0_ddr_saxi_wlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_11_c0_ddr_saxi_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_11->c0_ddr_saxi_wuser.bind(*p_11_c0_ddr_saxi_wuser);
        (*_glb_hdl_sc_channel_map).push_back(p_11_c0_ddr_saxi_wuser);
        xsim_sc_channel<0, bool > *p_11_c0_ddr_saxi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_11->c0_ddr_saxi_wvalid.bind(*p_11_c0_ddr_saxi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_11_c0_ddr_saxi_wvalid);
        xsim_sc_channel<0, bool > *p_11_c0_ddr_saxi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_11->c0_ddr_saxi_wready.bind(*p_11_c0_ddr_saxi_wready);
        p_11_c0_ddr_saxi_wready->set_sv_netview_offsetfromdp(8420248);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_11_c0_ddr_saxi_bid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_11->c0_ddr_saxi_bid.bind(*p_11_c0_ddr_saxi_bid);
        p_11_c0_ddr_saxi_bid->set_sv_netview_offsetfromdp(8420304);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_11_c0_ddr_saxi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_11->c0_ddr_saxi_bresp.bind(*p_11_c0_ddr_saxi_bresp);
        p_11_c0_ddr_saxi_bresp->set_sv_netview_offsetfromdp(8420360);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_11_c0_ddr_saxi_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_11->c0_ddr_saxi_buser.bind(*p_11_c0_ddr_saxi_buser);
        p_11_c0_ddr_saxi_buser->set_sv_netview_offsetfromdp(8420416);
        xsim_sc_channel<0, bool > *p_11_c0_ddr_saxi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_11->c0_ddr_saxi_bvalid.bind(*p_11_c0_ddr_saxi_bvalid);
        p_11_c0_ddr_saxi_bvalid->set_sv_netview_offsetfromdp(8420472);
        xsim_sc_channel<0, bool > *p_11_c0_ddr_saxi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_11->c0_ddr_saxi_bready.bind(*p_11_c0_ddr_saxi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_11_c0_ddr_saxi_bready);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_11_c0_ddr_saxi_arid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_11->c0_ddr_saxi_arid.bind(*p_11_c0_ddr_saxi_arid);
        (*_glb_hdl_sc_channel_map).push_back(p_11_c0_ddr_saxi_arid);
        xsim_sc_channel<34, sc_dt::sc_bv<34> > *p_11_c0_ddr_saxi_araddr = new xsim_sc_channel<34, sc_dt::sc_bv<34> >();
        sc_inst_11->c0_ddr_saxi_araddr.bind(*p_11_c0_ddr_saxi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_11_c0_ddr_saxi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_11_c0_ddr_saxi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_11->c0_ddr_saxi_arlen.bind(*p_11_c0_ddr_saxi_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_11_c0_ddr_saxi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_11_c0_ddr_saxi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_11->c0_ddr_saxi_arsize.bind(*p_11_c0_ddr_saxi_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_11_c0_ddr_saxi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_11_c0_ddr_saxi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_11->c0_ddr_saxi_arburst.bind(*p_11_c0_ddr_saxi_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_11_c0_ddr_saxi_arburst);
        xsim_sc_channel<0, bool > *p_11_c0_ddr_saxi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_11->c0_ddr_saxi_arlock.bind(*p_11_c0_ddr_saxi_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_11_c0_ddr_saxi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_11_c0_ddr_saxi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_11->c0_ddr_saxi_arcache.bind(*p_11_c0_ddr_saxi_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_11_c0_ddr_saxi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_11_c0_ddr_saxi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_11->c0_ddr_saxi_arprot.bind(*p_11_c0_ddr_saxi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_11_c0_ddr_saxi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_11_c0_ddr_saxi_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_11->c0_ddr_saxi_arregion.bind(*p_11_c0_ddr_saxi_arregion);
        (*_glb_hdl_sc_channel_map).push_back(p_11_c0_ddr_saxi_arregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_11_c0_ddr_saxi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_11->c0_ddr_saxi_arqos.bind(*p_11_c0_ddr_saxi_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_11_c0_ddr_saxi_arqos);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_11_c0_ddr_saxi_aruser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_11->c0_ddr_saxi_aruser.bind(*p_11_c0_ddr_saxi_aruser);
        (*_glb_hdl_sc_channel_map).push_back(p_11_c0_ddr_saxi_aruser);
        xsim_sc_channel<0, bool > *p_11_c0_ddr_saxi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_11->c0_ddr_saxi_arvalid.bind(*p_11_c0_ddr_saxi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_11_c0_ddr_saxi_arvalid);
        xsim_sc_channel<0, bool > *p_11_c0_ddr_saxi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_11->c0_ddr_saxi_arready.bind(*p_11_c0_ddr_saxi_arready);
        p_11_c0_ddr_saxi_arready->set_sv_netview_offsetfromdp(8421256);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_11_c0_ddr_saxi_rid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_11->c0_ddr_saxi_rid.bind(*p_11_c0_ddr_saxi_rid);
        p_11_c0_ddr_saxi_rid->set_sv_netview_offsetfromdp(8421312);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_11_c0_ddr_saxi_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_11->c0_ddr_saxi_rdata.bind(*p_11_c0_ddr_saxi_rdata);
        p_11_c0_ddr_saxi_rdata->set_sv_netview_offsetfromdp(8421368);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_11_c0_ddr_saxi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_11->c0_ddr_saxi_rresp.bind(*p_11_c0_ddr_saxi_rresp);
        p_11_c0_ddr_saxi_rresp->set_sv_netview_offsetfromdp(8421424);
        xsim_sc_channel<0, bool > *p_11_c0_ddr_saxi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_11->c0_ddr_saxi_rlast.bind(*p_11_c0_ddr_saxi_rlast);
        p_11_c0_ddr_saxi_rlast->set_sv_netview_offsetfromdp(8421480);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_11_c0_ddr_saxi_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_11->c0_ddr_saxi_ruser.bind(*p_11_c0_ddr_saxi_ruser);
        p_11_c0_ddr_saxi_ruser->set_sv_netview_offsetfromdp(8421536);
        xsim_sc_channel<0, bool > *p_11_c0_ddr_saxi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_11->c0_ddr_saxi_rvalid.bind(*p_11_c0_ddr_saxi_rvalid);
        p_11_c0_ddr_saxi_rvalid->set_sv_netview_offsetfromdp(8421592);
        xsim_sc_channel<0, bool > *p_11_c0_ddr_saxi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_11->c0_ddr_saxi_rready.bind(*p_11_c0_ddr_saxi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_11_c0_ddr_saxi_rready);
        xsim_sc_channel<0, bool > *p_11_c0_ddr_saxi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_11->c0_ddr_saxi_aclk.bind(*p_11_c0_ddr_saxi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_11_c0_ddr_saxi_aclk);
        xsim_sc_channel<0, bool > *p_11_c0_ddr_saxi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_11->c0_ddr_saxi_aresetn.bind(*p_11_c0_ddr_saxi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_11_c0_ddr_saxi_aresetn);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_11_s_xdma_axi_awid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_11->s_xdma_axi_awid.bind(*p_11_s_xdma_axi_awid);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s_xdma_axi_awid);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_11_s_xdma_axi_awaddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_11->s_xdma_axi_awaddr.bind(*p_11_s_xdma_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s_xdma_axi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_11_s_xdma_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_11->s_xdma_axi_awlen.bind(*p_11_s_xdma_axi_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s_xdma_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_11_s_xdma_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_11->s_xdma_axi_awsize.bind(*p_11_s_xdma_axi_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s_xdma_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_11_s_xdma_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_11->s_xdma_axi_awburst.bind(*p_11_s_xdma_axi_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s_xdma_axi_awburst);
        xsim_sc_channel<0, bool > *p_11_s_xdma_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_11->s_xdma_axi_awlock.bind(*p_11_s_xdma_axi_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s_xdma_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_11_s_xdma_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_11->s_xdma_axi_awcache.bind(*p_11_s_xdma_axi_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s_xdma_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_11_s_xdma_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_11->s_xdma_axi_awprot.bind(*p_11_s_xdma_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s_xdma_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_11_s_xdma_axi_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_11->s_xdma_axi_awregion.bind(*p_11_s_xdma_axi_awregion);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s_xdma_axi_awregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_11_s_xdma_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_11->s_xdma_axi_awqos.bind(*p_11_s_xdma_axi_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s_xdma_axi_awqos);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_11_s_xdma_axi_awuser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_11->s_xdma_axi_awuser.bind(*p_11_s_xdma_axi_awuser);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s_xdma_axi_awuser);
        xsim_sc_channel<0, bool > *p_11_s_xdma_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_11->s_xdma_axi_awvalid.bind(*p_11_s_xdma_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s_xdma_axi_awvalid);
        xsim_sc_channel<0, bool > *p_11_s_xdma_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_11->s_xdma_axi_awready.bind(*p_11_s_xdma_axi_awready);
        p_11_s_xdma_axi_awready->set_sv_netview_offsetfromdp(8422488);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_11_s_xdma_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_11->s_xdma_axi_wdata.bind(*p_11_s_xdma_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s_xdma_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_11_s_xdma_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_11->s_xdma_axi_wstrb.bind(*p_11_s_xdma_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s_xdma_axi_wstrb);
        xsim_sc_channel<0, bool > *p_11_s_xdma_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_11->s_xdma_axi_wlast.bind(*p_11_s_xdma_axi_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s_xdma_axi_wlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_11_s_xdma_axi_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_11->s_xdma_axi_wuser.bind(*p_11_s_xdma_axi_wuser);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s_xdma_axi_wuser);
        xsim_sc_channel<0, bool > *p_11_s_xdma_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_11->s_xdma_axi_wvalid.bind(*p_11_s_xdma_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s_xdma_axi_wvalid);
        xsim_sc_channel<0, bool > *p_11_s_xdma_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_11->s_xdma_axi_wready.bind(*p_11_s_xdma_axi_wready);
        p_11_s_xdma_axi_wready->set_sv_netview_offsetfromdp(8422824);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_11_s_xdma_axi_bid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_11->s_xdma_axi_bid.bind(*p_11_s_xdma_axi_bid);
        p_11_s_xdma_axi_bid->set_sv_netview_offsetfromdp(8422880);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_11_s_xdma_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_11->s_xdma_axi_bresp.bind(*p_11_s_xdma_axi_bresp);
        p_11_s_xdma_axi_bresp->set_sv_netview_offsetfromdp(8422936);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_11_s_xdma_axi_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_11->s_xdma_axi_buser.bind(*p_11_s_xdma_axi_buser);
        p_11_s_xdma_axi_buser->set_sv_netview_offsetfromdp(8422992);
        xsim_sc_channel<0, bool > *p_11_s_xdma_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_11->s_xdma_axi_bvalid.bind(*p_11_s_xdma_axi_bvalid);
        p_11_s_xdma_axi_bvalid->set_sv_netview_offsetfromdp(8423048);
        xsim_sc_channel<0, bool > *p_11_s_xdma_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_11->s_xdma_axi_bready.bind(*p_11_s_xdma_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s_xdma_axi_bready);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_11_s_xdma_axi_arid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_11->s_xdma_axi_arid.bind(*p_11_s_xdma_axi_arid);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s_xdma_axi_arid);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_11_s_xdma_axi_araddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_11->s_xdma_axi_araddr.bind(*p_11_s_xdma_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s_xdma_axi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_11_s_xdma_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_11->s_xdma_axi_arlen.bind(*p_11_s_xdma_axi_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s_xdma_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_11_s_xdma_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_11->s_xdma_axi_arsize.bind(*p_11_s_xdma_axi_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s_xdma_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_11_s_xdma_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_11->s_xdma_axi_arburst.bind(*p_11_s_xdma_axi_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s_xdma_axi_arburst);
        xsim_sc_channel<0, bool > *p_11_s_xdma_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_11->s_xdma_axi_arlock.bind(*p_11_s_xdma_axi_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s_xdma_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_11_s_xdma_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_11->s_xdma_axi_arcache.bind(*p_11_s_xdma_axi_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s_xdma_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_11_s_xdma_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_11->s_xdma_axi_arprot.bind(*p_11_s_xdma_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s_xdma_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_11_s_xdma_axi_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_11->s_xdma_axi_arregion.bind(*p_11_s_xdma_axi_arregion);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s_xdma_axi_arregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_11_s_xdma_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_11->s_xdma_axi_arqos.bind(*p_11_s_xdma_axi_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s_xdma_axi_arqos);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_11_s_xdma_axi_aruser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_11->s_xdma_axi_aruser.bind(*p_11_s_xdma_axi_aruser);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s_xdma_axi_aruser);
        xsim_sc_channel<0, bool > *p_11_s_xdma_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_11->s_xdma_axi_arvalid.bind(*p_11_s_xdma_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s_xdma_axi_arvalid);
        xsim_sc_channel<0, bool > *p_11_s_xdma_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_11->s_xdma_axi_arready.bind(*p_11_s_xdma_axi_arready);
        p_11_s_xdma_axi_arready->set_sv_netview_offsetfromdp(8423832);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_11_s_xdma_axi_rid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_11->s_xdma_axi_rid.bind(*p_11_s_xdma_axi_rid);
        p_11_s_xdma_axi_rid->set_sv_netview_offsetfromdp(8423888);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_11_s_xdma_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_11->s_xdma_axi_rdata.bind(*p_11_s_xdma_axi_rdata);
        p_11_s_xdma_axi_rdata->set_sv_netview_offsetfromdp(8423944);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_11_s_xdma_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_11->s_xdma_axi_rresp.bind(*p_11_s_xdma_axi_rresp);
        p_11_s_xdma_axi_rresp->set_sv_netview_offsetfromdp(8424000);
        xsim_sc_channel<0, bool > *p_11_s_xdma_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_11->s_xdma_axi_rlast.bind(*p_11_s_xdma_axi_rlast);
        p_11_s_xdma_axi_rlast->set_sv_netview_offsetfromdp(8424056);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_11_s_xdma_axi_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_11->s_xdma_axi_ruser.bind(*p_11_s_xdma_axi_ruser);
        p_11_s_xdma_axi_ruser->set_sv_netview_offsetfromdp(8424112);
        xsim_sc_channel<0, bool > *p_11_s_xdma_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_11->s_xdma_axi_rvalid.bind(*p_11_s_xdma_axi_rvalid);
        p_11_s_xdma_axi_rvalid->set_sv_netview_offsetfromdp(8424168);
        xsim_sc_channel<0, bool > *p_11_s_xdma_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_11->s_xdma_axi_rready.bind(*p_11_s_xdma_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s_xdma_axi_rready);
        xsim_sc_channel<0, bool > *p_11_s_xdma_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_11->s_xdma_axi_aclk.bind(*p_11_s_xdma_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s_xdma_axi_aclk);
        xsim_sc_channel<0, bool > *p_11_s_xdma_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_11->s_xdma_axi_aresetn.bind(*p_11_s_xdma_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s_xdma_axi_aresetn);
        sc_inst_12 = new emu_sim_ddr_3_0(".emu_wrapper.emu_i.sim_ddr_3");
        sc_inst_12->xsim_set_dbg_index(30);
        xsim_sc_channel<0, bool > *p_12_c0_ui_clk = new xsim_sc_channel<0, bool >();
        sc_inst_12->c0_ui_clk.bind(*p_12_c0_ui_clk);
        (*_glb_hdl_sc_channel_map).push_back(p_12_c0_ui_clk);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_12_c0_ddr_saxi_awid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_12->c0_ddr_saxi_awid.bind(*p_12_c0_ddr_saxi_awid);
        (*_glb_hdl_sc_channel_map).push_back(p_12_c0_ddr_saxi_awid);
        xsim_sc_channel<34, sc_dt::sc_bv<34> > *p_12_c0_ddr_saxi_awaddr = new xsim_sc_channel<34, sc_dt::sc_bv<34> >();
        sc_inst_12->c0_ddr_saxi_awaddr.bind(*p_12_c0_ddr_saxi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_12_c0_ddr_saxi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_12_c0_ddr_saxi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_12->c0_ddr_saxi_awlen.bind(*p_12_c0_ddr_saxi_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_12_c0_ddr_saxi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_12_c0_ddr_saxi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_12->c0_ddr_saxi_awsize.bind(*p_12_c0_ddr_saxi_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_12_c0_ddr_saxi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_12_c0_ddr_saxi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_12->c0_ddr_saxi_awburst.bind(*p_12_c0_ddr_saxi_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_12_c0_ddr_saxi_awburst);
        xsim_sc_channel<0, bool > *p_12_c0_ddr_saxi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_12->c0_ddr_saxi_awlock.bind(*p_12_c0_ddr_saxi_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_12_c0_ddr_saxi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_12_c0_ddr_saxi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_12->c0_ddr_saxi_awcache.bind(*p_12_c0_ddr_saxi_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_12_c0_ddr_saxi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_12_c0_ddr_saxi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_12->c0_ddr_saxi_awprot.bind(*p_12_c0_ddr_saxi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_12_c0_ddr_saxi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_12_c0_ddr_saxi_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_12->c0_ddr_saxi_awregion.bind(*p_12_c0_ddr_saxi_awregion);
        (*_glb_hdl_sc_channel_map).push_back(p_12_c0_ddr_saxi_awregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_12_c0_ddr_saxi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_12->c0_ddr_saxi_awqos.bind(*p_12_c0_ddr_saxi_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_12_c0_ddr_saxi_awqos);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_12_c0_ddr_saxi_awuser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_12->c0_ddr_saxi_awuser.bind(*p_12_c0_ddr_saxi_awuser);
        (*_glb_hdl_sc_channel_map).push_back(p_12_c0_ddr_saxi_awuser);
        xsim_sc_channel<0, bool > *p_12_c0_ddr_saxi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_12->c0_ddr_saxi_awvalid.bind(*p_12_c0_ddr_saxi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_12_c0_ddr_saxi_awvalid);
        xsim_sc_channel<0, bool > *p_12_c0_ddr_saxi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_12->c0_ddr_saxi_awready.bind(*p_12_c0_ddr_saxi_awready);
        p_12_c0_ddr_saxi_awready->set_sv_netview_offsetfromdp(8425168);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_12_c0_ddr_saxi_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_12->c0_ddr_saxi_wdata.bind(*p_12_c0_ddr_saxi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_12_c0_ddr_saxi_wdata);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_12_c0_ddr_saxi_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_12->c0_ddr_saxi_wstrb.bind(*p_12_c0_ddr_saxi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_12_c0_ddr_saxi_wstrb);
        xsim_sc_channel<0, bool > *p_12_c0_ddr_saxi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_12->c0_ddr_saxi_wlast.bind(*p_12_c0_ddr_saxi_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_12_c0_ddr_saxi_wlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_12_c0_ddr_saxi_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_12->c0_ddr_saxi_wuser.bind(*p_12_c0_ddr_saxi_wuser);
        (*_glb_hdl_sc_channel_map).push_back(p_12_c0_ddr_saxi_wuser);
        xsim_sc_channel<0, bool > *p_12_c0_ddr_saxi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_12->c0_ddr_saxi_wvalid.bind(*p_12_c0_ddr_saxi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_12_c0_ddr_saxi_wvalid);
        xsim_sc_channel<0, bool > *p_12_c0_ddr_saxi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_12->c0_ddr_saxi_wready.bind(*p_12_c0_ddr_saxi_wready);
        p_12_c0_ddr_saxi_wready->set_sv_netview_offsetfromdp(8425504);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_12_c0_ddr_saxi_bid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_12->c0_ddr_saxi_bid.bind(*p_12_c0_ddr_saxi_bid);
        p_12_c0_ddr_saxi_bid->set_sv_netview_offsetfromdp(8425560);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_12_c0_ddr_saxi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_12->c0_ddr_saxi_bresp.bind(*p_12_c0_ddr_saxi_bresp);
        p_12_c0_ddr_saxi_bresp->set_sv_netview_offsetfromdp(8425616);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_12_c0_ddr_saxi_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_12->c0_ddr_saxi_buser.bind(*p_12_c0_ddr_saxi_buser);
        p_12_c0_ddr_saxi_buser->set_sv_netview_offsetfromdp(8425672);
        xsim_sc_channel<0, bool > *p_12_c0_ddr_saxi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_12->c0_ddr_saxi_bvalid.bind(*p_12_c0_ddr_saxi_bvalid);
        p_12_c0_ddr_saxi_bvalid->set_sv_netview_offsetfromdp(8425728);
        xsim_sc_channel<0, bool > *p_12_c0_ddr_saxi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_12->c0_ddr_saxi_bready.bind(*p_12_c0_ddr_saxi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_12_c0_ddr_saxi_bready);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_12_c0_ddr_saxi_arid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_12->c0_ddr_saxi_arid.bind(*p_12_c0_ddr_saxi_arid);
        (*_glb_hdl_sc_channel_map).push_back(p_12_c0_ddr_saxi_arid);
        xsim_sc_channel<34, sc_dt::sc_bv<34> > *p_12_c0_ddr_saxi_araddr = new xsim_sc_channel<34, sc_dt::sc_bv<34> >();
        sc_inst_12->c0_ddr_saxi_araddr.bind(*p_12_c0_ddr_saxi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_12_c0_ddr_saxi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_12_c0_ddr_saxi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_12->c0_ddr_saxi_arlen.bind(*p_12_c0_ddr_saxi_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_12_c0_ddr_saxi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_12_c0_ddr_saxi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_12->c0_ddr_saxi_arsize.bind(*p_12_c0_ddr_saxi_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_12_c0_ddr_saxi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_12_c0_ddr_saxi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_12->c0_ddr_saxi_arburst.bind(*p_12_c0_ddr_saxi_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_12_c0_ddr_saxi_arburst);
        xsim_sc_channel<0, bool > *p_12_c0_ddr_saxi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_12->c0_ddr_saxi_arlock.bind(*p_12_c0_ddr_saxi_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_12_c0_ddr_saxi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_12_c0_ddr_saxi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_12->c0_ddr_saxi_arcache.bind(*p_12_c0_ddr_saxi_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_12_c0_ddr_saxi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_12_c0_ddr_saxi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_12->c0_ddr_saxi_arprot.bind(*p_12_c0_ddr_saxi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_12_c0_ddr_saxi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_12_c0_ddr_saxi_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_12->c0_ddr_saxi_arregion.bind(*p_12_c0_ddr_saxi_arregion);
        (*_glb_hdl_sc_channel_map).push_back(p_12_c0_ddr_saxi_arregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_12_c0_ddr_saxi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_12->c0_ddr_saxi_arqos.bind(*p_12_c0_ddr_saxi_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_12_c0_ddr_saxi_arqos);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_12_c0_ddr_saxi_aruser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_12->c0_ddr_saxi_aruser.bind(*p_12_c0_ddr_saxi_aruser);
        (*_glb_hdl_sc_channel_map).push_back(p_12_c0_ddr_saxi_aruser);
        xsim_sc_channel<0, bool > *p_12_c0_ddr_saxi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_12->c0_ddr_saxi_arvalid.bind(*p_12_c0_ddr_saxi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_12_c0_ddr_saxi_arvalid);
        xsim_sc_channel<0, bool > *p_12_c0_ddr_saxi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_12->c0_ddr_saxi_arready.bind(*p_12_c0_ddr_saxi_arready);
        p_12_c0_ddr_saxi_arready->set_sv_netview_offsetfromdp(8426512);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_12_c0_ddr_saxi_rid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_12->c0_ddr_saxi_rid.bind(*p_12_c0_ddr_saxi_rid);
        p_12_c0_ddr_saxi_rid->set_sv_netview_offsetfromdp(8426568);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_12_c0_ddr_saxi_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_12->c0_ddr_saxi_rdata.bind(*p_12_c0_ddr_saxi_rdata);
        p_12_c0_ddr_saxi_rdata->set_sv_netview_offsetfromdp(8426624);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_12_c0_ddr_saxi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_12->c0_ddr_saxi_rresp.bind(*p_12_c0_ddr_saxi_rresp);
        p_12_c0_ddr_saxi_rresp->set_sv_netview_offsetfromdp(8426680);
        xsim_sc_channel<0, bool > *p_12_c0_ddr_saxi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_12->c0_ddr_saxi_rlast.bind(*p_12_c0_ddr_saxi_rlast);
        p_12_c0_ddr_saxi_rlast->set_sv_netview_offsetfromdp(8426736);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_12_c0_ddr_saxi_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_12->c0_ddr_saxi_ruser.bind(*p_12_c0_ddr_saxi_ruser);
        p_12_c0_ddr_saxi_ruser->set_sv_netview_offsetfromdp(8426792);
        xsim_sc_channel<0, bool > *p_12_c0_ddr_saxi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_12->c0_ddr_saxi_rvalid.bind(*p_12_c0_ddr_saxi_rvalid);
        p_12_c0_ddr_saxi_rvalid->set_sv_netview_offsetfromdp(8426848);
        xsim_sc_channel<0, bool > *p_12_c0_ddr_saxi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_12->c0_ddr_saxi_rready.bind(*p_12_c0_ddr_saxi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_12_c0_ddr_saxi_rready);
        xsim_sc_channel<0, bool > *p_12_c0_ddr_saxi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_12->c0_ddr_saxi_aclk.bind(*p_12_c0_ddr_saxi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_12_c0_ddr_saxi_aclk);
        xsim_sc_channel<0, bool > *p_12_c0_ddr_saxi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_12->c0_ddr_saxi_aresetn.bind(*p_12_c0_ddr_saxi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_12_c0_ddr_saxi_aresetn);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_12_s_xdma_axi_awid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_12->s_xdma_axi_awid.bind(*p_12_s_xdma_axi_awid);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s_xdma_axi_awid);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_12_s_xdma_axi_awaddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_12->s_xdma_axi_awaddr.bind(*p_12_s_xdma_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s_xdma_axi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_12_s_xdma_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_12->s_xdma_axi_awlen.bind(*p_12_s_xdma_axi_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s_xdma_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_12_s_xdma_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_12->s_xdma_axi_awsize.bind(*p_12_s_xdma_axi_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s_xdma_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_12_s_xdma_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_12->s_xdma_axi_awburst.bind(*p_12_s_xdma_axi_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s_xdma_axi_awburst);
        xsim_sc_channel<0, bool > *p_12_s_xdma_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_12->s_xdma_axi_awlock.bind(*p_12_s_xdma_axi_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s_xdma_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_12_s_xdma_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_12->s_xdma_axi_awcache.bind(*p_12_s_xdma_axi_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s_xdma_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_12_s_xdma_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_12->s_xdma_axi_awprot.bind(*p_12_s_xdma_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s_xdma_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_12_s_xdma_axi_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_12->s_xdma_axi_awregion.bind(*p_12_s_xdma_axi_awregion);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s_xdma_axi_awregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_12_s_xdma_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_12->s_xdma_axi_awqos.bind(*p_12_s_xdma_axi_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s_xdma_axi_awqos);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_12_s_xdma_axi_awuser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_12->s_xdma_axi_awuser.bind(*p_12_s_xdma_axi_awuser);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s_xdma_axi_awuser);
        xsim_sc_channel<0, bool > *p_12_s_xdma_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_12->s_xdma_axi_awvalid.bind(*p_12_s_xdma_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s_xdma_axi_awvalid);
        xsim_sc_channel<0, bool > *p_12_s_xdma_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_12->s_xdma_axi_awready.bind(*p_12_s_xdma_axi_awready);
        p_12_s_xdma_axi_awready->set_sv_netview_offsetfromdp(8427744);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_12_s_xdma_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_12->s_xdma_axi_wdata.bind(*p_12_s_xdma_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s_xdma_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_12_s_xdma_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_12->s_xdma_axi_wstrb.bind(*p_12_s_xdma_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s_xdma_axi_wstrb);
        xsim_sc_channel<0, bool > *p_12_s_xdma_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_12->s_xdma_axi_wlast.bind(*p_12_s_xdma_axi_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s_xdma_axi_wlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_12_s_xdma_axi_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_12->s_xdma_axi_wuser.bind(*p_12_s_xdma_axi_wuser);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s_xdma_axi_wuser);
        xsim_sc_channel<0, bool > *p_12_s_xdma_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_12->s_xdma_axi_wvalid.bind(*p_12_s_xdma_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s_xdma_axi_wvalid);
        xsim_sc_channel<0, bool > *p_12_s_xdma_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_12->s_xdma_axi_wready.bind(*p_12_s_xdma_axi_wready);
        p_12_s_xdma_axi_wready->set_sv_netview_offsetfromdp(8428080);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_12_s_xdma_axi_bid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_12->s_xdma_axi_bid.bind(*p_12_s_xdma_axi_bid);
        p_12_s_xdma_axi_bid->set_sv_netview_offsetfromdp(8428136);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_12_s_xdma_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_12->s_xdma_axi_bresp.bind(*p_12_s_xdma_axi_bresp);
        p_12_s_xdma_axi_bresp->set_sv_netview_offsetfromdp(8428192);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_12_s_xdma_axi_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_12->s_xdma_axi_buser.bind(*p_12_s_xdma_axi_buser);
        p_12_s_xdma_axi_buser->set_sv_netview_offsetfromdp(8428248);
        xsim_sc_channel<0, bool > *p_12_s_xdma_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_12->s_xdma_axi_bvalid.bind(*p_12_s_xdma_axi_bvalid);
        p_12_s_xdma_axi_bvalid->set_sv_netview_offsetfromdp(8428304);
        xsim_sc_channel<0, bool > *p_12_s_xdma_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_12->s_xdma_axi_bready.bind(*p_12_s_xdma_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s_xdma_axi_bready);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_12_s_xdma_axi_arid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_12->s_xdma_axi_arid.bind(*p_12_s_xdma_axi_arid);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s_xdma_axi_arid);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_12_s_xdma_axi_araddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_12->s_xdma_axi_araddr.bind(*p_12_s_xdma_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s_xdma_axi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_12_s_xdma_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_12->s_xdma_axi_arlen.bind(*p_12_s_xdma_axi_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s_xdma_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_12_s_xdma_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_12->s_xdma_axi_arsize.bind(*p_12_s_xdma_axi_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s_xdma_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_12_s_xdma_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_12->s_xdma_axi_arburst.bind(*p_12_s_xdma_axi_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s_xdma_axi_arburst);
        xsim_sc_channel<0, bool > *p_12_s_xdma_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_12->s_xdma_axi_arlock.bind(*p_12_s_xdma_axi_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s_xdma_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_12_s_xdma_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_12->s_xdma_axi_arcache.bind(*p_12_s_xdma_axi_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s_xdma_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_12_s_xdma_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_12->s_xdma_axi_arprot.bind(*p_12_s_xdma_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s_xdma_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_12_s_xdma_axi_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_12->s_xdma_axi_arregion.bind(*p_12_s_xdma_axi_arregion);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s_xdma_axi_arregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_12_s_xdma_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_12->s_xdma_axi_arqos.bind(*p_12_s_xdma_axi_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s_xdma_axi_arqos);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_12_s_xdma_axi_aruser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_12->s_xdma_axi_aruser.bind(*p_12_s_xdma_axi_aruser);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s_xdma_axi_aruser);
        xsim_sc_channel<0, bool > *p_12_s_xdma_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_12->s_xdma_axi_arvalid.bind(*p_12_s_xdma_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s_xdma_axi_arvalid);
        xsim_sc_channel<0, bool > *p_12_s_xdma_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_12->s_xdma_axi_arready.bind(*p_12_s_xdma_axi_arready);
        p_12_s_xdma_axi_arready->set_sv_netview_offsetfromdp(8429088);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_12_s_xdma_axi_rid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_12->s_xdma_axi_rid.bind(*p_12_s_xdma_axi_rid);
        p_12_s_xdma_axi_rid->set_sv_netview_offsetfromdp(8429144);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_12_s_xdma_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_12->s_xdma_axi_rdata.bind(*p_12_s_xdma_axi_rdata);
        p_12_s_xdma_axi_rdata->set_sv_netview_offsetfromdp(8429200);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_12_s_xdma_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_12->s_xdma_axi_rresp.bind(*p_12_s_xdma_axi_rresp);
        p_12_s_xdma_axi_rresp->set_sv_netview_offsetfromdp(8429256);
        xsim_sc_channel<0, bool > *p_12_s_xdma_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_12->s_xdma_axi_rlast.bind(*p_12_s_xdma_axi_rlast);
        p_12_s_xdma_axi_rlast->set_sv_netview_offsetfromdp(8429312);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_12_s_xdma_axi_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_12->s_xdma_axi_ruser.bind(*p_12_s_xdma_axi_ruser);
        p_12_s_xdma_axi_ruser->set_sv_netview_offsetfromdp(8429368);
        xsim_sc_channel<0, bool > *p_12_s_xdma_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_12->s_xdma_axi_rvalid.bind(*p_12_s_xdma_axi_rvalid);
        p_12_s_xdma_axi_rvalid->set_sv_netview_offsetfromdp(8429424);
        xsim_sc_channel<0, bool > *p_12_s_xdma_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_12->s_xdma_axi_rready.bind(*p_12_s_xdma_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s_xdma_axi_rready);
        xsim_sc_channel<0, bool > *p_12_s_xdma_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_12->s_xdma_axi_aclk.bind(*p_12_s_xdma_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s_xdma_axi_aclk);
        xsim_sc_channel<0, bool > *p_12_s_xdma_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_12->s_xdma_axi_aresetn.bind(*p_12_s_xdma_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s_xdma_axi_aresetn);
        sc_inst_13 = new emu_icn_pass_0_0(".emu_wrapper.emu_i.slr0.icn_pass_0");
        sc_inst_13->xsim_set_dbg_index(250);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_13_s00_axi_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_13->s00_axi_awid.bind(*p_13_s00_axi_awid);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s00_axi_awid);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_13_s00_axi_awaddr = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_13->s00_axi_awaddr.bind(*p_13_s00_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s00_axi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_13_s00_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_13->s00_axi_awlen.bind(*p_13_s00_axi_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s00_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_13_s00_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_13->s00_axi_awsize.bind(*p_13_s00_axi_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s00_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_13_s00_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_13->s00_axi_awburst.bind(*p_13_s00_axi_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s00_axi_awburst);
        xsim_sc_channel<0, bool > *p_13_s00_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_13->s00_axi_awlock.bind(*p_13_s00_axi_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s00_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_13_s00_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_13->s00_axi_awcache.bind(*p_13_s00_axi_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s00_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_13_s00_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_13->s00_axi_awprot.bind(*p_13_s00_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s00_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_13_s00_axi_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_13->s00_axi_awregion.bind(*p_13_s00_axi_awregion);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s00_axi_awregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_13_s00_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_13->s00_axi_awqos.bind(*p_13_s00_axi_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s00_axi_awqos);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_13_s00_axi_awuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_13->s00_axi_awuser.bind(*p_13_s00_axi_awuser);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s00_axi_awuser);
        xsim_sc_channel<0, bool > *p_13_s00_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->s00_axi_awvalid.bind(*p_13_s00_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s00_axi_awvalid);
        xsim_sc_channel<0, bool > *p_13_s00_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_13->s00_axi_awready.bind(*p_13_s00_axi_awready);
        p_13_s00_axi_awready->set_sv_netview_offsetfromdp(8506016);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_13_s00_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_13->s00_axi_wdata.bind(*p_13_s00_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s00_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_13_s00_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_13->s00_axi_wstrb.bind(*p_13_s00_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s00_axi_wstrb);
        xsim_sc_channel<0, bool > *p_13_s00_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_13->s00_axi_wlast.bind(*p_13_s00_axi_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s00_axi_wlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_13_s00_axi_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_13->s00_axi_wuser.bind(*p_13_s00_axi_wuser);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s00_axi_wuser);
        xsim_sc_channel<0, bool > *p_13_s00_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->s00_axi_wvalid.bind(*p_13_s00_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s00_axi_wvalid);
        xsim_sc_channel<0, bool > *p_13_s00_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_13->s00_axi_wready.bind(*p_13_s00_axi_wready);
        p_13_s00_axi_wready->set_sv_netview_offsetfromdp(8506352);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_13_s00_axi_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_13->s00_axi_bid.bind(*p_13_s00_axi_bid);
        p_13_s00_axi_bid->set_sv_netview_offsetfromdp(8506408);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_13_s00_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_13->s00_axi_bresp.bind(*p_13_s00_axi_bresp);
        p_13_s00_axi_bresp->set_sv_netview_offsetfromdp(8506464);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_13_s00_axi_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_13->s00_axi_buser.bind(*p_13_s00_axi_buser);
        p_13_s00_axi_buser->set_sv_netview_offsetfromdp(8506520);
        xsim_sc_channel<0, bool > *p_13_s00_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->s00_axi_bvalid.bind(*p_13_s00_axi_bvalid);
        p_13_s00_axi_bvalid->set_sv_netview_offsetfromdp(8506576);
        xsim_sc_channel<0, bool > *p_13_s00_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_13->s00_axi_bready.bind(*p_13_s00_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s00_axi_bready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_13_s00_axi_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_13->s00_axi_arid.bind(*p_13_s00_axi_arid);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s00_axi_arid);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_13_s00_axi_araddr = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_13->s00_axi_araddr.bind(*p_13_s00_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s00_axi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_13_s00_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_13->s00_axi_arlen.bind(*p_13_s00_axi_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s00_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_13_s00_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_13->s00_axi_arsize.bind(*p_13_s00_axi_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s00_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_13_s00_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_13->s00_axi_arburst.bind(*p_13_s00_axi_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s00_axi_arburst);
        xsim_sc_channel<0, bool > *p_13_s00_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_13->s00_axi_arlock.bind(*p_13_s00_axi_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s00_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_13_s00_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_13->s00_axi_arcache.bind(*p_13_s00_axi_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s00_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_13_s00_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_13->s00_axi_arprot.bind(*p_13_s00_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s00_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_13_s00_axi_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_13->s00_axi_arregion.bind(*p_13_s00_axi_arregion);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s00_axi_arregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_13_s00_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_13->s00_axi_arqos.bind(*p_13_s00_axi_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s00_axi_arqos);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_13_s00_axi_aruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_13->s00_axi_aruser.bind(*p_13_s00_axi_aruser);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s00_axi_aruser);
        xsim_sc_channel<0, bool > *p_13_s00_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->s00_axi_arvalid.bind(*p_13_s00_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s00_axi_arvalid);
        xsim_sc_channel<0, bool > *p_13_s00_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_13->s00_axi_arready.bind(*p_13_s00_axi_arready);
        p_13_s00_axi_arready->set_sv_netview_offsetfromdp(8507360);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_13_s00_axi_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_13->s00_axi_rid.bind(*p_13_s00_axi_rid);
        p_13_s00_axi_rid->set_sv_netview_offsetfromdp(8507416);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_13_s00_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_13->s00_axi_rdata.bind(*p_13_s00_axi_rdata);
        p_13_s00_axi_rdata->set_sv_netview_offsetfromdp(8507472);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_13_s00_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_13->s00_axi_rresp.bind(*p_13_s00_axi_rresp);
        p_13_s00_axi_rresp->set_sv_netview_offsetfromdp(8507528);
        xsim_sc_channel<0, bool > *p_13_s00_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_13->s00_axi_rlast.bind(*p_13_s00_axi_rlast);
        p_13_s00_axi_rlast->set_sv_netview_offsetfromdp(8507584);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_13_s00_axi_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_13->s00_axi_ruser.bind(*p_13_s00_axi_ruser);
        p_13_s00_axi_ruser->set_sv_netview_offsetfromdp(8507640);
        xsim_sc_channel<0, bool > *p_13_s00_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->s00_axi_rvalid.bind(*p_13_s00_axi_rvalid);
        p_13_s00_axi_rvalid->set_sv_netview_offsetfromdp(8507696);
        xsim_sc_channel<0, bool > *p_13_s00_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_13->s00_axi_rready.bind(*p_13_s00_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s00_axi_rready);
        xsim_sc_channel<0, bool > *p_13_s00_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_13->s00_axi_aclk.bind(*p_13_s00_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s00_axi_aclk);
        xsim_sc_channel<0, bool > *p_13_s00_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_13->s00_axi_aresetn.bind(*p_13_s00_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s00_axi_aresetn);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_13_m00_axi_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_13->m00_axi_awid.bind(*p_13_m00_axi_awid);
        p_13_m00_axi_awid->set_sv_netview_offsetfromdp(8507920);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_13_m00_axi_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_13->m00_axi_awaddr.bind(*p_13_m00_axi_awaddr);
        p_13_m00_axi_awaddr->set_sv_netview_offsetfromdp(8507976);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_13_m00_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_13->m00_axi_awlen.bind(*p_13_m00_axi_awlen);
        p_13_m00_axi_awlen->set_sv_netview_offsetfromdp(8508032);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_13_m00_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_13->m00_axi_awsize.bind(*p_13_m00_axi_awsize);
        p_13_m00_axi_awsize->set_sv_netview_offsetfromdp(8508088);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_13_m00_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_13->m00_axi_awburst.bind(*p_13_m00_axi_awburst);
        p_13_m00_axi_awburst->set_sv_netview_offsetfromdp(8508144);
        xsim_sc_channel<0, bool > *p_13_m00_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_13->m00_axi_awlock.bind(*p_13_m00_axi_awlock);
        p_13_m00_axi_awlock->set_sv_netview_offsetfromdp(8508200);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_13_m00_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_13->m00_axi_awcache.bind(*p_13_m00_axi_awcache);
        p_13_m00_axi_awcache->set_sv_netview_offsetfromdp(8508256);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_13_m00_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_13->m00_axi_awprot.bind(*p_13_m00_axi_awprot);
        p_13_m00_axi_awprot->set_sv_netview_offsetfromdp(8508312);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_13_m00_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_13->m00_axi_awqos.bind(*p_13_m00_axi_awqos);
        p_13_m00_axi_awqos->set_sv_netview_offsetfromdp(8508368);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_13_m00_axi_awuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_13->m00_axi_awuser.bind(*p_13_m00_axi_awuser);
        p_13_m00_axi_awuser->set_sv_netview_offsetfromdp(8508424);
        xsim_sc_channel<0, bool > *p_13_m00_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->m00_axi_awvalid.bind(*p_13_m00_axi_awvalid);
        p_13_m00_axi_awvalid->set_sv_netview_offsetfromdp(8508480);
        xsim_sc_channel<0, bool > *p_13_m00_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_13->m00_axi_awready.bind(*p_13_m00_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_13_m00_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_13_m00_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_13->m00_axi_wdata.bind(*p_13_m00_axi_wdata);
        p_13_m00_axi_wdata->set_sv_netview_offsetfromdp(8508592);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_13_m00_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_13->m00_axi_wstrb.bind(*p_13_m00_axi_wstrb);
        p_13_m00_axi_wstrb->set_sv_netview_offsetfromdp(8508648);
        xsim_sc_channel<0, bool > *p_13_m00_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_13->m00_axi_wlast.bind(*p_13_m00_axi_wlast);
        p_13_m00_axi_wlast->set_sv_netview_offsetfromdp(8508704);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_13_m00_axi_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_13->m00_axi_wuser.bind(*p_13_m00_axi_wuser);
        p_13_m00_axi_wuser->set_sv_netview_offsetfromdp(8508760);
        xsim_sc_channel<0, bool > *p_13_m00_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->m00_axi_wvalid.bind(*p_13_m00_axi_wvalid);
        p_13_m00_axi_wvalid->set_sv_netview_offsetfromdp(8508816);
        xsim_sc_channel<0, bool > *p_13_m00_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_13->m00_axi_wready.bind(*p_13_m00_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_13_m00_axi_wready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_13_m00_axi_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_13->m00_axi_bid.bind(*p_13_m00_axi_bid);
        (*_glb_hdl_sc_channel_map).push_back(p_13_m00_axi_bid);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_13_m00_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_13->m00_axi_bresp.bind(*p_13_m00_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_13_m00_axi_bresp);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_13_m00_axi_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_13->m00_axi_buser.bind(*p_13_m00_axi_buser);
        (*_glb_hdl_sc_channel_map).push_back(p_13_m00_axi_buser);
        xsim_sc_channel<0, bool > *p_13_m00_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->m00_axi_bvalid.bind(*p_13_m00_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_13_m00_axi_bvalid);
        xsim_sc_channel<0, bool > *p_13_m00_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_13->m00_axi_bready.bind(*p_13_m00_axi_bready);
        p_13_m00_axi_bready->set_sv_netview_offsetfromdp(8509152);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_13_m00_axi_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_13->m00_axi_arid.bind(*p_13_m00_axi_arid);
        p_13_m00_axi_arid->set_sv_netview_offsetfromdp(8509208);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_13_m00_axi_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_13->m00_axi_araddr.bind(*p_13_m00_axi_araddr);
        p_13_m00_axi_araddr->set_sv_netview_offsetfromdp(8509264);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_13_m00_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_13->m00_axi_arlen.bind(*p_13_m00_axi_arlen);
        p_13_m00_axi_arlen->set_sv_netview_offsetfromdp(8509320);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_13_m00_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_13->m00_axi_arsize.bind(*p_13_m00_axi_arsize);
        p_13_m00_axi_arsize->set_sv_netview_offsetfromdp(8509376);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_13_m00_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_13->m00_axi_arburst.bind(*p_13_m00_axi_arburst);
        p_13_m00_axi_arburst->set_sv_netview_offsetfromdp(8509432);
        xsim_sc_channel<0, bool > *p_13_m00_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_13->m00_axi_arlock.bind(*p_13_m00_axi_arlock);
        p_13_m00_axi_arlock->set_sv_netview_offsetfromdp(8509488);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_13_m00_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_13->m00_axi_arcache.bind(*p_13_m00_axi_arcache);
        p_13_m00_axi_arcache->set_sv_netview_offsetfromdp(8509544);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_13_m00_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_13->m00_axi_arprot.bind(*p_13_m00_axi_arprot);
        p_13_m00_axi_arprot->set_sv_netview_offsetfromdp(8509600);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_13_m00_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_13->m00_axi_arqos.bind(*p_13_m00_axi_arqos);
        p_13_m00_axi_arqos->set_sv_netview_offsetfromdp(8509656);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_13_m00_axi_aruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_13->m00_axi_aruser.bind(*p_13_m00_axi_aruser);
        p_13_m00_axi_aruser->set_sv_netview_offsetfromdp(8509712);
        xsim_sc_channel<0, bool > *p_13_m00_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->m00_axi_arvalid.bind(*p_13_m00_axi_arvalid);
        p_13_m00_axi_arvalid->set_sv_netview_offsetfromdp(8509768);
        xsim_sc_channel<0, bool > *p_13_m00_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_13->m00_axi_arready.bind(*p_13_m00_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_13_m00_axi_arready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_13_m00_axi_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_13->m00_axi_rid.bind(*p_13_m00_axi_rid);
        (*_glb_hdl_sc_channel_map).push_back(p_13_m00_axi_rid);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_13_m00_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_13->m00_axi_rdata.bind(*p_13_m00_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_13_m00_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_13_m00_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_13->m00_axi_rresp.bind(*p_13_m00_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_13_m00_axi_rresp);
        xsim_sc_channel<0, bool > *p_13_m00_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_13->m00_axi_rlast.bind(*p_13_m00_axi_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_13_m00_axi_rlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_13_m00_axi_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_13->m00_axi_ruser.bind(*p_13_m00_axi_ruser);
        (*_glb_hdl_sc_channel_map).push_back(p_13_m00_axi_ruser);
        xsim_sc_channel<0, bool > *p_13_m00_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->m00_axi_rvalid.bind(*p_13_m00_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_13_m00_axi_rvalid);
        xsim_sc_channel<0, bool > *p_13_m00_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_13->m00_axi_rready.bind(*p_13_m00_axi_rready);
        p_13_m00_axi_rready->set_sv_netview_offsetfromdp(8510216);
        xsim_sc_channel<0, bool > *p_13_m00_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_13->m00_axi_aclk.bind(*p_13_m00_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_13_m00_axi_aclk);
        xsim_sc_channel<0, bool > *p_13_m00_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_13->m00_axi_aresetn.bind(*p_13_m00_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_13_m00_axi_aresetn);
        sc_inst_14 = new emu_icn_pass_1_0(".emu_wrapper.emu_i.slr1.icn_pass_1");
        sc_inst_14->xsim_set_dbg_index(422);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_s00_axi_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->s00_axi_awid.bind(*p_14_s00_axi_awid);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s00_axi_awid);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_14_s00_axi_awaddr = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_14->s00_axi_awaddr.bind(*p_14_s00_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s00_axi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_14_s00_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_14->s00_axi_awlen.bind(*p_14_s00_axi_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s00_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_14_s00_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_14->s00_axi_awsize.bind(*p_14_s00_axi_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s00_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_14_s00_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_14->s00_axi_awburst.bind(*p_14_s00_axi_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s00_axi_awburst);
        xsim_sc_channel<0, bool > *p_14_s00_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_14->s00_axi_awlock.bind(*p_14_s00_axi_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s00_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_14_s00_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_14->s00_axi_awcache.bind(*p_14_s00_axi_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s00_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_14_s00_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_14->s00_axi_awprot.bind(*p_14_s00_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s00_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_14_s00_axi_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_14->s00_axi_awregion.bind(*p_14_s00_axi_awregion);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s00_axi_awregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_14_s00_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_14->s00_axi_awqos.bind(*p_14_s00_axi_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s00_axi_awqos);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_s00_axi_awuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->s00_axi_awuser.bind(*p_14_s00_axi_awuser);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s00_axi_awuser);
        xsim_sc_channel<0, bool > *p_14_s00_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_14->s00_axi_awvalid.bind(*p_14_s00_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s00_axi_awvalid);
        xsim_sc_channel<0, bool > *p_14_s00_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_14->s00_axi_awready.bind(*p_14_s00_axi_awready);
        p_14_s00_axi_awready->set_sv_netview_offsetfromdp(10561056);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_14_s00_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_14->s00_axi_wdata.bind(*p_14_s00_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s00_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_14_s00_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_14->s00_axi_wstrb.bind(*p_14_s00_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s00_axi_wstrb);
        xsim_sc_channel<0, bool > *p_14_s00_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_14->s00_axi_wlast.bind(*p_14_s00_axi_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s00_axi_wlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_s00_axi_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->s00_axi_wuser.bind(*p_14_s00_axi_wuser);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s00_axi_wuser);
        xsim_sc_channel<0, bool > *p_14_s00_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_14->s00_axi_wvalid.bind(*p_14_s00_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s00_axi_wvalid);
        xsim_sc_channel<0, bool > *p_14_s00_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_14->s00_axi_wready.bind(*p_14_s00_axi_wready);
        p_14_s00_axi_wready->set_sv_netview_offsetfromdp(10561392);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_s00_axi_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->s00_axi_bid.bind(*p_14_s00_axi_bid);
        p_14_s00_axi_bid->set_sv_netview_offsetfromdp(10561448);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_14_s00_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_14->s00_axi_bresp.bind(*p_14_s00_axi_bresp);
        p_14_s00_axi_bresp->set_sv_netview_offsetfromdp(10561504);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_s00_axi_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->s00_axi_buser.bind(*p_14_s00_axi_buser);
        p_14_s00_axi_buser->set_sv_netview_offsetfromdp(10561560);
        xsim_sc_channel<0, bool > *p_14_s00_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_14->s00_axi_bvalid.bind(*p_14_s00_axi_bvalid);
        p_14_s00_axi_bvalid->set_sv_netview_offsetfromdp(10561616);
        xsim_sc_channel<0, bool > *p_14_s00_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_14->s00_axi_bready.bind(*p_14_s00_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s00_axi_bready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_s00_axi_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->s00_axi_arid.bind(*p_14_s00_axi_arid);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s00_axi_arid);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_14_s00_axi_araddr = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_14->s00_axi_araddr.bind(*p_14_s00_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s00_axi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_14_s00_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_14->s00_axi_arlen.bind(*p_14_s00_axi_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s00_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_14_s00_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_14->s00_axi_arsize.bind(*p_14_s00_axi_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s00_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_14_s00_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_14->s00_axi_arburst.bind(*p_14_s00_axi_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s00_axi_arburst);
        xsim_sc_channel<0, bool > *p_14_s00_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_14->s00_axi_arlock.bind(*p_14_s00_axi_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s00_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_14_s00_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_14->s00_axi_arcache.bind(*p_14_s00_axi_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s00_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_14_s00_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_14->s00_axi_arprot.bind(*p_14_s00_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s00_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_14_s00_axi_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_14->s00_axi_arregion.bind(*p_14_s00_axi_arregion);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s00_axi_arregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_14_s00_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_14->s00_axi_arqos.bind(*p_14_s00_axi_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s00_axi_arqos);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_s00_axi_aruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->s00_axi_aruser.bind(*p_14_s00_axi_aruser);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s00_axi_aruser);
        xsim_sc_channel<0, bool > *p_14_s00_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_14->s00_axi_arvalid.bind(*p_14_s00_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s00_axi_arvalid);
        xsim_sc_channel<0, bool > *p_14_s00_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_14->s00_axi_arready.bind(*p_14_s00_axi_arready);
        p_14_s00_axi_arready->set_sv_netview_offsetfromdp(10562400);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_s00_axi_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->s00_axi_rid.bind(*p_14_s00_axi_rid);
        p_14_s00_axi_rid->set_sv_netview_offsetfromdp(10562456);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_14_s00_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_14->s00_axi_rdata.bind(*p_14_s00_axi_rdata);
        p_14_s00_axi_rdata->set_sv_netview_offsetfromdp(10562512);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_14_s00_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_14->s00_axi_rresp.bind(*p_14_s00_axi_rresp);
        p_14_s00_axi_rresp->set_sv_netview_offsetfromdp(10562568);
        xsim_sc_channel<0, bool > *p_14_s00_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_14->s00_axi_rlast.bind(*p_14_s00_axi_rlast);
        p_14_s00_axi_rlast->set_sv_netview_offsetfromdp(10562624);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_s00_axi_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->s00_axi_ruser.bind(*p_14_s00_axi_ruser);
        p_14_s00_axi_ruser->set_sv_netview_offsetfromdp(10562680);
        xsim_sc_channel<0, bool > *p_14_s00_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_14->s00_axi_rvalid.bind(*p_14_s00_axi_rvalid);
        p_14_s00_axi_rvalid->set_sv_netview_offsetfromdp(10562736);
        xsim_sc_channel<0, bool > *p_14_s00_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_14->s00_axi_rready.bind(*p_14_s00_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s00_axi_rready);
        xsim_sc_channel<0, bool > *p_14_s00_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_14->s00_axi_aclk.bind(*p_14_s00_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s00_axi_aclk);
        xsim_sc_channel<0, bool > *p_14_s00_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_14->s00_axi_aresetn.bind(*p_14_s00_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s00_axi_aresetn);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_m00_axi_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->m00_axi_awid.bind(*p_14_m00_axi_awid);
        p_14_m00_axi_awid->set_sv_netview_offsetfromdp(10562960);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_14_m00_axi_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_14->m00_axi_awaddr.bind(*p_14_m00_axi_awaddr);
        p_14_m00_axi_awaddr->set_sv_netview_offsetfromdp(10563016);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_14_m00_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_14->m00_axi_awlen.bind(*p_14_m00_axi_awlen);
        p_14_m00_axi_awlen->set_sv_netview_offsetfromdp(10563072);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_14_m00_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_14->m00_axi_awsize.bind(*p_14_m00_axi_awsize);
        p_14_m00_axi_awsize->set_sv_netview_offsetfromdp(10563128);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_14_m00_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_14->m00_axi_awburst.bind(*p_14_m00_axi_awburst);
        p_14_m00_axi_awburst->set_sv_netview_offsetfromdp(10563184);
        xsim_sc_channel<0, bool > *p_14_m00_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_14->m00_axi_awlock.bind(*p_14_m00_axi_awlock);
        p_14_m00_axi_awlock->set_sv_netview_offsetfromdp(10563240);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_14_m00_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_14->m00_axi_awcache.bind(*p_14_m00_axi_awcache);
        p_14_m00_axi_awcache->set_sv_netview_offsetfromdp(10563296);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_14_m00_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_14->m00_axi_awprot.bind(*p_14_m00_axi_awprot);
        p_14_m00_axi_awprot->set_sv_netview_offsetfromdp(10563352);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_14_m00_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_14->m00_axi_awqos.bind(*p_14_m00_axi_awqos);
        p_14_m00_axi_awqos->set_sv_netview_offsetfromdp(10563408);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_m00_axi_awuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->m00_axi_awuser.bind(*p_14_m00_axi_awuser);
        p_14_m00_axi_awuser->set_sv_netview_offsetfromdp(10563464);
        xsim_sc_channel<0, bool > *p_14_m00_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_14->m00_axi_awvalid.bind(*p_14_m00_axi_awvalid);
        p_14_m00_axi_awvalid->set_sv_netview_offsetfromdp(10563520);
        xsim_sc_channel<0, bool > *p_14_m00_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_14->m00_axi_awready.bind(*p_14_m00_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_14_m00_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_14_m00_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_14->m00_axi_wdata.bind(*p_14_m00_axi_wdata);
        p_14_m00_axi_wdata->set_sv_netview_offsetfromdp(10563632);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_14_m00_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_14->m00_axi_wstrb.bind(*p_14_m00_axi_wstrb);
        p_14_m00_axi_wstrb->set_sv_netview_offsetfromdp(10563688);
        xsim_sc_channel<0, bool > *p_14_m00_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_14->m00_axi_wlast.bind(*p_14_m00_axi_wlast);
        p_14_m00_axi_wlast->set_sv_netview_offsetfromdp(10563744);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_m00_axi_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->m00_axi_wuser.bind(*p_14_m00_axi_wuser);
        p_14_m00_axi_wuser->set_sv_netview_offsetfromdp(10563800);
        xsim_sc_channel<0, bool > *p_14_m00_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_14->m00_axi_wvalid.bind(*p_14_m00_axi_wvalid);
        p_14_m00_axi_wvalid->set_sv_netview_offsetfromdp(10563856);
        xsim_sc_channel<0, bool > *p_14_m00_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_14->m00_axi_wready.bind(*p_14_m00_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_14_m00_axi_wready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_m00_axi_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->m00_axi_bid.bind(*p_14_m00_axi_bid);
        (*_glb_hdl_sc_channel_map).push_back(p_14_m00_axi_bid);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_14_m00_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_14->m00_axi_bresp.bind(*p_14_m00_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_14_m00_axi_bresp);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_m00_axi_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->m00_axi_buser.bind(*p_14_m00_axi_buser);
        (*_glb_hdl_sc_channel_map).push_back(p_14_m00_axi_buser);
        xsim_sc_channel<0, bool > *p_14_m00_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_14->m00_axi_bvalid.bind(*p_14_m00_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_14_m00_axi_bvalid);
        xsim_sc_channel<0, bool > *p_14_m00_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_14->m00_axi_bready.bind(*p_14_m00_axi_bready);
        p_14_m00_axi_bready->set_sv_netview_offsetfromdp(10564192);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_m00_axi_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->m00_axi_arid.bind(*p_14_m00_axi_arid);
        p_14_m00_axi_arid->set_sv_netview_offsetfromdp(10564248);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_14_m00_axi_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_14->m00_axi_araddr.bind(*p_14_m00_axi_araddr);
        p_14_m00_axi_araddr->set_sv_netview_offsetfromdp(10564304);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_14_m00_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_14->m00_axi_arlen.bind(*p_14_m00_axi_arlen);
        p_14_m00_axi_arlen->set_sv_netview_offsetfromdp(10564360);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_14_m00_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_14->m00_axi_arsize.bind(*p_14_m00_axi_arsize);
        p_14_m00_axi_arsize->set_sv_netview_offsetfromdp(10564416);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_14_m00_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_14->m00_axi_arburst.bind(*p_14_m00_axi_arburst);
        p_14_m00_axi_arburst->set_sv_netview_offsetfromdp(10564472);
        xsim_sc_channel<0, bool > *p_14_m00_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_14->m00_axi_arlock.bind(*p_14_m00_axi_arlock);
        p_14_m00_axi_arlock->set_sv_netview_offsetfromdp(10564528);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_14_m00_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_14->m00_axi_arcache.bind(*p_14_m00_axi_arcache);
        p_14_m00_axi_arcache->set_sv_netview_offsetfromdp(10564584);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_14_m00_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_14->m00_axi_arprot.bind(*p_14_m00_axi_arprot);
        p_14_m00_axi_arprot->set_sv_netview_offsetfromdp(10564640);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_14_m00_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_14->m00_axi_arqos.bind(*p_14_m00_axi_arqos);
        p_14_m00_axi_arqos->set_sv_netview_offsetfromdp(10564696);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_m00_axi_aruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->m00_axi_aruser.bind(*p_14_m00_axi_aruser);
        p_14_m00_axi_aruser->set_sv_netview_offsetfromdp(10564752);
        xsim_sc_channel<0, bool > *p_14_m00_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_14->m00_axi_arvalid.bind(*p_14_m00_axi_arvalid);
        p_14_m00_axi_arvalid->set_sv_netview_offsetfromdp(10564808);
        xsim_sc_channel<0, bool > *p_14_m00_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_14->m00_axi_arready.bind(*p_14_m00_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_14_m00_axi_arready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_m00_axi_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->m00_axi_rid.bind(*p_14_m00_axi_rid);
        (*_glb_hdl_sc_channel_map).push_back(p_14_m00_axi_rid);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_14_m00_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_14->m00_axi_rdata.bind(*p_14_m00_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_14_m00_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_14_m00_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_14->m00_axi_rresp.bind(*p_14_m00_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_14_m00_axi_rresp);
        xsim_sc_channel<0, bool > *p_14_m00_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_14->m00_axi_rlast.bind(*p_14_m00_axi_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_14_m00_axi_rlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_m00_axi_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->m00_axi_ruser.bind(*p_14_m00_axi_ruser);
        (*_glb_hdl_sc_channel_map).push_back(p_14_m00_axi_ruser);
        xsim_sc_channel<0, bool > *p_14_m00_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_14->m00_axi_rvalid.bind(*p_14_m00_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_14_m00_axi_rvalid);
        xsim_sc_channel<0, bool > *p_14_m00_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_14->m00_axi_rready.bind(*p_14_m00_axi_rready);
        p_14_m00_axi_rready->set_sv_netview_offsetfromdp(10565256);
        xsim_sc_channel<0, bool > *p_14_m00_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_14->m00_axi_aclk.bind(*p_14_m00_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_14_m00_axi_aclk);
        xsim_sc_channel<0, bool > *p_14_m00_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_14->m00_axi_aresetn.bind(*p_14_m00_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_14_m00_axi_aresetn);
        sc_inst_15 = new emu_icn_pass_2_0(".emu_wrapper.emu_i.slr1.icn_pass_2");
        sc_inst_15->xsim_set_dbg_index(423);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_s00_axi_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->s00_axi_awid.bind(*p_15_s00_axi_awid);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s00_axi_awid);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_15_s00_axi_awaddr = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_15->s00_axi_awaddr.bind(*p_15_s00_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s00_axi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_15_s00_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_15->s00_axi_awlen.bind(*p_15_s00_axi_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s00_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_15_s00_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_15->s00_axi_awsize.bind(*p_15_s00_axi_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s00_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_15_s00_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_15->s00_axi_awburst.bind(*p_15_s00_axi_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s00_axi_awburst);
        xsim_sc_channel<0, bool > *p_15_s00_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_15->s00_axi_awlock.bind(*p_15_s00_axi_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s00_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_15_s00_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_15->s00_axi_awcache.bind(*p_15_s00_axi_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s00_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_15_s00_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_15->s00_axi_awprot.bind(*p_15_s00_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s00_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_15_s00_axi_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_15->s00_axi_awregion.bind(*p_15_s00_axi_awregion);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s00_axi_awregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_15_s00_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_15->s00_axi_awqos.bind(*p_15_s00_axi_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s00_axi_awqos);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_s00_axi_awuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->s00_axi_awuser.bind(*p_15_s00_axi_awuser);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s00_axi_awuser);
        xsim_sc_channel<0, bool > *p_15_s00_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->s00_axi_awvalid.bind(*p_15_s00_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s00_axi_awvalid);
        xsim_sc_channel<0, bool > *p_15_s00_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_15->s00_axi_awready.bind(*p_15_s00_axi_awready);
        p_15_s00_axi_awready->set_sv_netview_offsetfromdp(10566144);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_15_s00_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_15->s00_axi_wdata.bind(*p_15_s00_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s00_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_15_s00_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_15->s00_axi_wstrb.bind(*p_15_s00_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s00_axi_wstrb);
        xsim_sc_channel<0, bool > *p_15_s00_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_15->s00_axi_wlast.bind(*p_15_s00_axi_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s00_axi_wlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_s00_axi_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->s00_axi_wuser.bind(*p_15_s00_axi_wuser);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s00_axi_wuser);
        xsim_sc_channel<0, bool > *p_15_s00_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->s00_axi_wvalid.bind(*p_15_s00_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s00_axi_wvalid);
        xsim_sc_channel<0, bool > *p_15_s00_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_15->s00_axi_wready.bind(*p_15_s00_axi_wready);
        p_15_s00_axi_wready->set_sv_netview_offsetfromdp(10566480);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_s00_axi_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->s00_axi_bid.bind(*p_15_s00_axi_bid);
        p_15_s00_axi_bid->set_sv_netview_offsetfromdp(10566536);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_15_s00_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_15->s00_axi_bresp.bind(*p_15_s00_axi_bresp);
        p_15_s00_axi_bresp->set_sv_netview_offsetfromdp(10566592);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_s00_axi_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->s00_axi_buser.bind(*p_15_s00_axi_buser);
        p_15_s00_axi_buser->set_sv_netview_offsetfromdp(10566648);
        xsim_sc_channel<0, bool > *p_15_s00_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->s00_axi_bvalid.bind(*p_15_s00_axi_bvalid);
        p_15_s00_axi_bvalid->set_sv_netview_offsetfromdp(10566704);
        xsim_sc_channel<0, bool > *p_15_s00_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_15->s00_axi_bready.bind(*p_15_s00_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s00_axi_bready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_s00_axi_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->s00_axi_arid.bind(*p_15_s00_axi_arid);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s00_axi_arid);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_15_s00_axi_araddr = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_15->s00_axi_araddr.bind(*p_15_s00_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s00_axi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_15_s00_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_15->s00_axi_arlen.bind(*p_15_s00_axi_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s00_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_15_s00_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_15->s00_axi_arsize.bind(*p_15_s00_axi_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s00_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_15_s00_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_15->s00_axi_arburst.bind(*p_15_s00_axi_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s00_axi_arburst);
        xsim_sc_channel<0, bool > *p_15_s00_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_15->s00_axi_arlock.bind(*p_15_s00_axi_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s00_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_15_s00_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_15->s00_axi_arcache.bind(*p_15_s00_axi_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s00_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_15_s00_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_15->s00_axi_arprot.bind(*p_15_s00_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s00_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_15_s00_axi_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_15->s00_axi_arregion.bind(*p_15_s00_axi_arregion);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s00_axi_arregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_15_s00_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_15->s00_axi_arqos.bind(*p_15_s00_axi_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s00_axi_arqos);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_s00_axi_aruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->s00_axi_aruser.bind(*p_15_s00_axi_aruser);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s00_axi_aruser);
        xsim_sc_channel<0, bool > *p_15_s00_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->s00_axi_arvalid.bind(*p_15_s00_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s00_axi_arvalid);
        xsim_sc_channel<0, bool > *p_15_s00_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_15->s00_axi_arready.bind(*p_15_s00_axi_arready);
        p_15_s00_axi_arready->set_sv_netview_offsetfromdp(10567488);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_s00_axi_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->s00_axi_rid.bind(*p_15_s00_axi_rid);
        p_15_s00_axi_rid->set_sv_netview_offsetfromdp(10567544);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_15_s00_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_15->s00_axi_rdata.bind(*p_15_s00_axi_rdata);
        p_15_s00_axi_rdata->set_sv_netview_offsetfromdp(10567600);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_15_s00_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_15->s00_axi_rresp.bind(*p_15_s00_axi_rresp);
        p_15_s00_axi_rresp->set_sv_netview_offsetfromdp(10567656);
        xsim_sc_channel<0, bool > *p_15_s00_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_15->s00_axi_rlast.bind(*p_15_s00_axi_rlast);
        p_15_s00_axi_rlast->set_sv_netview_offsetfromdp(10567712);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_s00_axi_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->s00_axi_ruser.bind(*p_15_s00_axi_ruser);
        p_15_s00_axi_ruser->set_sv_netview_offsetfromdp(10567768);
        xsim_sc_channel<0, bool > *p_15_s00_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->s00_axi_rvalid.bind(*p_15_s00_axi_rvalid);
        p_15_s00_axi_rvalid->set_sv_netview_offsetfromdp(10567824);
        xsim_sc_channel<0, bool > *p_15_s00_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_15->s00_axi_rready.bind(*p_15_s00_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s00_axi_rready);
        xsim_sc_channel<0, bool > *p_15_s00_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_15->s00_axi_aclk.bind(*p_15_s00_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s00_axi_aclk);
        xsim_sc_channel<0, bool > *p_15_s00_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_15->s00_axi_aresetn.bind(*p_15_s00_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s00_axi_aresetn);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_m00_axi_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->m00_axi_awid.bind(*p_15_m00_axi_awid);
        p_15_m00_axi_awid->set_sv_netview_offsetfromdp(10568048);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_15_m00_axi_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_15->m00_axi_awaddr.bind(*p_15_m00_axi_awaddr);
        p_15_m00_axi_awaddr->set_sv_netview_offsetfromdp(10568104);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_15_m00_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_15->m00_axi_awlen.bind(*p_15_m00_axi_awlen);
        p_15_m00_axi_awlen->set_sv_netview_offsetfromdp(10568160);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_15_m00_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_15->m00_axi_awsize.bind(*p_15_m00_axi_awsize);
        p_15_m00_axi_awsize->set_sv_netview_offsetfromdp(10568216);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_15_m00_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_15->m00_axi_awburst.bind(*p_15_m00_axi_awburst);
        p_15_m00_axi_awburst->set_sv_netview_offsetfromdp(10568272);
        xsim_sc_channel<0, bool > *p_15_m00_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_15->m00_axi_awlock.bind(*p_15_m00_axi_awlock);
        p_15_m00_axi_awlock->set_sv_netview_offsetfromdp(10568328);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_15_m00_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_15->m00_axi_awcache.bind(*p_15_m00_axi_awcache);
        p_15_m00_axi_awcache->set_sv_netview_offsetfromdp(10568384);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_15_m00_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_15->m00_axi_awprot.bind(*p_15_m00_axi_awprot);
        p_15_m00_axi_awprot->set_sv_netview_offsetfromdp(10568440);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_15_m00_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_15->m00_axi_awqos.bind(*p_15_m00_axi_awqos);
        p_15_m00_axi_awqos->set_sv_netview_offsetfromdp(10568496);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_m00_axi_awuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->m00_axi_awuser.bind(*p_15_m00_axi_awuser);
        p_15_m00_axi_awuser->set_sv_netview_offsetfromdp(10568552);
        xsim_sc_channel<0, bool > *p_15_m00_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->m00_axi_awvalid.bind(*p_15_m00_axi_awvalid);
        p_15_m00_axi_awvalid->set_sv_netview_offsetfromdp(10568608);
        xsim_sc_channel<0, bool > *p_15_m00_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_15->m00_axi_awready.bind(*p_15_m00_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_15_m00_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_15_m00_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_15->m00_axi_wdata.bind(*p_15_m00_axi_wdata);
        p_15_m00_axi_wdata->set_sv_netview_offsetfromdp(10568720);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_15_m00_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_15->m00_axi_wstrb.bind(*p_15_m00_axi_wstrb);
        p_15_m00_axi_wstrb->set_sv_netview_offsetfromdp(10568776);
        xsim_sc_channel<0, bool > *p_15_m00_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_15->m00_axi_wlast.bind(*p_15_m00_axi_wlast);
        p_15_m00_axi_wlast->set_sv_netview_offsetfromdp(10568832);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_m00_axi_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->m00_axi_wuser.bind(*p_15_m00_axi_wuser);
        p_15_m00_axi_wuser->set_sv_netview_offsetfromdp(10568888);
        xsim_sc_channel<0, bool > *p_15_m00_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->m00_axi_wvalid.bind(*p_15_m00_axi_wvalid);
        p_15_m00_axi_wvalid->set_sv_netview_offsetfromdp(10568944);
        xsim_sc_channel<0, bool > *p_15_m00_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_15->m00_axi_wready.bind(*p_15_m00_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_15_m00_axi_wready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_m00_axi_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->m00_axi_bid.bind(*p_15_m00_axi_bid);
        (*_glb_hdl_sc_channel_map).push_back(p_15_m00_axi_bid);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_15_m00_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_15->m00_axi_bresp.bind(*p_15_m00_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_15_m00_axi_bresp);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_m00_axi_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->m00_axi_buser.bind(*p_15_m00_axi_buser);
        (*_glb_hdl_sc_channel_map).push_back(p_15_m00_axi_buser);
        xsim_sc_channel<0, bool > *p_15_m00_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->m00_axi_bvalid.bind(*p_15_m00_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_15_m00_axi_bvalid);
        xsim_sc_channel<0, bool > *p_15_m00_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_15->m00_axi_bready.bind(*p_15_m00_axi_bready);
        p_15_m00_axi_bready->set_sv_netview_offsetfromdp(10569280);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_m00_axi_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->m00_axi_arid.bind(*p_15_m00_axi_arid);
        p_15_m00_axi_arid->set_sv_netview_offsetfromdp(10569336);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_15_m00_axi_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_15->m00_axi_araddr.bind(*p_15_m00_axi_araddr);
        p_15_m00_axi_araddr->set_sv_netview_offsetfromdp(10569392);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_15_m00_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_15->m00_axi_arlen.bind(*p_15_m00_axi_arlen);
        p_15_m00_axi_arlen->set_sv_netview_offsetfromdp(10569448);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_15_m00_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_15->m00_axi_arsize.bind(*p_15_m00_axi_arsize);
        p_15_m00_axi_arsize->set_sv_netview_offsetfromdp(10569504);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_15_m00_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_15->m00_axi_arburst.bind(*p_15_m00_axi_arburst);
        p_15_m00_axi_arburst->set_sv_netview_offsetfromdp(10569560);
        xsim_sc_channel<0, bool > *p_15_m00_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_15->m00_axi_arlock.bind(*p_15_m00_axi_arlock);
        p_15_m00_axi_arlock->set_sv_netview_offsetfromdp(10569616);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_15_m00_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_15->m00_axi_arcache.bind(*p_15_m00_axi_arcache);
        p_15_m00_axi_arcache->set_sv_netview_offsetfromdp(10569672);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_15_m00_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_15->m00_axi_arprot.bind(*p_15_m00_axi_arprot);
        p_15_m00_axi_arprot->set_sv_netview_offsetfromdp(10569728);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_15_m00_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_15->m00_axi_arqos.bind(*p_15_m00_axi_arqos);
        p_15_m00_axi_arqos->set_sv_netview_offsetfromdp(10569784);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_m00_axi_aruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->m00_axi_aruser.bind(*p_15_m00_axi_aruser);
        p_15_m00_axi_aruser->set_sv_netview_offsetfromdp(10569840);
        xsim_sc_channel<0, bool > *p_15_m00_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->m00_axi_arvalid.bind(*p_15_m00_axi_arvalid);
        p_15_m00_axi_arvalid->set_sv_netview_offsetfromdp(10569896);
        xsim_sc_channel<0, bool > *p_15_m00_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_15->m00_axi_arready.bind(*p_15_m00_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_15_m00_axi_arready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_m00_axi_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->m00_axi_rid.bind(*p_15_m00_axi_rid);
        (*_glb_hdl_sc_channel_map).push_back(p_15_m00_axi_rid);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_15_m00_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_15->m00_axi_rdata.bind(*p_15_m00_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_15_m00_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_15_m00_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_15->m00_axi_rresp.bind(*p_15_m00_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_15_m00_axi_rresp);
        xsim_sc_channel<0, bool > *p_15_m00_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_15->m00_axi_rlast.bind(*p_15_m00_axi_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_15_m00_axi_rlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_m00_axi_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->m00_axi_ruser.bind(*p_15_m00_axi_ruser);
        (*_glb_hdl_sc_channel_map).push_back(p_15_m00_axi_ruser);
        xsim_sc_channel<0, bool > *p_15_m00_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->m00_axi_rvalid.bind(*p_15_m00_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_15_m00_axi_rvalid);
        xsim_sc_channel<0, bool > *p_15_m00_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_15->m00_axi_rready.bind(*p_15_m00_axi_rready);
        p_15_m00_axi_rready->set_sv_netview_offsetfromdp(10570344);
        xsim_sc_channel<0, bool > *p_15_m00_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_15->m00_axi_aclk.bind(*p_15_m00_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_15_m00_axi_aclk);
        xsim_sc_channel<0, bool > *p_15_m00_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_15->m00_axi_aresetn.bind(*p_15_m00_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_15_m00_axi_aresetn);
        sc_inst_16 = new emu_icn_pass_3_0(".emu_wrapper.emu_i.slr2.icn_pass_3");
        sc_inst_16->xsim_set_dbg_index(623);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_16_s00_axi_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_16->s00_axi_awid.bind(*p_16_s00_axi_awid);
        (*_glb_hdl_sc_channel_map).push_back(p_16_s00_axi_awid);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_16_s00_axi_awaddr = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_16->s00_axi_awaddr.bind(*p_16_s00_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_16_s00_axi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_16_s00_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_16->s00_axi_awlen.bind(*p_16_s00_axi_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_16_s00_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_16_s00_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_16->s00_axi_awsize.bind(*p_16_s00_axi_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_16_s00_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_16_s00_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_16->s00_axi_awburst.bind(*p_16_s00_axi_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_16_s00_axi_awburst);
        xsim_sc_channel<0, bool > *p_16_s00_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_16->s00_axi_awlock.bind(*p_16_s00_axi_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_16_s00_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_16_s00_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_16->s00_axi_awcache.bind(*p_16_s00_axi_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_16_s00_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_16_s00_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_16->s00_axi_awprot.bind(*p_16_s00_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_16_s00_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_16_s00_axi_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_16->s00_axi_awregion.bind(*p_16_s00_axi_awregion);
        (*_glb_hdl_sc_channel_map).push_back(p_16_s00_axi_awregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_16_s00_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_16->s00_axi_awqos.bind(*p_16_s00_axi_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_16_s00_axi_awqos);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_16_s00_axi_awuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_16->s00_axi_awuser.bind(*p_16_s00_axi_awuser);
        (*_glb_hdl_sc_channel_map).push_back(p_16_s00_axi_awuser);
        xsim_sc_channel<0, bool > *p_16_s00_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_16->s00_axi_awvalid.bind(*p_16_s00_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_16_s00_axi_awvalid);
        xsim_sc_channel<0, bool > *p_16_s00_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_16->s00_axi_awready.bind(*p_16_s00_axi_awready);
        p_16_s00_axi_awready->set_sv_netview_offsetfromdp(10750128);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_16_s00_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_16->s00_axi_wdata.bind(*p_16_s00_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_16_s00_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_16_s00_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_16->s00_axi_wstrb.bind(*p_16_s00_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_16_s00_axi_wstrb);
        xsim_sc_channel<0, bool > *p_16_s00_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_16->s00_axi_wlast.bind(*p_16_s00_axi_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_16_s00_axi_wlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_16_s00_axi_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_16->s00_axi_wuser.bind(*p_16_s00_axi_wuser);
        (*_glb_hdl_sc_channel_map).push_back(p_16_s00_axi_wuser);
        xsim_sc_channel<0, bool > *p_16_s00_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_16->s00_axi_wvalid.bind(*p_16_s00_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_16_s00_axi_wvalid);
        xsim_sc_channel<0, bool > *p_16_s00_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_16->s00_axi_wready.bind(*p_16_s00_axi_wready);
        p_16_s00_axi_wready->set_sv_netview_offsetfromdp(10750464);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_16_s00_axi_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_16->s00_axi_bid.bind(*p_16_s00_axi_bid);
        p_16_s00_axi_bid->set_sv_netview_offsetfromdp(10750520);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_16_s00_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_16->s00_axi_bresp.bind(*p_16_s00_axi_bresp);
        p_16_s00_axi_bresp->set_sv_netview_offsetfromdp(10750576);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_16_s00_axi_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_16->s00_axi_buser.bind(*p_16_s00_axi_buser);
        p_16_s00_axi_buser->set_sv_netview_offsetfromdp(10750632);
        xsim_sc_channel<0, bool > *p_16_s00_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_16->s00_axi_bvalid.bind(*p_16_s00_axi_bvalid);
        p_16_s00_axi_bvalid->set_sv_netview_offsetfromdp(10750688);
        xsim_sc_channel<0, bool > *p_16_s00_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_16->s00_axi_bready.bind(*p_16_s00_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_16_s00_axi_bready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_16_s00_axi_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_16->s00_axi_arid.bind(*p_16_s00_axi_arid);
        (*_glb_hdl_sc_channel_map).push_back(p_16_s00_axi_arid);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_16_s00_axi_araddr = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_16->s00_axi_araddr.bind(*p_16_s00_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_16_s00_axi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_16_s00_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_16->s00_axi_arlen.bind(*p_16_s00_axi_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_16_s00_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_16_s00_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_16->s00_axi_arsize.bind(*p_16_s00_axi_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_16_s00_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_16_s00_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_16->s00_axi_arburst.bind(*p_16_s00_axi_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_16_s00_axi_arburst);
        xsim_sc_channel<0, bool > *p_16_s00_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_16->s00_axi_arlock.bind(*p_16_s00_axi_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_16_s00_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_16_s00_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_16->s00_axi_arcache.bind(*p_16_s00_axi_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_16_s00_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_16_s00_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_16->s00_axi_arprot.bind(*p_16_s00_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_16_s00_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_16_s00_axi_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_16->s00_axi_arregion.bind(*p_16_s00_axi_arregion);
        (*_glb_hdl_sc_channel_map).push_back(p_16_s00_axi_arregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_16_s00_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_16->s00_axi_arqos.bind(*p_16_s00_axi_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_16_s00_axi_arqos);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_16_s00_axi_aruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_16->s00_axi_aruser.bind(*p_16_s00_axi_aruser);
        (*_glb_hdl_sc_channel_map).push_back(p_16_s00_axi_aruser);
        xsim_sc_channel<0, bool > *p_16_s00_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_16->s00_axi_arvalid.bind(*p_16_s00_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_16_s00_axi_arvalid);
        xsim_sc_channel<0, bool > *p_16_s00_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_16->s00_axi_arready.bind(*p_16_s00_axi_arready);
        p_16_s00_axi_arready->set_sv_netview_offsetfromdp(10751472);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_16_s00_axi_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_16->s00_axi_rid.bind(*p_16_s00_axi_rid);
        p_16_s00_axi_rid->set_sv_netview_offsetfromdp(10751528);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_16_s00_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_16->s00_axi_rdata.bind(*p_16_s00_axi_rdata);
        p_16_s00_axi_rdata->set_sv_netview_offsetfromdp(10751584);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_16_s00_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_16->s00_axi_rresp.bind(*p_16_s00_axi_rresp);
        p_16_s00_axi_rresp->set_sv_netview_offsetfromdp(10751640);
        xsim_sc_channel<0, bool > *p_16_s00_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_16->s00_axi_rlast.bind(*p_16_s00_axi_rlast);
        p_16_s00_axi_rlast->set_sv_netview_offsetfromdp(10751696);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_16_s00_axi_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_16->s00_axi_ruser.bind(*p_16_s00_axi_ruser);
        p_16_s00_axi_ruser->set_sv_netview_offsetfromdp(10751752);
        xsim_sc_channel<0, bool > *p_16_s00_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_16->s00_axi_rvalid.bind(*p_16_s00_axi_rvalid);
        p_16_s00_axi_rvalid->set_sv_netview_offsetfromdp(10751808);
        xsim_sc_channel<0, bool > *p_16_s00_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_16->s00_axi_rready.bind(*p_16_s00_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_16_s00_axi_rready);
        xsim_sc_channel<0, bool > *p_16_s00_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_16->s00_axi_aclk.bind(*p_16_s00_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_16_s00_axi_aclk);
        xsim_sc_channel<0, bool > *p_16_s00_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_16->s00_axi_aresetn.bind(*p_16_s00_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_16_s00_axi_aresetn);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_16_m00_axi_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_16->m00_axi_awid.bind(*p_16_m00_axi_awid);
        p_16_m00_axi_awid->set_sv_netview_offsetfromdp(10752032);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_16_m00_axi_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_16->m00_axi_awaddr.bind(*p_16_m00_axi_awaddr);
        p_16_m00_axi_awaddr->set_sv_netview_offsetfromdp(10752088);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_16_m00_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_16->m00_axi_awlen.bind(*p_16_m00_axi_awlen);
        p_16_m00_axi_awlen->set_sv_netview_offsetfromdp(10752144);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_16_m00_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_16->m00_axi_awsize.bind(*p_16_m00_axi_awsize);
        p_16_m00_axi_awsize->set_sv_netview_offsetfromdp(10752200);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_16_m00_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_16->m00_axi_awburst.bind(*p_16_m00_axi_awburst);
        p_16_m00_axi_awburst->set_sv_netview_offsetfromdp(10752256);
        xsim_sc_channel<0, bool > *p_16_m00_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_16->m00_axi_awlock.bind(*p_16_m00_axi_awlock);
        p_16_m00_axi_awlock->set_sv_netview_offsetfromdp(10752312);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_16_m00_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_16->m00_axi_awcache.bind(*p_16_m00_axi_awcache);
        p_16_m00_axi_awcache->set_sv_netview_offsetfromdp(10752368);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_16_m00_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_16->m00_axi_awprot.bind(*p_16_m00_axi_awprot);
        p_16_m00_axi_awprot->set_sv_netview_offsetfromdp(10752424);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_16_m00_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_16->m00_axi_awqos.bind(*p_16_m00_axi_awqos);
        p_16_m00_axi_awqos->set_sv_netview_offsetfromdp(10752480);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_16_m00_axi_awuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_16->m00_axi_awuser.bind(*p_16_m00_axi_awuser);
        p_16_m00_axi_awuser->set_sv_netview_offsetfromdp(10752536);
        xsim_sc_channel<0, bool > *p_16_m00_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_16->m00_axi_awvalid.bind(*p_16_m00_axi_awvalid);
        p_16_m00_axi_awvalid->set_sv_netview_offsetfromdp(10752592);
        xsim_sc_channel<0, bool > *p_16_m00_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_16->m00_axi_awready.bind(*p_16_m00_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_16_m00_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_16_m00_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_16->m00_axi_wdata.bind(*p_16_m00_axi_wdata);
        p_16_m00_axi_wdata->set_sv_netview_offsetfromdp(10752704);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_16_m00_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_16->m00_axi_wstrb.bind(*p_16_m00_axi_wstrb);
        p_16_m00_axi_wstrb->set_sv_netview_offsetfromdp(10752760);
        xsim_sc_channel<0, bool > *p_16_m00_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_16->m00_axi_wlast.bind(*p_16_m00_axi_wlast);
        p_16_m00_axi_wlast->set_sv_netview_offsetfromdp(10752816);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_16_m00_axi_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_16->m00_axi_wuser.bind(*p_16_m00_axi_wuser);
        p_16_m00_axi_wuser->set_sv_netview_offsetfromdp(10752872);
        xsim_sc_channel<0, bool > *p_16_m00_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_16->m00_axi_wvalid.bind(*p_16_m00_axi_wvalid);
        p_16_m00_axi_wvalid->set_sv_netview_offsetfromdp(10752928);
        xsim_sc_channel<0, bool > *p_16_m00_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_16->m00_axi_wready.bind(*p_16_m00_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_16_m00_axi_wready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_16_m00_axi_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_16->m00_axi_bid.bind(*p_16_m00_axi_bid);
        (*_glb_hdl_sc_channel_map).push_back(p_16_m00_axi_bid);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_16_m00_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_16->m00_axi_bresp.bind(*p_16_m00_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_16_m00_axi_bresp);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_16_m00_axi_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_16->m00_axi_buser.bind(*p_16_m00_axi_buser);
        (*_glb_hdl_sc_channel_map).push_back(p_16_m00_axi_buser);
        xsim_sc_channel<0, bool > *p_16_m00_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_16->m00_axi_bvalid.bind(*p_16_m00_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_16_m00_axi_bvalid);
        xsim_sc_channel<0, bool > *p_16_m00_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_16->m00_axi_bready.bind(*p_16_m00_axi_bready);
        p_16_m00_axi_bready->set_sv_netview_offsetfromdp(10753264);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_16_m00_axi_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_16->m00_axi_arid.bind(*p_16_m00_axi_arid);
        p_16_m00_axi_arid->set_sv_netview_offsetfromdp(10753320);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_16_m00_axi_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_16->m00_axi_araddr.bind(*p_16_m00_axi_araddr);
        p_16_m00_axi_araddr->set_sv_netview_offsetfromdp(10753376);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_16_m00_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_16->m00_axi_arlen.bind(*p_16_m00_axi_arlen);
        p_16_m00_axi_arlen->set_sv_netview_offsetfromdp(10753432);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_16_m00_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_16->m00_axi_arsize.bind(*p_16_m00_axi_arsize);
        p_16_m00_axi_arsize->set_sv_netview_offsetfromdp(10753488);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_16_m00_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_16->m00_axi_arburst.bind(*p_16_m00_axi_arburst);
        p_16_m00_axi_arburst->set_sv_netview_offsetfromdp(10753544);
        xsim_sc_channel<0, bool > *p_16_m00_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_16->m00_axi_arlock.bind(*p_16_m00_axi_arlock);
        p_16_m00_axi_arlock->set_sv_netview_offsetfromdp(10753600);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_16_m00_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_16->m00_axi_arcache.bind(*p_16_m00_axi_arcache);
        p_16_m00_axi_arcache->set_sv_netview_offsetfromdp(10753656);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_16_m00_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_16->m00_axi_arprot.bind(*p_16_m00_axi_arprot);
        p_16_m00_axi_arprot->set_sv_netview_offsetfromdp(10753712);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_16_m00_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_16->m00_axi_arqos.bind(*p_16_m00_axi_arqos);
        p_16_m00_axi_arqos->set_sv_netview_offsetfromdp(10753768);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_16_m00_axi_aruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_16->m00_axi_aruser.bind(*p_16_m00_axi_aruser);
        p_16_m00_axi_aruser->set_sv_netview_offsetfromdp(10753824);
        xsim_sc_channel<0, bool > *p_16_m00_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_16->m00_axi_arvalid.bind(*p_16_m00_axi_arvalid);
        p_16_m00_axi_arvalid->set_sv_netview_offsetfromdp(10753880);
        xsim_sc_channel<0, bool > *p_16_m00_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_16->m00_axi_arready.bind(*p_16_m00_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_16_m00_axi_arready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_16_m00_axi_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_16->m00_axi_rid.bind(*p_16_m00_axi_rid);
        (*_glb_hdl_sc_channel_map).push_back(p_16_m00_axi_rid);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_16_m00_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_16->m00_axi_rdata.bind(*p_16_m00_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_16_m00_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_16_m00_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_16->m00_axi_rresp.bind(*p_16_m00_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_16_m00_axi_rresp);
        xsim_sc_channel<0, bool > *p_16_m00_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_16->m00_axi_rlast.bind(*p_16_m00_axi_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_16_m00_axi_rlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_16_m00_axi_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_16->m00_axi_ruser.bind(*p_16_m00_axi_ruser);
        (*_glb_hdl_sc_channel_map).push_back(p_16_m00_axi_ruser);
        xsim_sc_channel<0, bool > *p_16_m00_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_16->m00_axi_rvalid.bind(*p_16_m00_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_16_m00_axi_rvalid);
        xsim_sc_channel<0, bool > *p_16_m00_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_16->m00_axi_rready.bind(*p_16_m00_axi_rready);
        p_16_m00_axi_rready->set_sv_netview_offsetfromdp(10754328);
        xsim_sc_channel<0, bool > *p_16_m00_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_16->m00_axi_aclk.bind(*p_16_m00_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_16_m00_axi_aclk);
        xsim_sc_channel<0, bool > *p_16_m00_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_16->m00_axi_aresetn.bind(*p_16_m00_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_16_m00_axi_aresetn);
        sc_inst_17 = new emu_sim_embedded_scheduler_sw_0_0(".emu_wrapper.emu_i.static_region.embedded_schedular.sim_embedded_scheduler_sw_0");
        sc_inst_17->xsim_set_dbg_index(1682);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_17_saxi_lite_cq_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_17->saxi_lite_cq_awaddr.bind(*p_17_saxi_lite_cq_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_17_saxi_lite_cq_awaddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_17_saxi_lite_cq_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_17->saxi_lite_cq_awprot.bind(*p_17_saxi_lite_cq_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_17_saxi_lite_cq_awprot);
        xsim_sc_channel<0, bool > *p_17_saxi_lite_cq_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_17->saxi_lite_cq_awvalid.bind(*p_17_saxi_lite_cq_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_17_saxi_lite_cq_awvalid);
        xsim_sc_channel<0, bool > *p_17_saxi_lite_cq_awready = new xsim_sc_channel<0, bool >();
        sc_inst_17->saxi_lite_cq_awready.bind(*p_17_saxi_lite_cq_awready);
        p_17_saxi_lite_cq_awready->set_sv_netview_offsetfromdp(14086552);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_17_saxi_lite_cq_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_17->saxi_lite_cq_wdata.bind(*p_17_saxi_lite_cq_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_17_saxi_lite_cq_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_17_saxi_lite_cq_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_17->saxi_lite_cq_wstrb.bind(*p_17_saxi_lite_cq_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_17_saxi_lite_cq_wstrb);
        xsim_sc_channel<0, bool > *p_17_saxi_lite_cq_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_17->saxi_lite_cq_wvalid.bind(*p_17_saxi_lite_cq_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_17_saxi_lite_cq_wvalid);
        xsim_sc_channel<0, bool > *p_17_saxi_lite_cq_wready = new xsim_sc_channel<0, bool >();
        sc_inst_17->saxi_lite_cq_wready.bind(*p_17_saxi_lite_cq_wready);
        p_17_saxi_lite_cq_wready->set_sv_netview_offsetfromdp(14086776);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_17_saxi_lite_cq_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_17->saxi_lite_cq_bresp.bind(*p_17_saxi_lite_cq_bresp);
        p_17_saxi_lite_cq_bresp->set_sv_netview_offsetfromdp(14086832);
        xsim_sc_channel<0, bool > *p_17_saxi_lite_cq_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_17->saxi_lite_cq_bvalid.bind(*p_17_saxi_lite_cq_bvalid);
        p_17_saxi_lite_cq_bvalid->set_sv_netview_offsetfromdp(14086888);
        xsim_sc_channel<0, bool > *p_17_saxi_lite_cq_bready = new xsim_sc_channel<0, bool >();
        sc_inst_17->saxi_lite_cq_bready.bind(*p_17_saxi_lite_cq_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_17_saxi_lite_cq_bready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_17_saxi_lite_cq_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_17->saxi_lite_cq_araddr.bind(*p_17_saxi_lite_cq_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_17_saxi_lite_cq_araddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_17_saxi_lite_cq_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_17->saxi_lite_cq_arprot.bind(*p_17_saxi_lite_cq_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_17_saxi_lite_cq_arprot);
        xsim_sc_channel<0, bool > *p_17_saxi_lite_cq_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_17->saxi_lite_cq_arvalid.bind(*p_17_saxi_lite_cq_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_17_saxi_lite_cq_arvalid);
        xsim_sc_channel<0, bool > *p_17_saxi_lite_cq_arready = new xsim_sc_channel<0, bool >();
        sc_inst_17->saxi_lite_cq_arready.bind(*p_17_saxi_lite_cq_arready);
        p_17_saxi_lite_cq_arready->set_sv_netview_offsetfromdp(14087168);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_17_saxi_lite_cq_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_17->saxi_lite_cq_rdata.bind(*p_17_saxi_lite_cq_rdata);
        p_17_saxi_lite_cq_rdata->set_sv_netview_offsetfromdp(14087224);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_17_saxi_lite_cq_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_17->saxi_lite_cq_rresp.bind(*p_17_saxi_lite_cq_rresp);
        p_17_saxi_lite_cq_rresp->set_sv_netview_offsetfromdp(14087280);
        xsim_sc_channel<0, bool > *p_17_saxi_lite_cq_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_17->saxi_lite_cq_rvalid.bind(*p_17_saxi_lite_cq_rvalid);
        p_17_saxi_lite_cq_rvalid->set_sv_netview_offsetfromdp(14087336);
        xsim_sc_channel<0, bool > *p_17_saxi_lite_cq_rready = new xsim_sc_channel<0, bool >();
        sc_inst_17->saxi_lite_cq_rready.bind(*p_17_saxi_lite_cq_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_17_saxi_lite_cq_rready);
        xsim_sc_channel<0, bool > *p_17_saxi_lite_cq_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_17->saxi_lite_cq_aclk.bind(*p_17_saxi_lite_cq_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_17_saxi_lite_cq_aclk);
        xsim_sc_channel<0, bool > *p_17_saxi_lite_cq_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_17->saxi_lite_cq_aresetn.bind(*p_17_saxi_lite_cq_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_17_saxi_lite_cq_aresetn);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_17_maxi_lite_mb_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_17->maxi_lite_mb_awaddr.bind(*p_17_maxi_lite_mb_awaddr);
        p_17_maxi_lite_mb_awaddr->set_sv_netview_offsetfromdp(14087560);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_17_maxi_lite_mb_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_17->maxi_lite_mb_awprot.bind(*p_17_maxi_lite_mb_awprot);
        p_17_maxi_lite_mb_awprot->set_sv_netview_offsetfromdp(14087616);
        xsim_sc_channel<0, bool > *p_17_maxi_lite_mb_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_17->maxi_lite_mb_awvalid.bind(*p_17_maxi_lite_mb_awvalid);
        p_17_maxi_lite_mb_awvalid->set_sv_netview_offsetfromdp(14087672);
        xsim_sc_channel<0, bool > *p_17_maxi_lite_mb_awready = new xsim_sc_channel<0, bool >();
        sc_inst_17->maxi_lite_mb_awready.bind(*p_17_maxi_lite_mb_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_17_maxi_lite_mb_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_17_maxi_lite_mb_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_17->maxi_lite_mb_wdata.bind(*p_17_maxi_lite_mb_wdata);
        p_17_maxi_lite_mb_wdata->set_sv_netview_offsetfromdp(14087784);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_17_maxi_lite_mb_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_17->maxi_lite_mb_wstrb.bind(*p_17_maxi_lite_mb_wstrb);
        p_17_maxi_lite_mb_wstrb->set_sv_netview_offsetfromdp(14087840);
        xsim_sc_channel<0, bool > *p_17_maxi_lite_mb_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_17->maxi_lite_mb_wvalid.bind(*p_17_maxi_lite_mb_wvalid);
        p_17_maxi_lite_mb_wvalid->set_sv_netview_offsetfromdp(14087896);
        xsim_sc_channel<0, bool > *p_17_maxi_lite_mb_wready = new xsim_sc_channel<0, bool >();
        sc_inst_17->maxi_lite_mb_wready.bind(*p_17_maxi_lite_mb_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_17_maxi_lite_mb_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_17_maxi_lite_mb_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_17->maxi_lite_mb_bresp.bind(*p_17_maxi_lite_mb_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_17_maxi_lite_mb_bresp);
        xsim_sc_channel<0, bool > *p_17_maxi_lite_mb_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_17->maxi_lite_mb_bvalid.bind(*p_17_maxi_lite_mb_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_17_maxi_lite_mb_bvalid);
        xsim_sc_channel<0, bool > *p_17_maxi_lite_mb_bready = new xsim_sc_channel<0, bool >();
        sc_inst_17->maxi_lite_mb_bready.bind(*p_17_maxi_lite_mb_bready);
        p_17_maxi_lite_mb_bready->set_sv_netview_offsetfromdp(14088120);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_17_maxi_lite_mb_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_17->maxi_lite_mb_araddr.bind(*p_17_maxi_lite_mb_araddr);
        p_17_maxi_lite_mb_araddr->set_sv_netview_offsetfromdp(14088176);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_17_maxi_lite_mb_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_17->maxi_lite_mb_arprot.bind(*p_17_maxi_lite_mb_arprot);
        p_17_maxi_lite_mb_arprot->set_sv_netview_offsetfromdp(14088232);
        xsim_sc_channel<0, bool > *p_17_maxi_lite_mb_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_17->maxi_lite_mb_arvalid.bind(*p_17_maxi_lite_mb_arvalid);
        p_17_maxi_lite_mb_arvalid->set_sv_netview_offsetfromdp(14088288);
        xsim_sc_channel<0, bool > *p_17_maxi_lite_mb_arready = new xsim_sc_channel<0, bool >();
        sc_inst_17->maxi_lite_mb_arready.bind(*p_17_maxi_lite_mb_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_17_maxi_lite_mb_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_17_maxi_lite_mb_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_17->maxi_lite_mb_rdata.bind(*p_17_maxi_lite_mb_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_17_maxi_lite_mb_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_17_maxi_lite_mb_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_17->maxi_lite_mb_rresp.bind(*p_17_maxi_lite_mb_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_17_maxi_lite_mb_rresp);
        xsim_sc_channel<0, bool > *p_17_maxi_lite_mb_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_17->maxi_lite_mb_rvalid.bind(*p_17_maxi_lite_mb_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_17_maxi_lite_mb_rvalid);
        xsim_sc_channel<0, bool > *p_17_maxi_lite_mb_rready = new xsim_sc_channel<0, bool >();
        sc_inst_17->maxi_lite_mb_rready.bind(*p_17_maxi_lite_mb_rready);
        p_17_maxi_lite_mb_rready->set_sv_netview_offsetfromdp(14088568);
        xsim_sc_channel<0, bool > *p_17_maxi_lite_mb_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_17->maxi_lite_mb_aclk.bind(*p_17_maxi_lite_mb_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_17_maxi_lite_mb_aclk);
        xsim_sc_channel<0, bool > *p_17_maxi_lite_mb_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_17->maxi_lite_mb_aresetn.bind(*p_17_maxi_lite_mb_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_17_maxi_lite_mb_aresetn);
        xsim_sc_channel<0, bool > *p_17_irq = new xsim_sc_channel<0, bool >();
        sc_inst_17->irq.bind(*p_17_irq);
        (*_glb_hdl_sc_channel_map).push_back(p_17_irq);
        sc_inst_18 = new emu_sim_ddr_1_0(".emu_wrapper.emu_i.static_region.sim_ddr_1");
        sc_inst_18->xsim_set_dbg_index(745);
        xsim_sc_channel<0, bool > *p_18_c0_ui_clk = new xsim_sc_channel<0, bool >();
        sc_inst_18->c0_ui_clk.bind(*p_18_c0_ui_clk);
        (*_glb_hdl_sc_channel_map).push_back(p_18_c0_ui_clk);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_18_c0_ddr_saxi_awid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_18->c0_ddr_saxi_awid.bind(*p_18_c0_ddr_saxi_awid);
        (*_glb_hdl_sc_channel_map).push_back(p_18_c0_ddr_saxi_awid);
        xsim_sc_channel<34, sc_dt::sc_bv<34> > *p_18_c0_ddr_saxi_awaddr = new xsim_sc_channel<34, sc_dt::sc_bv<34> >();
        sc_inst_18->c0_ddr_saxi_awaddr.bind(*p_18_c0_ddr_saxi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_18_c0_ddr_saxi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_18_c0_ddr_saxi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_18->c0_ddr_saxi_awlen.bind(*p_18_c0_ddr_saxi_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_18_c0_ddr_saxi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_18_c0_ddr_saxi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_18->c0_ddr_saxi_awsize.bind(*p_18_c0_ddr_saxi_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_18_c0_ddr_saxi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_18_c0_ddr_saxi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_18->c0_ddr_saxi_awburst.bind(*p_18_c0_ddr_saxi_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_18_c0_ddr_saxi_awburst);
        xsim_sc_channel<0, bool > *p_18_c0_ddr_saxi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_18->c0_ddr_saxi_awlock.bind(*p_18_c0_ddr_saxi_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_18_c0_ddr_saxi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_18_c0_ddr_saxi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_18->c0_ddr_saxi_awcache.bind(*p_18_c0_ddr_saxi_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_18_c0_ddr_saxi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_18_c0_ddr_saxi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_18->c0_ddr_saxi_awprot.bind(*p_18_c0_ddr_saxi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_18_c0_ddr_saxi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_18_c0_ddr_saxi_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_18->c0_ddr_saxi_awregion.bind(*p_18_c0_ddr_saxi_awregion);
        (*_glb_hdl_sc_channel_map).push_back(p_18_c0_ddr_saxi_awregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_18_c0_ddr_saxi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_18->c0_ddr_saxi_awqos.bind(*p_18_c0_ddr_saxi_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_18_c0_ddr_saxi_awqos);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_18_c0_ddr_saxi_awuser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_18->c0_ddr_saxi_awuser.bind(*p_18_c0_ddr_saxi_awuser);
        (*_glb_hdl_sc_channel_map).push_back(p_18_c0_ddr_saxi_awuser);
        xsim_sc_channel<0, bool > *p_18_c0_ddr_saxi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_18->c0_ddr_saxi_awvalid.bind(*p_18_c0_ddr_saxi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_18_c0_ddr_saxi_awvalid);
        xsim_sc_channel<0, bool > *p_18_c0_ddr_saxi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_18->c0_ddr_saxi_awready.bind(*p_18_c0_ddr_saxi_awready);
        p_18_c0_ddr_saxi_awready->set_sv_netview_offsetfromdp(14174056);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_18_c0_ddr_saxi_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_18->c0_ddr_saxi_wdata.bind(*p_18_c0_ddr_saxi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_18_c0_ddr_saxi_wdata);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_18_c0_ddr_saxi_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_18->c0_ddr_saxi_wstrb.bind(*p_18_c0_ddr_saxi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_18_c0_ddr_saxi_wstrb);
        xsim_sc_channel<0, bool > *p_18_c0_ddr_saxi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_18->c0_ddr_saxi_wlast.bind(*p_18_c0_ddr_saxi_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_18_c0_ddr_saxi_wlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_18_c0_ddr_saxi_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_18->c0_ddr_saxi_wuser.bind(*p_18_c0_ddr_saxi_wuser);
        (*_glb_hdl_sc_channel_map).push_back(p_18_c0_ddr_saxi_wuser);
        xsim_sc_channel<0, bool > *p_18_c0_ddr_saxi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_18->c0_ddr_saxi_wvalid.bind(*p_18_c0_ddr_saxi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_18_c0_ddr_saxi_wvalid);
        xsim_sc_channel<0, bool > *p_18_c0_ddr_saxi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_18->c0_ddr_saxi_wready.bind(*p_18_c0_ddr_saxi_wready);
        p_18_c0_ddr_saxi_wready->set_sv_netview_offsetfromdp(14174392);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_18_c0_ddr_saxi_bid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_18->c0_ddr_saxi_bid.bind(*p_18_c0_ddr_saxi_bid);
        p_18_c0_ddr_saxi_bid->set_sv_netview_offsetfromdp(14174448);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_18_c0_ddr_saxi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_18->c0_ddr_saxi_bresp.bind(*p_18_c0_ddr_saxi_bresp);
        p_18_c0_ddr_saxi_bresp->set_sv_netview_offsetfromdp(14174504);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_18_c0_ddr_saxi_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_18->c0_ddr_saxi_buser.bind(*p_18_c0_ddr_saxi_buser);
        p_18_c0_ddr_saxi_buser->set_sv_netview_offsetfromdp(14174560);
        xsim_sc_channel<0, bool > *p_18_c0_ddr_saxi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_18->c0_ddr_saxi_bvalid.bind(*p_18_c0_ddr_saxi_bvalid);
        p_18_c0_ddr_saxi_bvalid->set_sv_netview_offsetfromdp(14174616);
        xsim_sc_channel<0, bool > *p_18_c0_ddr_saxi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_18->c0_ddr_saxi_bready.bind(*p_18_c0_ddr_saxi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_18_c0_ddr_saxi_bready);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_18_c0_ddr_saxi_arid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_18->c0_ddr_saxi_arid.bind(*p_18_c0_ddr_saxi_arid);
        (*_glb_hdl_sc_channel_map).push_back(p_18_c0_ddr_saxi_arid);
        xsim_sc_channel<34, sc_dt::sc_bv<34> > *p_18_c0_ddr_saxi_araddr = new xsim_sc_channel<34, sc_dt::sc_bv<34> >();
        sc_inst_18->c0_ddr_saxi_araddr.bind(*p_18_c0_ddr_saxi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_18_c0_ddr_saxi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_18_c0_ddr_saxi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_18->c0_ddr_saxi_arlen.bind(*p_18_c0_ddr_saxi_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_18_c0_ddr_saxi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_18_c0_ddr_saxi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_18->c0_ddr_saxi_arsize.bind(*p_18_c0_ddr_saxi_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_18_c0_ddr_saxi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_18_c0_ddr_saxi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_18->c0_ddr_saxi_arburst.bind(*p_18_c0_ddr_saxi_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_18_c0_ddr_saxi_arburst);
        xsim_sc_channel<0, bool > *p_18_c0_ddr_saxi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_18->c0_ddr_saxi_arlock.bind(*p_18_c0_ddr_saxi_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_18_c0_ddr_saxi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_18_c0_ddr_saxi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_18->c0_ddr_saxi_arcache.bind(*p_18_c0_ddr_saxi_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_18_c0_ddr_saxi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_18_c0_ddr_saxi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_18->c0_ddr_saxi_arprot.bind(*p_18_c0_ddr_saxi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_18_c0_ddr_saxi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_18_c0_ddr_saxi_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_18->c0_ddr_saxi_arregion.bind(*p_18_c0_ddr_saxi_arregion);
        (*_glb_hdl_sc_channel_map).push_back(p_18_c0_ddr_saxi_arregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_18_c0_ddr_saxi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_18->c0_ddr_saxi_arqos.bind(*p_18_c0_ddr_saxi_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_18_c0_ddr_saxi_arqos);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_18_c0_ddr_saxi_aruser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_18->c0_ddr_saxi_aruser.bind(*p_18_c0_ddr_saxi_aruser);
        (*_glb_hdl_sc_channel_map).push_back(p_18_c0_ddr_saxi_aruser);
        xsim_sc_channel<0, bool > *p_18_c0_ddr_saxi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_18->c0_ddr_saxi_arvalid.bind(*p_18_c0_ddr_saxi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_18_c0_ddr_saxi_arvalid);
        xsim_sc_channel<0, bool > *p_18_c0_ddr_saxi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_18->c0_ddr_saxi_arready.bind(*p_18_c0_ddr_saxi_arready);
        p_18_c0_ddr_saxi_arready->set_sv_netview_offsetfromdp(14175400);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_18_c0_ddr_saxi_rid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_18->c0_ddr_saxi_rid.bind(*p_18_c0_ddr_saxi_rid);
        p_18_c0_ddr_saxi_rid->set_sv_netview_offsetfromdp(14175456);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_18_c0_ddr_saxi_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_18->c0_ddr_saxi_rdata.bind(*p_18_c0_ddr_saxi_rdata);
        p_18_c0_ddr_saxi_rdata->set_sv_netview_offsetfromdp(14175512);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_18_c0_ddr_saxi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_18->c0_ddr_saxi_rresp.bind(*p_18_c0_ddr_saxi_rresp);
        p_18_c0_ddr_saxi_rresp->set_sv_netview_offsetfromdp(14175568);
        xsim_sc_channel<0, bool > *p_18_c0_ddr_saxi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_18->c0_ddr_saxi_rlast.bind(*p_18_c0_ddr_saxi_rlast);
        p_18_c0_ddr_saxi_rlast->set_sv_netview_offsetfromdp(14175624);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_18_c0_ddr_saxi_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_18->c0_ddr_saxi_ruser.bind(*p_18_c0_ddr_saxi_ruser);
        p_18_c0_ddr_saxi_ruser->set_sv_netview_offsetfromdp(14175680);
        xsim_sc_channel<0, bool > *p_18_c0_ddr_saxi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_18->c0_ddr_saxi_rvalid.bind(*p_18_c0_ddr_saxi_rvalid);
        p_18_c0_ddr_saxi_rvalid->set_sv_netview_offsetfromdp(14175736);
        xsim_sc_channel<0, bool > *p_18_c0_ddr_saxi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_18->c0_ddr_saxi_rready.bind(*p_18_c0_ddr_saxi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_18_c0_ddr_saxi_rready);
        xsim_sc_channel<0, bool > *p_18_c0_ddr_saxi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_18->c0_ddr_saxi_aclk.bind(*p_18_c0_ddr_saxi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_18_c0_ddr_saxi_aclk);
        xsim_sc_channel<0, bool > *p_18_c0_ddr_saxi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_18->c0_ddr_saxi_aresetn.bind(*p_18_c0_ddr_saxi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_18_c0_ddr_saxi_aresetn);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_18_s_xdma_axi_awid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_18->s_xdma_axi_awid.bind(*p_18_s_xdma_axi_awid);
        (*_glb_hdl_sc_channel_map).push_back(p_18_s_xdma_axi_awid);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_18_s_xdma_axi_awaddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_18->s_xdma_axi_awaddr.bind(*p_18_s_xdma_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_18_s_xdma_axi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_18_s_xdma_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_18->s_xdma_axi_awlen.bind(*p_18_s_xdma_axi_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_18_s_xdma_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_18_s_xdma_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_18->s_xdma_axi_awsize.bind(*p_18_s_xdma_axi_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_18_s_xdma_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_18_s_xdma_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_18->s_xdma_axi_awburst.bind(*p_18_s_xdma_axi_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_18_s_xdma_axi_awburst);
        xsim_sc_channel<0, bool > *p_18_s_xdma_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_18->s_xdma_axi_awlock.bind(*p_18_s_xdma_axi_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_18_s_xdma_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_18_s_xdma_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_18->s_xdma_axi_awcache.bind(*p_18_s_xdma_axi_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_18_s_xdma_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_18_s_xdma_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_18->s_xdma_axi_awprot.bind(*p_18_s_xdma_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_18_s_xdma_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_18_s_xdma_axi_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_18->s_xdma_axi_awregion.bind(*p_18_s_xdma_axi_awregion);
        (*_glb_hdl_sc_channel_map).push_back(p_18_s_xdma_axi_awregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_18_s_xdma_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_18->s_xdma_axi_awqos.bind(*p_18_s_xdma_axi_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_18_s_xdma_axi_awqos);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_18_s_xdma_axi_awuser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_18->s_xdma_axi_awuser.bind(*p_18_s_xdma_axi_awuser);
        (*_glb_hdl_sc_channel_map).push_back(p_18_s_xdma_axi_awuser);
        xsim_sc_channel<0, bool > *p_18_s_xdma_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_18->s_xdma_axi_awvalid.bind(*p_18_s_xdma_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_18_s_xdma_axi_awvalid);
        xsim_sc_channel<0, bool > *p_18_s_xdma_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_18->s_xdma_axi_awready.bind(*p_18_s_xdma_axi_awready);
        p_18_s_xdma_axi_awready->set_sv_netview_offsetfromdp(14176632);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_18_s_xdma_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_18->s_xdma_axi_wdata.bind(*p_18_s_xdma_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_18_s_xdma_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_18_s_xdma_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_18->s_xdma_axi_wstrb.bind(*p_18_s_xdma_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_18_s_xdma_axi_wstrb);
        xsim_sc_channel<0, bool > *p_18_s_xdma_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_18->s_xdma_axi_wlast.bind(*p_18_s_xdma_axi_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_18_s_xdma_axi_wlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_18_s_xdma_axi_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_18->s_xdma_axi_wuser.bind(*p_18_s_xdma_axi_wuser);
        (*_glb_hdl_sc_channel_map).push_back(p_18_s_xdma_axi_wuser);
        xsim_sc_channel<0, bool > *p_18_s_xdma_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_18->s_xdma_axi_wvalid.bind(*p_18_s_xdma_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_18_s_xdma_axi_wvalid);
        xsim_sc_channel<0, bool > *p_18_s_xdma_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_18->s_xdma_axi_wready.bind(*p_18_s_xdma_axi_wready);
        p_18_s_xdma_axi_wready->set_sv_netview_offsetfromdp(14176968);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_18_s_xdma_axi_bid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_18->s_xdma_axi_bid.bind(*p_18_s_xdma_axi_bid);
        p_18_s_xdma_axi_bid->set_sv_netview_offsetfromdp(14177024);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_18_s_xdma_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_18->s_xdma_axi_bresp.bind(*p_18_s_xdma_axi_bresp);
        p_18_s_xdma_axi_bresp->set_sv_netview_offsetfromdp(14177080);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_18_s_xdma_axi_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_18->s_xdma_axi_buser.bind(*p_18_s_xdma_axi_buser);
        p_18_s_xdma_axi_buser->set_sv_netview_offsetfromdp(14177136);
        xsim_sc_channel<0, bool > *p_18_s_xdma_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_18->s_xdma_axi_bvalid.bind(*p_18_s_xdma_axi_bvalid);
        p_18_s_xdma_axi_bvalid->set_sv_netview_offsetfromdp(14177192);
        xsim_sc_channel<0, bool > *p_18_s_xdma_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_18->s_xdma_axi_bready.bind(*p_18_s_xdma_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_18_s_xdma_axi_bready);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_18_s_xdma_axi_arid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_18->s_xdma_axi_arid.bind(*p_18_s_xdma_axi_arid);
        (*_glb_hdl_sc_channel_map).push_back(p_18_s_xdma_axi_arid);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_18_s_xdma_axi_araddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_18->s_xdma_axi_araddr.bind(*p_18_s_xdma_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_18_s_xdma_axi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_18_s_xdma_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_18->s_xdma_axi_arlen.bind(*p_18_s_xdma_axi_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_18_s_xdma_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_18_s_xdma_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_18->s_xdma_axi_arsize.bind(*p_18_s_xdma_axi_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_18_s_xdma_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_18_s_xdma_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_18->s_xdma_axi_arburst.bind(*p_18_s_xdma_axi_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_18_s_xdma_axi_arburst);
        xsim_sc_channel<0, bool > *p_18_s_xdma_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_18->s_xdma_axi_arlock.bind(*p_18_s_xdma_axi_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_18_s_xdma_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_18_s_xdma_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_18->s_xdma_axi_arcache.bind(*p_18_s_xdma_axi_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_18_s_xdma_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_18_s_xdma_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_18->s_xdma_axi_arprot.bind(*p_18_s_xdma_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_18_s_xdma_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_18_s_xdma_axi_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_18->s_xdma_axi_arregion.bind(*p_18_s_xdma_axi_arregion);
        (*_glb_hdl_sc_channel_map).push_back(p_18_s_xdma_axi_arregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_18_s_xdma_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_18->s_xdma_axi_arqos.bind(*p_18_s_xdma_axi_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_18_s_xdma_axi_arqos);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_18_s_xdma_axi_aruser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_18->s_xdma_axi_aruser.bind(*p_18_s_xdma_axi_aruser);
        (*_glb_hdl_sc_channel_map).push_back(p_18_s_xdma_axi_aruser);
        xsim_sc_channel<0, bool > *p_18_s_xdma_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_18->s_xdma_axi_arvalid.bind(*p_18_s_xdma_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_18_s_xdma_axi_arvalid);
        xsim_sc_channel<0, bool > *p_18_s_xdma_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_18->s_xdma_axi_arready.bind(*p_18_s_xdma_axi_arready);
        p_18_s_xdma_axi_arready->set_sv_netview_offsetfromdp(14177976);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_18_s_xdma_axi_rid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_18->s_xdma_axi_rid.bind(*p_18_s_xdma_axi_rid);
        p_18_s_xdma_axi_rid->set_sv_netview_offsetfromdp(14178032);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_18_s_xdma_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_18->s_xdma_axi_rdata.bind(*p_18_s_xdma_axi_rdata);
        p_18_s_xdma_axi_rdata->set_sv_netview_offsetfromdp(14178088);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_18_s_xdma_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_18->s_xdma_axi_rresp.bind(*p_18_s_xdma_axi_rresp);
        p_18_s_xdma_axi_rresp->set_sv_netview_offsetfromdp(14178144);
        xsim_sc_channel<0, bool > *p_18_s_xdma_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_18->s_xdma_axi_rlast.bind(*p_18_s_xdma_axi_rlast);
        p_18_s_xdma_axi_rlast->set_sv_netview_offsetfromdp(14178200);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_18_s_xdma_axi_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_18->s_xdma_axi_ruser.bind(*p_18_s_xdma_axi_ruser);
        p_18_s_xdma_axi_ruser->set_sv_netview_offsetfromdp(14178256);
        xsim_sc_channel<0, bool > *p_18_s_xdma_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_18->s_xdma_axi_rvalid.bind(*p_18_s_xdma_axi_rvalid);
        p_18_s_xdma_axi_rvalid->set_sv_netview_offsetfromdp(14178312);
        xsim_sc_channel<0, bool > *p_18_s_xdma_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_18->s_xdma_axi_rready.bind(*p_18_s_xdma_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_18_s_xdma_axi_rready);
        xsim_sc_channel<0, bool > *p_18_s_xdma_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_18->s_xdma_axi_aclk.bind(*p_18_s_xdma_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_18_s_xdma_axi_aclk);
        xsim_sc_channel<0, bool > *p_18_s_xdma_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_18->s_xdma_axi_aresetn.bind(*p_18_s_xdma_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_18_s_xdma_axi_aresetn);
        sc_inst_19 = new emu_sim_xdma_0_0(".emu_wrapper.emu_i.static_region.sim_xdma_0");
        sc_inst_19->xsim_set_dbg_index(746);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_19_m_aximm_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_19->m_aximm_awid.bind(*p_19_m_aximm_awid);
        p_19_m_aximm_awid->set_sv_netview_offsetfromdp(14178584);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_19_m_aximm_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_19->m_aximm_awaddr.bind(*p_19_m_aximm_awaddr);
        p_19_m_aximm_awaddr->set_sv_netview_offsetfromdp(14178640);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_19_m_aximm_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_19->m_aximm_awlen.bind(*p_19_m_aximm_awlen);
        p_19_m_aximm_awlen->set_sv_netview_offsetfromdp(14178696);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_19_m_aximm_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_19->m_aximm_awsize.bind(*p_19_m_aximm_awsize);
        p_19_m_aximm_awsize->set_sv_netview_offsetfromdp(14178752);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_19_m_aximm_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_19->m_aximm_awburst.bind(*p_19_m_aximm_awburst);
        p_19_m_aximm_awburst->set_sv_netview_offsetfromdp(14178808);
        xsim_sc_channel<0, bool > *p_19_m_aximm_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_19->m_aximm_awlock.bind(*p_19_m_aximm_awlock);
        p_19_m_aximm_awlock->set_sv_netview_offsetfromdp(14178864);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_19_m_aximm_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_19->m_aximm_awcache.bind(*p_19_m_aximm_awcache);
        p_19_m_aximm_awcache->set_sv_netview_offsetfromdp(14178920);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_19_m_aximm_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_19->m_aximm_awprot.bind(*p_19_m_aximm_awprot);
        p_19_m_aximm_awprot->set_sv_netview_offsetfromdp(14178976);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_19_m_aximm_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_19->m_aximm_awqos.bind(*p_19_m_aximm_awqos);
        p_19_m_aximm_awqos->set_sv_netview_offsetfromdp(14179032);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_19_m_aximm_awuser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_19->m_aximm_awuser.bind(*p_19_m_aximm_awuser);
        p_19_m_aximm_awuser->set_sv_netview_offsetfromdp(14179088);
        xsim_sc_channel<0, bool > *p_19_m_aximm_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_19->m_aximm_awvalid.bind(*p_19_m_aximm_awvalid);
        p_19_m_aximm_awvalid->set_sv_netview_offsetfromdp(14179144);
        xsim_sc_channel<0, bool > *p_19_m_aximm_awready = new xsim_sc_channel<0, bool >();
        sc_inst_19->m_aximm_awready.bind(*p_19_m_aximm_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_19_m_aximm_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_19_m_aximm_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_19->m_aximm_wdata.bind(*p_19_m_aximm_wdata);
        p_19_m_aximm_wdata->set_sv_netview_offsetfromdp(14179256);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_19_m_aximm_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_19->m_aximm_wstrb.bind(*p_19_m_aximm_wstrb);
        p_19_m_aximm_wstrb->set_sv_netview_offsetfromdp(14179312);
        xsim_sc_channel<0, bool > *p_19_m_aximm_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_19->m_aximm_wlast.bind(*p_19_m_aximm_wlast);
        p_19_m_aximm_wlast->set_sv_netview_offsetfromdp(14179368);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_19_m_aximm_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_19->m_aximm_wuser.bind(*p_19_m_aximm_wuser);
        p_19_m_aximm_wuser->set_sv_netview_offsetfromdp(14179424);
        xsim_sc_channel<0, bool > *p_19_m_aximm_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_19->m_aximm_wvalid.bind(*p_19_m_aximm_wvalid);
        p_19_m_aximm_wvalid->set_sv_netview_offsetfromdp(14179480);
        xsim_sc_channel<0, bool > *p_19_m_aximm_wready = new xsim_sc_channel<0, bool >();
        sc_inst_19->m_aximm_wready.bind(*p_19_m_aximm_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_19_m_aximm_wready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_19_m_aximm_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_19->m_aximm_bid.bind(*p_19_m_aximm_bid);
        (*_glb_hdl_sc_channel_map).push_back(p_19_m_aximm_bid);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_19_m_aximm_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_19->m_aximm_bresp.bind(*p_19_m_aximm_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_19_m_aximm_bresp);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_19_m_aximm_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_19->m_aximm_buser.bind(*p_19_m_aximm_buser);
        (*_glb_hdl_sc_channel_map).push_back(p_19_m_aximm_buser);
        xsim_sc_channel<0, bool > *p_19_m_aximm_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_19->m_aximm_bvalid.bind(*p_19_m_aximm_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_19_m_aximm_bvalid);
        xsim_sc_channel<0, bool > *p_19_m_aximm_bready = new xsim_sc_channel<0, bool >();
        sc_inst_19->m_aximm_bready.bind(*p_19_m_aximm_bready);
        p_19_m_aximm_bready->set_sv_netview_offsetfromdp(14179816);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_19_m_aximm_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_19->m_aximm_arid.bind(*p_19_m_aximm_arid);
        p_19_m_aximm_arid->set_sv_netview_offsetfromdp(14179872);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_19_m_aximm_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_19->m_aximm_araddr.bind(*p_19_m_aximm_araddr);
        p_19_m_aximm_araddr->set_sv_netview_offsetfromdp(14179928);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_19_m_aximm_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_19->m_aximm_arlen.bind(*p_19_m_aximm_arlen);
        p_19_m_aximm_arlen->set_sv_netview_offsetfromdp(14179984);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_19_m_aximm_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_19->m_aximm_arsize.bind(*p_19_m_aximm_arsize);
        p_19_m_aximm_arsize->set_sv_netview_offsetfromdp(14180040);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_19_m_aximm_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_19->m_aximm_arburst.bind(*p_19_m_aximm_arburst);
        p_19_m_aximm_arburst->set_sv_netview_offsetfromdp(14180096);
        xsim_sc_channel<0, bool > *p_19_m_aximm_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_19->m_aximm_arlock.bind(*p_19_m_aximm_arlock);
        p_19_m_aximm_arlock->set_sv_netview_offsetfromdp(14180152);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_19_m_aximm_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_19->m_aximm_arcache.bind(*p_19_m_aximm_arcache);
        p_19_m_aximm_arcache->set_sv_netview_offsetfromdp(14180208);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_19_m_aximm_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_19->m_aximm_arprot.bind(*p_19_m_aximm_arprot);
        p_19_m_aximm_arprot->set_sv_netview_offsetfromdp(14180264);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_19_m_aximm_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_19->m_aximm_arqos.bind(*p_19_m_aximm_arqos);
        p_19_m_aximm_arqos->set_sv_netview_offsetfromdp(14180320);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_19_m_aximm_aruser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_19->m_aximm_aruser.bind(*p_19_m_aximm_aruser);
        p_19_m_aximm_aruser->set_sv_netview_offsetfromdp(14180376);
        xsim_sc_channel<0, bool > *p_19_m_aximm_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_19->m_aximm_arvalid.bind(*p_19_m_aximm_arvalid);
        p_19_m_aximm_arvalid->set_sv_netview_offsetfromdp(14180432);
        xsim_sc_channel<0, bool > *p_19_m_aximm_arready = new xsim_sc_channel<0, bool >();
        sc_inst_19->m_aximm_arready.bind(*p_19_m_aximm_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_19_m_aximm_arready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_19_m_aximm_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_19->m_aximm_rid.bind(*p_19_m_aximm_rid);
        (*_glb_hdl_sc_channel_map).push_back(p_19_m_aximm_rid);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_19_m_aximm_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_19->m_aximm_rdata.bind(*p_19_m_aximm_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_19_m_aximm_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_19_m_aximm_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_19->m_aximm_rresp.bind(*p_19_m_aximm_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_19_m_aximm_rresp);
        xsim_sc_channel<0, bool > *p_19_m_aximm_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_19->m_aximm_rlast.bind(*p_19_m_aximm_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_19_m_aximm_rlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_19_m_aximm_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_19->m_aximm_ruser.bind(*p_19_m_aximm_ruser);
        (*_glb_hdl_sc_channel_map).push_back(p_19_m_aximm_ruser);
        xsim_sc_channel<0, bool > *p_19_m_aximm_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_19->m_aximm_rvalid.bind(*p_19_m_aximm_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_19_m_aximm_rvalid);
        xsim_sc_channel<0, bool > *p_19_m_aximm_rready = new xsim_sc_channel<0, bool >();
        sc_inst_19->m_aximm_rready.bind(*p_19_m_aximm_rready);
        p_19_m_aximm_rready->set_sv_netview_offsetfromdp(14180880);
        xsim_sc_channel<0, bool > *p_19_m_aximm_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_19->m_aximm_aclk.bind(*p_19_m_aximm_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_19_m_aximm_aclk);
        xsim_sc_channel<0, bool > *p_19_m_aximm_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_19->m_aximm_aresetn.bind(*p_19_m_aximm_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_19_m_aximm_aresetn);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_19_m_axictrl_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_19->m_axictrl_awaddr.bind(*p_19_m_axictrl_awaddr);
        p_19_m_axictrl_awaddr->set_sv_netview_offsetfromdp(14181048);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_19_m_axictrl_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_19->m_axictrl_awprot.bind(*p_19_m_axictrl_awprot);
        p_19_m_axictrl_awprot->set_sv_netview_offsetfromdp(14181104);
        xsim_sc_channel<0, bool > *p_19_m_axictrl_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_19->m_axictrl_awvalid.bind(*p_19_m_axictrl_awvalid);
        p_19_m_axictrl_awvalid->set_sv_netview_offsetfromdp(14181160);
        xsim_sc_channel<0, bool > *p_19_m_axictrl_awready = new xsim_sc_channel<0, bool >();
        sc_inst_19->m_axictrl_awready.bind(*p_19_m_axictrl_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_19_m_axictrl_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_19_m_axictrl_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_19->m_axictrl_wdata.bind(*p_19_m_axictrl_wdata);
        p_19_m_axictrl_wdata->set_sv_netview_offsetfromdp(14181272);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_19_m_axictrl_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_19->m_axictrl_wstrb.bind(*p_19_m_axictrl_wstrb);
        p_19_m_axictrl_wstrb->set_sv_netview_offsetfromdp(14181328);
        xsim_sc_channel<0, bool > *p_19_m_axictrl_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_19->m_axictrl_wvalid.bind(*p_19_m_axictrl_wvalid);
        p_19_m_axictrl_wvalid->set_sv_netview_offsetfromdp(14181384);
        xsim_sc_channel<0, bool > *p_19_m_axictrl_wready = new xsim_sc_channel<0, bool >();
        sc_inst_19->m_axictrl_wready.bind(*p_19_m_axictrl_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_19_m_axictrl_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_19_m_axictrl_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_19->m_axictrl_bresp.bind(*p_19_m_axictrl_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_19_m_axictrl_bresp);
        xsim_sc_channel<0, bool > *p_19_m_axictrl_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_19->m_axictrl_bvalid.bind(*p_19_m_axictrl_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_19_m_axictrl_bvalid);
        xsim_sc_channel<0, bool > *p_19_m_axictrl_bready = new xsim_sc_channel<0, bool >();
        sc_inst_19->m_axictrl_bready.bind(*p_19_m_axictrl_bready);
        p_19_m_axictrl_bready->set_sv_netview_offsetfromdp(14181608);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_19_m_axictrl_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_19->m_axictrl_araddr.bind(*p_19_m_axictrl_araddr);
        p_19_m_axictrl_araddr->set_sv_netview_offsetfromdp(14181664);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_19_m_axictrl_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_19->m_axictrl_arprot.bind(*p_19_m_axictrl_arprot);
        p_19_m_axictrl_arprot->set_sv_netview_offsetfromdp(14181720);
        xsim_sc_channel<0, bool > *p_19_m_axictrl_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_19->m_axictrl_arvalid.bind(*p_19_m_axictrl_arvalid);
        p_19_m_axictrl_arvalid->set_sv_netview_offsetfromdp(14181776);
        xsim_sc_channel<0, bool > *p_19_m_axictrl_arready = new xsim_sc_channel<0, bool >();
        sc_inst_19->m_axictrl_arready.bind(*p_19_m_axictrl_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_19_m_axictrl_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_19_m_axictrl_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_19->m_axictrl_rdata.bind(*p_19_m_axictrl_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_19_m_axictrl_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_19_m_axictrl_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_19->m_axictrl_rresp.bind(*p_19_m_axictrl_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_19_m_axictrl_rresp);
        xsim_sc_channel<0, bool > *p_19_m_axictrl_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_19->m_axictrl_rvalid.bind(*p_19_m_axictrl_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_19_m_axictrl_rvalid);
        xsim_sc_channel<0, bool > *p_19_m_axictrl_rready = new xsim_sc_channel<0, bool >();
        sc_inst_19->m_axictrl_rready.bind(*p_19_m_axictrl_rready);
        p_19_m_axictrl_rready->set_sv_netview_offsetfromdp(14182056);
        xsim_sc_channel<0, bool > *p_19_m_axictrl_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_19->m_axictrl_aclk.bind(*p_19_m_axictrl_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_19_m_axictrl_aclk);
        xsim_sc_channel<0, bool > *p_19_m_axictrl_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_19->m_axictrl_aresetn.bind(*p_19_m_axictrl_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_19_m_axictrl_aresetn);
        sc_inst_20 = new emu_xtlm_simple_intercon_0_0(".emu_wrapper.emu_i.xtlm_simple_intercon_0");
        sc_inst_20->xsim_set_dbg_index(36);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_20_s00_axi_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_20->s00_axi_awid.bind(*p_20_s00_axi_awid);
        (*_glb_hdl_sc_channel_map).push_back(p_20_s00_axi_awid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_20_s00_axi_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_20->s00_axi_awaddr.bind(*p_20_s00_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_20_s00_axi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_20_s00_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_20->s00_axi_awlen.bind(*p_20_s00_axi_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_20_s00_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_20_s00_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_20->s00_axi_awsize.bind(*p_20_s00_axi_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_20_s00_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_20_s00_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_20->s00_axi_awburst.bind(*p_20_s00_axi_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_20_s00_axi_awburst);
        xsim_sc_channel<0, bool > *p_20_s00_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_20->s00_axi_awlock.bind(*p_20_s00_axi_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_20_s00_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_20_s00_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_20->s00_axi_awcache.bind(*p_20_s00_axi_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_20_s00_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_20_s00_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_20->s00_axi_awprot.bind(*p_20_s00_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_20_s00_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_20_s00_axi_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_20->s00_axi_awregion.bind(*p_20_s00_axi_awregion);
        (*_glb_hdl_sc_channel_map).push_back(p_20_s00_axi_awregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_20_s00_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_20->s00_axi_awqos.bind(*p_20_s00_axi_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_20_s00_axi_awqos);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_20_s00_axi_awuser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_20->s00_axi_awuser.bind(*p_20_s00_axi_awuser);
        (*_glb_hdl_sc_channel_map).push_back(p_20_s00_axi_awuser);
        xsim_sc_channel<0, bool > *p_20_s00_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_20->s00_axi_awvalid.bind(*p_20_s00_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_20_s00_axi_awvalid);
        xsim_sc_channel<0, bool > *p_20_s00_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_20->s00_axi_awready.bind(*p_20_s00_axi_awready);
        p_20_s00_axi_awready->set_sv_netview_offsetfromdp(15175288);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_20_s00_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_20->s00_axi_wdata.bind(*p_20_s00_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_20_s00_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_20_s00_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_20->s00_axi_wstrb.bind(*p_20_s00_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_20_s00_axi_wstrb);
        xsim_sc_channel<0, bool > *p_20_s00_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_20->s00_axi_wlast.bind(*p_20_s00_axi_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_20_s00_axi_wlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_20_s00_axi_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_20->s00_axi_wuser.bind(*p_20_s00_axi_wuser);
        (*_glb_hdl_sc_channel_map).push_back(p_20_s00_axi_wuser);
        xsim_sc_channel<0, bool > *p_20_s00_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_20->s00_axi_wvalid.bind(*p_20_s00_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_20_s00_axi_wvalid);
        xsim_sc_channel<0, bool > *p_20_s00_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_20->s00_axi_wready.bind(*p_20_s00_axi_wready);
        p_20_s00_axi_wready->set_sv_netview_offsetfromdp(15175624);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_20_s00_axi_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_20->s00_axi_bid.bind(*p_20_s00_axi_bid);
        p_20_s00_axi_bid->set_sv_netview_offsetfromdp(15175680);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_20_s00_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_20->s00_axi_bresp.bind(*p_20_s00_axi_bresp);
        p_20_s00_axi_bresp->set_sv_netview_offsetfromdp(15175736);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_20_s00_axi_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_20->s00_axi_buser.bind(*p_20_s00_axi_buser);
        p_20_s00_axi_buser->set_sv_netview_offsetfromdp(15175792);
        xsim_sc_channel<0, bool > *p_20_s00_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_20->s00_axi_bvalid.bind(*p_20_s00_axi_bvalid);
        p_20_s00_axi_bvalid->set_sv_netview_offsetfromdp(15175848);
        xsim_sc_channel<0, bool > *p_20_s00_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_20->s00_axi_bready.bind(*p_20_s00_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_20_s00_axi_bready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_20_s00_axi_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_20->s00_axi_arid.bind(*p_20_s00_axi_arid);
        (*_glb_hdl_sc_channel_map).push_back(p_20_s00_axi_arid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_20_s00_axi_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_20->s00_axi_araddr.bind(*p_20_s00_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_20_s00_axi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_20_s00_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_20->s00_axi_arlen.bind(*p_20_s00_axi_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_20_s00_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_20_s00_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_20->s00_axi_arsize.bind(*p_20_s00_axi_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_20_s00_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_20_s00_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_20->s00_axi_arburst.bind(*p_20_s00_axi_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_20_s00_axi_arburst);
        xsim_sc_channel<0, bool > *p_20_s00_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_20->s00_axi_arlock.bind(*p_20_s00_axi_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_20_s00_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_20_s00_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_20->s00_axi_arcache.bind(*p_20_s00_axi_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_20_s00_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_20_s00_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_20->s00_axi_arprot.bind(*p_20_s00_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_20_s00_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_20_s00_axi_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_20->s00_axi_arregion.bind(*p_20_s00_axi_arregion);
        (*_glb_hdl_sc_channel_map).push_back(p_20_s00_axi_arregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_20_s00_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_20->s00_axi_arqos.bind(*p_20_s00_axi_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_20_s00_axi_arqos);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_20_s00_axi_aruser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_20->s00_axi_aruser.bind(*p_20_s00_axi_aruser);
        (*_glb_hdl_sc_channel_map).push_back(p_20_s00_axi_aruser);
        xsim_sc_channel<0, bool > *p_20_s00_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_20->s00_axi_arvalid.bind(*p_20_s00_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_20_s00_axi_arvalid);
        xsim_sc_channel<0, bool > *p_20_s00_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_20->s00_axi_arready.bind(*p_20_s00_axi_arready);
        p_20_s00_axi_arready->set_sv_netview_offsetfromdp(15176632);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_20_s00_axi_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_20->s00_axi_rid.bind(*p_20_s00_axi_rid);
        p_20_s00_axi_rid->set_sv_netview_offsetfromdp(15176688);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_20_s00_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_20->s00_axi_rdata.bind(*p_20_s00_axi_rdata);
        p_20_s00_axi_rdata->set_sv_netview_offsetfromdp(15176744);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_20_s00_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_20->s00_axi_rresp.bind(*p_20_s00_axi_rresp);
        p_20_s00_axi_rresp->set_sv_netview_offsetfromdp(15176800);
        xsim_sc_channel<0, bool > *p_20_s00_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_20->s00_axi_rlast.bind(*p_20_s00_axi_rlast);
        p_20_s00_axi_rlast->set_sv_netview_offsetfromdp(15176856);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_20_s00_axi_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_20->s00_axi_ruser.bind(*p_20_s00_axi_ruser);
        p_20_s00_axi_ruser->set_sv_netview_offsetfromdp(15176912);
        xsim_sc_channel<0, bool > *p_20_s00_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_20->s00_axi_rvalid.bind(*p_20_s00_axi_rvalid);
        p_20_s00_axi_rvalid->set_sv_netview_offsetfromdp(15176968);
        xsim_sc_channel<0, bool > *p_20_s00_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_20->s00_axi_rready.bind(*p_20_s00_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_20_s00_axi_rready);
        xsim_sc_channel<0, bool > *p_20_s00_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_20->s00_axi_aclk.bind(*p_20_s00_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_20_s00_axi_aclk);
        xsim_sc_channel<0, bool > *p_20_s00_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_20->s00_axi_aresetn.bind(*p_20_s00_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_20_s00_axi_aresetn);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_20_m00_axi_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_20->m00_axi_awid.bind(*p_20_m00_axi_awid);
        p_20_m00_axi_awid->set_sv_netview_offsetfromdp(15177192);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_20_m00_axi_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_20->m00_axi_awaddr.bind(*p_20_m00_axi_awaddr);
        p_20_m00_axi_awaddr->set_sv_netview_offsetfromdp(15177248);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_20_m00_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_20->m00_axi_awlen.bind(*p_20_m00_axi_awlen);
        p_20_m00_axi_awlen->set_sv_netview_offsetfromdp(15177304);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_20_m00_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_20->m00_axi_awsize.bind(*p_20_m00_axi_awsize);
        p_20_m00_axi_awsize->set_sv_netview_offsetfromdp(15177360);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_20_m00_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_20->m00_axi_awburst.bind(*p_20_m00_axi_awburst);
        p_20_m00_axi_awburst->set_sv_netview_offsetfromdp(15177416);
        xsim_sc_channel<0, bool > *p_20_m00_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_20->m00_axi_awlock.bind(*p_20_m00_axi_awlock);
        p_20_m00_axi_awlock->set_sv_netview_offsetfromdp(15177472);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_20_m00_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_20->m00_axi_awcache.bind(*p_20_m00_axi_awcache);
        p_20_m00_axi_awcache->set_sv_netview_offsetfromdp(15177528);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_20_m00_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_20->m00_axi_awprot.bind(*p_20_m00_axi_awprot);
        p_20_m00_axi_awprot->set_sv_netview_offsetfromdp(15177584);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_20_m00_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_20->m00_axi_awqos.bind(*p_20_m00_axi_awqos);
        p_20_m00_axi_awqos->set_sv_netview_offsetfromdp(15177640);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_20_m00_axi_awuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_20->m00_axi_awuser.bind(*p_20_m00_axi_awuser);
        p_20_m00_axi_awuser->set_sv_netview_offsetfromdp(15177696);
        xsim_sc_channel<0, bool > *p_20_m00_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_20->m00_axi_awvalid.bind(*p_20_m00_axi_awvalid);
        p_20_m00_axi_awvalid->set_sv_netview_offsetfromdp(15177752);
        xsim_sc_channel<0, bool > *p_20_m00_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_20->m00_axi_awready.bind(*p_20_m00_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_20_m00_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_20_m00_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_20->m00_axi_wdata.bind(*p_20_m00_axi_wdata);
        p_20_m00_axi_wdata->set_sv_netview_offsetfromdp(15177864);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_20_m00_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_20->m00_axi_wstrb.bind(*p_20_m00_axi_wstrb);
        p_20_m00_axi_wstrb->set_sv_netview_offsetfromdp(15177920);
        xsim_sc_channel<0, bool > *p_20_m00_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_20->m00_axi_wlast.bind(*p_20_m00_axi_wlast);
        p_20_m00_axi_wlast->set_sv_netview_offsetfromdp(15177976);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_20_m00_axi_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_20->m00_axi_wuser.bind(*p_20_m00_axi_wuser);
        p_20_m00_axi_wuser->set_sv_netview_offsetfromdp(15178032);
        xsim_sc_channel<0, bool > *p_20_m00_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_20->m00_axi_wvalid.bind(*p_20_m00_axi_wvalid);
        p_20_m00_axi_wvalid->set_sv_netview_offsetfromdp(15178088);
        xsim_sc_channel<0, bool > *p_20_m00_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_20->m00_axi_wready.bind(*p_20_m00_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_20_m00_axi_wready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_20_m00_axi_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_20->m00_axi_bid.bind(*p_20_m00_axi_bid);
        (*_glb_hdl_sc_channel_map).push_back(p_20_m00_axi_bid);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_20_m00_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_20->m00_axi_bresp.bind(*p_20_m00_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_20_m00_axi_bresp);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_20_m00_axi_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_20->m00_axi_buser.bind(*p_20_m00_axi_buser);
        (*_glb_hdl_sc_channel_map).push_back(p_20_m00_axi_buser);
        xsim_sc_channel<0, bool > *p_20_m00_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_20->m00_axi_bvalid.bind(*p_20_m00_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_20_m00_axi_bvalid);
        xsim_sc_channel<0, bool > *p_20_m00_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_20->m00_axi_bready.bind(*p_20_m00_axi_bready);
        p_20_m00_axi_bready->set_sv_netview_offsetfromdp(15178424);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_20_m00_axi_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_20->m00_axi_arid.bind(*p_20_m00_axi_arid);
        p_20_m00_axi_arid->set_sv_netview_offsetfromdp(15178480);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_20_m00_axi_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_20->m00_axi_araddr.bind(*p_20_m00_axi_araddr);
        p_20_m00_axi_araddr->set_sv_netview_offsetfromdp(15178536);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_20_m00_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_20->m00_axi_arlen.bind(*p_20_m00_axi_arlen);
        p_20_m00_axi_arlen->set_sv_netview_offsetfromdp(15178592);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_20_m00_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_20->m00_axi_arsize.bind(*p_20_m00_axi_arsize);
        p_20_m00_axi_arsize->set_sv_netview_offsetfromdp(15178648);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_20_m00_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_20->m00_axi_arburst.bind(*p_20_m00_axi_arburst);
        p_20_m00_axi_arburst->set_sv_netview_offsetfromdp(15178704);
        xsim_sc_channel<0, bool > *p_20_m00_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_20->m00_axi_arlock.bind(*p_20_m00_axi_arlock);
        p_20_m00_axi_arlock->set_sv_netview_offsetfromdp(15178760);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_20_m00_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_20->m00_axi_arcache.bind(*p_20_m00_axi_arcache);
        p_20_m00_axi_arcache->set_sv_netview_offsetfromdp(15178816);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_20_m00_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_20->m00_axi_arprot.bind(*p_20_m00_axi_arprot);
        p_20_m00_axi_arprot->set_sv_netview_offsetfromdp(15178872);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_20_m00_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_20->m00_axi_arqos.bind(*p_20_m00_axi_arqos);
        p_20_m00_axi_arqos->set_sv_netview_offsetfromdp(15178928);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_20_m00_axi_aruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_20->m00_axi_aruser.bind(*p_20_m00_axi_aruser);
        p_20_m00_axi_aruser->set_sv_netview_offsetfromdp(15178984);
        xsim_sc_channel<0, bool > *p_20_m00_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_20->m00_axi_arvalid.bind(*p_20_m00_axi_arvalid);
        p_20_m00_axi_arvalid->set_sv_netview_offsetfromdp(15179040);
        xsim_sc_channel<0, bool > *p_20_m00_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_20->m00_axi_arready.bind(*p_20_m00_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_20_m00_axi_arready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_20_m00_axi_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_20->m00_axi_rid.bind(*p_20_m00_axi_rid);
        (*_glb_hdl_sc_channel_map).push_back(p_20_m00_axi_rid);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_20_m00_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_20->m00_axi_rdata.bind(*p_20_m00_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_20_m00_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_20_m00_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_20->m00_axi_rresp.bind(*p_20_m00_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_20_m00_axi_rresp);
        xsim_sc_channel<0, bool > *p_20_m00_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_20->m00_axi_rlast.bind(*p_20_m00_axi_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_20_m00_axi_rlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_20_m00_axi_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_20->m00_axi_ruser.bind(*p_20_m00_axi_ruser);
        (*_glb_hdl_sc_channel_map).push_back(p_20_m00_axi_ruser);
        xsim_sc_channel<0, bool > *p_20_m00_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_20->m00_axi_rvalid.bind(*p_20_m00_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_20_m00_axi_rvalid);
        xsim_sc_channel<0, bool > *p_20_m00_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_20->m00_axi_rready.bind(*p_20_m00_axi_rready);
        p_20_m00_axi_rready->set_sv_netview_offsetfromdp(15179488);
        xsim_sc_channel<0, bool > *p_20_m00_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_20->m00_axi_aclk.bind(*p_20_m00_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_20_m00_axi_aclk);
        xsim_sc_channel<0, bool > *p_20_m00_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_20->m00_axi_aresetn.bind(*p_20_m00_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_20_m00_axi_aresetn);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_20_m02_axi_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_20->m02_axi_awid.bind(*p_20_m02_axi_awid);
        p_20_m02_axi_awid->set_sv_netview_offsetfromdp(15179656);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_20_m02_axi_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_20->m02_axi_awaddr.bind(*p_20_m02_axi_awaddr);
        p_20_m02_axi_awaddr->set_sv_netview_offsetfromdp(15179712);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_20_m02_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_20->m02_axi_awlen.bind(*p_20_m02_axi_awlen);
        p_20_m02_axi_awlen->set_sv_netview_offsetfromdp(15179768);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_20_m02_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_20->m02_axi_awsize.bind(*p_20_m02_axi_awsize);
        p_20_m02_axi_awsize->set_sv_netview_offsetfromdp(15179824);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_20_m02_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_20->m02_axi_awburst.bind(*p_20_m02_axi_awburst);
        p_20_m02_axi_awburst->set_sv_netview_offsetfromdp(15179880);
        xsim_sc_channel<0, bool > *p_20_m02_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_20->m02_axi_awlock.bind(*p_20_m02_axi_awlock);
        p_20_m02_axi_awlock->set_sv_netview_offsetfromdp(15179936);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_20_m02_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_20->m02_axi_awcache.bind(*p_20_m02_axi_awcache);
        p_20_m02_axi_awcache->set_sv_netview_offsetfromdp(15179992);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_20_m02_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_20->m02_axi_awprot.bind(*p_20_m02_axi_awprot);
        p_20_m02_axi_awprot->set_sv_netview_offsetfromdp(15180048);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_20_m02_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_20->m02_axi_awqos.bind(*p_20_m02_axi_awqos);
        p_20_m02_axi_awqos->set_sv_netview_offsetfromdp(15180104);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_20_m02_axi_awuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_20->m02_axi_awuser.bind(*p_20_m02_axi_awuser);
        p_20_m02_axi_awuser->set_sv_netview_offsetfromdp(15180160);
        xsim_sc_channel<0, bool > *p_20_m02_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_20->m02_axi_awvalid.bind(*p_20_m02_axi_awvalid);
        p_20_m02_axi_awvalid->set_sv_netview_offsetfromdp(15180216);
        xsim_sc_channel<0, bool > *p_20_m02_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_20->m02_axi_awready.bind(*p_20_m02_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_20_m02_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_20_m02_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_20->m02_axi_wdata.bind(*p_20_m02_axi_wdata);
        p_20_m02_axi_wdata->set_sv_netview_offsetfromdp(15180328);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_20_m02_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_20->m02_axi_wstrb.bind(*p_20_m02_axi_wstrb);
        p_20_m02_axi_wstrb->set_sv_netview_offsetfromdp(15180384);
        xsim_sc_channel<0, bool > *p_20_m02_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_20->m02_axi_wlast.bind(*p_20_m02_axi_wlast);
        p_20_m02_axi_wlast->set_sv_netview_offsetfromdp(15180440);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_20_m02_axi_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_20->m02_axi_wuser.bind(*p_20_m02_axi_wuser);
        p_20_m02_axi_wuser->set_sv_netview_offsetfromdp(15180496);
        xsim_sc_channel<0, bool > *p_20_m02_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_20->m02_axi_wvalid.bind(*p_20_m02_axi_wvalid);
        p_20_m02_axi_wvalid->set_sv_netview_offsetfromdp(15180552);
        xsim_sc_channel<0, bool > *p_20_m02_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_20->m02_axi_wready.bind(*p_20_m02_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_20_m02_axi_wready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_20_m02_axi_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_20->m02_axi_bid.bind(*p_20_m02_axi_bid);
        (*_glb_hdl_sc_channel_map).push_back(p_20_m02_axi_bid);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_20_m02_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_20->m02_axi_bresp.bind(*p_20_m02_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_20_m02_axi_bresp);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_20_m02_axi_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_20->m02_axi_buser.bind(*p_20_m02_axi_buser);
        (*_glb_hdl_sc_channel_map).push_back(p_20_m02_axi_buser);
        xsim_sc_channel<0, bool > *p_20_m02_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_20->m02_axi_bvalid.bind(*p_20_m02_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_20_m02_axi_bvalid);
        xsim_sc_channel<0, bool > *p_20_m02_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_20->m02_axi_bready.bind(*p_20_m02_axi_bready);
        p_20_m02_axi_bready->set_sv_netview_offsetfromdp(15180888);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_20_m02_axi_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_20->m02_axi_arid.bind(*p_20_m02_axi_arid);
        p_20_m02_axi_arid->set_sv_netview_offsetfromdp(15180944);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_20_m02_axi_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_20->m02_axi_araddr.bind(*p_20_m02_axi_araddr);
        p_20_m02_axi_araddr->set_sv_netview_offsetfromdp(15181000);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_20_m02_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_20->m02_axi_arlen.bind(*p_20_m02_axi_arlen);
        p_20_m02_axi_arlen->set_sv_netview_offsetfromdp(15181056);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_20_m02_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_20->m02_axi_arsize.bind(*p_20_m02_axi_arsize);
        p_20_m02_axi_arsize->set_sv_netview_offsetfromdp(15181112);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_20_m02_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_20->m02_axi_arburst.bind(*p_20_m02_axi_arburst);
        p_20_m02_axi_arburst->set_sv_netview_offsetfromdp(15181168);
        xsim_sc_channel<0, bool > *p_20_m02_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_20->m02_axi_arlock.bind(*p_20_m02_axi_arlock);
        p_20_m02_axi_arlock->set_sv_netview_offsetfromdp(15181224);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_20_m02_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_20->m02_axi_arcache.bind(*p_20_m02_axi_arcache);
        p_20_m02_axi_arcache->set_sv_netview_offsetfromdp(15181280);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_20_m02_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_20->m02_axi_arprot.bind(*p_20_m02_axi_arprot);
        p_20_m02_axi_arprot->set_sv_netview_offsetfromdp(15181336);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_20_m02_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_20->m02_axi_arqos.bind(*p_20_m02_axi_arqos);
        p_20_m02_axi_arqos->set_sv_netview_offsetfromdp(15181392);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_20_m02_axi_aruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_20->m02_axi_aruser.bind(*p_20_m02_axi_aruser);
        p_20_m02_axi_aruser->set_sv_netview_offsetfromdp(15181448);
        xsim_sc_channel<0, bool > *p_20_m02_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_20->m02_axi_arvalid.bind(*p_20_m02_axi_arvalid);
        p_20_m02_axi_arvalid->set_sv_netview_offsetfromdp(15181504);
        xsim_sc_channel<0, bool > *p_20_m02_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_20->m02_axi_arready.bind(*p_20_m02_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_20_m02_axi_arready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_20_m02_axi_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_20->m02_axi_rid.bind(*p_20_m02_axi_rid);
        (*_glb_hdl_sc_channel_map).push_back(p_20_m02_axi_rid);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_20_m02_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_20->m02_axi_rdata.bind(*p_20_m02_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_20_m02_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_20_m02_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_20->m02_axi_rresp.bind(*p_20_m02_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_20_m02_axi_rresp);
        xsim_sc_channel<0, bool > *p_20_m02_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_20->m02_axi_rlast.bind(*p_20_m02_axi_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_20_m02_axi_rlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_20_m02_axi_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_20->m02_axi_ruser.bind(*p_20_m02_axi_ruser);
        (*_glb_hdl_sc_channel_map).push_back(p_20_m02_axi_ruser);
        xsim_sc_channel<0, bool > *p_20_m02_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_20->m02_axi_rvalid.bind(*p_20_m02_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_20_m02_axi_rvalid);
        xsim_sc_channel<0, bool > *p_20_m02_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_20->m02_axi_rready.bind(*p_20_m02_axi_rready);
        p_20_m02_axi_rready->set_sv_netview_offsetfromdp(15181952);
        xsim_sc_channel<0, bool > *p_20_m02_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_20->m02_axi_aclk.bind(*p_20_m02_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_20_m02_axi_aclk);
        xsim_sc_channel<0, bool > *p_20_m02_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_20->m02_axi_aresetn.bind(*p_20_m02_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_20_m02_axi_aresetn);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_20_m03_axi_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_20->m03_axi_awid.bind(*p_20_m03_axi_awid);
        p_20_m03_axi_awid->set_sv_netview_offsetfromdp(15182120);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_20_m03_axi_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_20->m03_axi_awaddr.bind(*p_20_m03_axi_awaddr);
        p_20_m03_axi_awaddr->set_sv_netview_offsetfromdp(15182176);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_20_m03_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_20->m03_axi_awlen.bind(*p_20_m03_axi_awlen);
        p_20_m03_axi_awlen->set_sv_netview_offsetfromdp(15182232);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_20_m03_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_20->m03_axi_awsize.bind(*p_20_m03_axi_awsize);
        p_20_m03_axi_awsize->set_sv_netview_offsetfromdp(15182288);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_20_m03_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_20->m03_axi_awburst.bind(*p_20_m03_axi_awburst);
        p_20_m03_axi_awburst->set_sv_netview_offsetfromdp(15182344);
        xsim_sc_channel<0, bool > *p_20_m03_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_20->m03_axi_awlock.bind(*p_20_m03_axi_awlock);
        p_20_m03_axi_awlock->set_sv_netview_offsetfromdp(15182400);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_20_m03_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_20->m03_axi_awcache.bind(*p_20_m03_axi_awcache);
        p_20_m03_axi_awcache->set_sv_netview_offsetfromdp(15182456);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_20_m03_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_20->m03_axi_awprot.bind(*p_20_m03_axi_awprot);
        p_20_m03_axi_awprot->set_sv_netview_offsetfromdp(15182512);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_20_m03_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_20->m03_axi_awqos.bind(*p_20_m03_axi_awqos);
        p_20_m03_axi_awqos->set_sv_netview_offsetfromdp(15182568);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_20_m03_axi_awuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_20->m03_axi_awuser.bind(*p_20_m03_axi_awuser);
        p_20_m03_axi_awuser->set_sv_netview_offsetfromdp(15182624);
        xsim_sc_channel<0, bool > *p_20_m03_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_20->m03_axi_awvalid.bind(*p_20_m03_axi_awvalid);
        p_20_m03_axi_awvalid->set_sv_netview_offsetfromdp(15182680);
        xsim_sc_channel<0, bool > *p_20_m03_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_20->m03_axi_awready.bind(*p_20_m03_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_20_m03_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_20_m03_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_20->m03_axi_wdata.bind(*p_20_m03_axi_wdata);
        p_20_m03_axi_wdata->set_sv_netview_offsetfromdp(15182792);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_20_m03_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_20->m03_axi_wstrb.bind(*p_20_m03_axi_wstrb);
        p_20_m03_axi_wstrb->set_sv_netview_offsetfromdp(15182848);
        xsim_sc_channel<0, bool > *p_20_m03_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_20->m03_axi_wlast.bind(*p_20_m03_axi_wlast);
        p_20_m03_axi_wlast->set_sv_netview_offsetfromdp(15182904);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_20_m03_axi_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_20->m03_axi_wuser.bind(*p_20_m03_axi_wuser);
        p_20_m03_axi_wuser->set_sv_netview_offsetfromdp(15182960);
        xsim_sc_channel<0, bool > *p_20_m03_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_20->m03_axi_wvalid.bind(*p_20_m03_axi_wvalid);
        p_20_m03_axi_wvalid->set_sv_netview_offsetfromdp(15183016);
        xsim_sc_channel<0, bool > *p_20_m03_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_20->m03_axi_wready.bind(*p_20_m03_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_20_m03_axi_wready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_20_m03_axi_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_20->m03_axi_bid.bind(*p_20_m03_axi_bid);
        (*_glb_hdl_sc_channel_map).push_back(p_20_m03_axi_bid);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_20_m03_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_20->m03_axi_bresp.bind(*p_20_m03_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_20_m03_axi_bresp);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_20_m03_axi_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_20->m03_axi_buser.bind(*p_20_m03_axi_buser);
        (*_glb_hdl_sc_channel_map).push_back(p_20_m03_axi_buser);
        xsim_sc_channel<0, bool > *p_20_m03_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_20->m03_axi_bvalid.bind(*p_20_m03_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_20_m03_axi_bvalid);
        xsim_sc_channel<0, bool > *p_20_m03_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_20->m03_axi_bready.bind(*p_20_m03_axi_bready);
        p_20_m03_axi_bready->set_sv_netview_offsetfromdp(15183352);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_20_m03_axi_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_20->m03_axi_arid.bind(*p_20_m03_axi_arid);
        p_20_m03_axi_arid->set_sv_netview_offsetfromdp(15183408);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_20_m03_axi_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_20->m03_axi_araddr.bind(*p_20_m03_axi_araddr);
        p_20_m03_axi_araddr->set_sv_netview_offsetfromdp(15183464);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_20_m03_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_20->m03_axi_arlen.bind(*p_20_m03_axi_arlen);
        p_20_m03_axi_arlen->set_sv_netview_offsetfromdp(15183520);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_20_m03_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_20->m03_axi_arsize.bind(*p_20_m03_axi_arsize);
        p_20_m03_axi_arsize->set_sv_netview_offsetfromdp(15183576);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_20_m03_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_20->m03_axi_arburst.bind(*p_20_m03_axi_arburst);
        p_20_m03_axi_arburst->set_sv_netview_offsetfromdp(15183632);
        xsim_sc_channel<0, bool > *p_20_m03_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_20->m03_axi_arlock.bind(*p_20_m03_axi_arlock);
        p_20_m03_axi_arlock->set_sv_netview_offsetfromdp(15183688);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_20_m03_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_20->m03_axi_arcache.bind(*p_20_m03_axi_arcache);
        p_20_m03_axi_arcache->set_sv_netview_offsetfromdp(15183744);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_20_m03_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_20->m03_axi_arprot.bind(*p_20_m03_axi_arprot);
        p_20_m03_axi_arprot->set_sv_netview_offsetfromdp(15183800);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_20_m03_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_20->m03_axi_arqos.bind(*p_20_m03_axi_arqos);
        p_20_m03_axi_arqos->set_sv_netview_offsetfromdp(15183856);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_20_m03_axi_aruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_20->m03_axi_aruser.bind(*p_20_m03_axi_aruser);
        p_20_m03_axi_aruser->set_sv_netview_offsetfromdp(15183912);
        xsim_sc_channel<0, bool > *p_20_m03_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_20->m03_axi_arvalid.bind(*p_20_m03_axi_arvalid);
        p_20_m03_axi_arvalid->set_sv_netview_offsetfromdp(15183968);
        xsim_sc_channel<0, bool > *p_20_m03_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_20->m03_axi_arready.bind(*p_20_m03_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_20_m03_axi_arready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_20_m03_axi_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_20->m03_axi_rid.bind(*p_20_m03_axi_rid);
        (*_glb_hdl_sc_channel_map).push_back(p_20_m03_axi_rid);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_20_m03_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_20->m03_axi_rdata.bind(*p_20_m03_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_20_m03_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_20_m03_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_20->m03_axi_rresp.bind(*p_20_m03_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_20_m03_axi_rresp);
        xsim_sc_channel<0, bool > *p_20_m03_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_20->m03_axi_rlast.bind(*p_20_m03_axi_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_20_m03_axi_rlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_20_m03_axi_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_20->m03_axi_ruser.bind(*p_20_m03_axi_ruser);
        (*_glb_hdl_sc_channel_map).push_back(p_20_m03_axi_ruser);
        xsim_sc_channel<0, bool > *p_20_m03_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_20->m03_axi_rvalid.bind(*p_20_m03_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_20_m03_axi_rvalid);
        xsim_sc_channel<0, bool > *p_20_m03_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_20->m03_axi_rready.bind(*p_20_m03_axi_rready);
        p_20_m03_axi_rready->set_sv_netview_offsetfromdp(15184416);
        xsim_sc_channel<0, bool > *p_20_m03_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_20->m03_axi_aclk.bind(*p_20_m03_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_20_m03_axi_aclk);
        xsim_sc_channel<0, bool > *p_20_m03_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_20->m03_axi_aresetn.bind(*p_20_m03_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_20_m03_axi_aresetn);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_20_m04_axi_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_20->m04_axi_awid.bind(*p_20_m04_axi_awid);
        p_20_m04_axi_awid->set_sv_netview_offsetfromdp(15184584);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_20_m04_axi_awaddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_20->m04_axi_awaddr.bind(*p_20_m04_axi_awaddr);
        p_20_m04_axi_awaddr->set_sv_netview_offsetfromdp(15184640);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_20_m04_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_20->m04_axi_awlen.bind(*p_20_m04_axi_awlen);
        p_20_m04_axi_awlen->set_sv_netview_offsetfromdp(15184696);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_20_m04_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_20->m04_axi_awsize.bind(*p_20_m04_axi_awsize);
        p_20_m04_axi_awsize->set_sv_netview_offsetfromdp(15184752);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_20_m04_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_20->m04_axi_awburst.bind(*p_20_m04_axi_awburst);
        p_20_m04_axi_awburst->set_sv_netview_offsetfromdp(15184808);
        xsim_sc_channel<0, bool > *p_20_m04_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_20->m04_axi_awlock.bind(*p_20_m04_axi_awlock);
        p_20_m04_axi_awlock->set_sv_netview_offsetfromdp(15184864);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_20_m04_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_20->m04_axi_awcache.bind(*p_20_m04_axi_awcache);
        p_20_m04_axi_awcache->set_sv_netview_offsetfromdp(15184920);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_20_m04_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_20->m04_axi_awprot.bind(*p_20_m04_axi_awprot);
        p_20_m04_axi_awprot->set_sv_netview_offsetfromdp(15184976);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_20_m04_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_20->m04_axi_awqos.bind(*p_20_m04_axi_awqos);
        p_20_m04_axi_awqos->set_sv_netview_offsetfromdp(15185032);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_20_m04_axi_awuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_20->m04_axi_awuser.bind(*p_20_m04_axi_awuser);
        p_20_m04_axi_awuser->set_sv_netview_offsetfromdp(15185088);
        xsim_sc_channel<0, bool > *p_20_m04_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_20->m04_axi_awvalid.bind(*p_20_m04_axi_awvalid);
        p_20_m04_axi_awvalid->set_sv_netview_offsetfromdp(15185144);
        xsim_sc_channel<0, bool > *p_20_m04_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_20->m04_axi_awready.bind(*p_20_m04_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_20_m04_axi_awready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_20_m04_axi_wdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_20->m04_axi_wdata.bind(*p_20_m04_axi_wdata);
        p_20_m04_axi_wdata->set_sv_netview_offsetfromdp(15185256);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_20_m04_axi_wstrb = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_20->m04_axi_wstrb.bind(*p_20_m04_axi_wstrb);
        p_20_m04_axi_wstrb->set_sv_netview_offsetfromdp(15185312);
        xsim_sc_channel<0, bool > *p_20_m04_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_20->m04_axi_wlast.bind(*p_20_m04_axi_wlast);
        p_20_m04_axi_wlast->set_sv_netview_offsetfromdp(15185368);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_20_m04_axi_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_20->m04_axi_wuser.bind(*p_20_m04_axi_wuser);
        p_20_m04_axi_wuser->set_sv_netview_offsetfromdp(15185424);
        xsim_sc_channel<0, bool > *p_20_m04_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_20->m04_axi_wvalid.bind(*p_20_m04_axi_wvalid);
        p_20_m04_axi_wvalid->set_sv_netview_offsetfromdp(15185480);
        xsim_sc_channel<0, bool > *p_20_m04_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_20->m04_axi_wready.bind(*p_20_m04_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_20_m04_axi_wready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_20_m04_axi_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_20->m04_axi_bid.bind(*p_20_m04_axi_bid);
        (*_glb_hdl_sc_channel_map).push_back(p_20_m04_axi_bid);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_20_m04_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_20->m04_axi_bresp.bind(*p_20_m04_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_20_m04_axi_bresp);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_20_m04_axi_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_20->m04_axi_buser.bind(*p_20_m04_axi_buser);
        (*_glb_hdl_sc_channel_map).push_back(p_20_m04_axi_buser);
        xsim_sc_channel<0, bool > *p_20_m04_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_20->m04_axi_bvalid.bind(*p_20_m04_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_20_m04_axi_bvalid);
        xsim_sc_channel<0, bool > *p_20_m04_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_20->m04_axi_bready.bind(*p_20_m04_axi_bready);
        p_20_m04_axi_bready->set_sv_netview_offsetfromdp(15185816);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_20_m04_axi_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_20->m04_axi_arid.bind(*p_20_m04_axi_arid);
        p_20_m04_axi_arid->set_sv_netview_offsetfromdp(15185872);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_20_m04_axi_araddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_20->m04_axi_araddr.bind(*p_20_m04_axi_araddr);
        p_20_m04_axi_araddr->set_sv_netview_offsetfromdp(15185928);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_20_m04_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_20->m04_axi_arlen.bind(*p_20_m04_axi_arlen);
        p_20_m04_axi_arlen->set_sv_netview_offsetfromdp(15185984);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_20_m04_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_20->m04_axi_arsize.bind(*p_20_m04_axi_arsize);
        p_20_m04_axi_arsize->set_sv_netview_offsetfromdp(15186040);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_20_m04_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_20->m04_axi_arburst.bind(*p_20_m04_axi_arburst);
        p_20_m04_axi_arburst->set_sv_netview_offsetfromdp(15186096);
        xsim_sc_channel<0, bool > *p_20_m04_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_20->m04_axi_arlock.bind(*p_20_m04_axi_arlock);
        p_20_m04_axi_arlock->set_sv_netview_offsetfromdp(15186152);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_20_m04_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_20->m04_axi_arcache.bind(*p_20_m04_axi_arcache);
        p_20_m04_axi_arcache->set_sv_netview_offsetfromdp(15186208);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_20_m04_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_20->m04_axi_arprot.bind(*p_20_m04_axi_arprot);
        p_20_m04_axi_arprot->set_sv_netview_offsetfromdp(15186264);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_20_m04_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_20->m04_axi_arqos.bind(*p_20_m04_axi_arqos);
        p_20_m04_axi_arqos->set_sv_netview_offsetfromdp(15186320);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_20_m04_axi_aruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_20->m04_axi_aruser.bind(*p_20_m04_axi_aruser);
        p_20_m04_axi_aruser->set_sv_netview_offsetfromdp(15186376);
        xsim_sc_channel<0, bool > *p_20_m04_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_20->m04_axi_arvalid.bind(*p_20_m04_axi_arvalid);
        p_20_m04_axi_arvalid->set_sv_netview_offsetfromdp(15186432);
        xsim_sc_channel<0, bool > *p_20_m04_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_20->m04_axi_arready.bind(*p_20_m04_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_20_m04_axi_arready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_20_m04_axi_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_20->m04_axi_rid.bind(*p_20_m04_axi_rid);
        (*_glb_hdl_sc_channel_map).push_back(p_20_m04_axi_rid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_20_m04_axi_rdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_20->m04_axi_rdata.bind(*p_20_m04_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_20_m04_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_20_m04_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_20->m04_axi_rresp.bind(*p_20_m04_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_20_m04_axi_rresp);
        xsim_sc_channel<0, bool > *p_20_m04_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_20->m04_axi_rlast.bind(*p_20_m04_axi_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_20_m04_axi_rlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_20_m04_axi_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_20->m04_axi_ruser.bind(*p_20_m04_axi_ruser);
        (*_glb_hdl_sc_channel_map).push_back(p_20_m04_axi_ruser);
        xsim_sc_channel<0, bool > *p_20_m04_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_20->m04_axi_rvalid.bind(*p_20_m04_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_20_m04_axi_rvalid);
        xsim_sc_channel<0, bool > *p_20_m04_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_20->m04_axi_rready.bind(*p_20_m04_axi_rready);
        p_20_m04_axi_rready->set_sv_netview_offsetfromdp(15186880);
        xsim_sc_channel<0, bool > *p_20_m04_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_20->m04_axi_aclk.bind(*p_20_m04_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_20_m04_axi_aclk);
        xsim_sc_channel<0, bool > *p_20_m04_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_20->m04_axi_aresetn.bind(*p_20_m04_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_20_m04_axi_aresetn);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_20_m01_axi_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_20->m01_axi_awid.bind(*p_20_m01_axi_awid);
        p_20_m01_axi_awid->set_sv_netview_offsetfromdp(15187048);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_20_m01_axi_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_20->m01_axi_awaddr.bind(*p_20_m01_axi_awaddr);
        p_20_m01_axi_awaddr->set_sv_netview_offsetfromdp(15187104);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_20_m01_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_20->m01_axi_awlen.bind(*p_20_m01_axi_awlen);
        p_20_m01_axi_awlen->set_sv_netview_offsetfromdp(15187160);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_20_m01_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_20->m01_axi_awsize.bind(*p_20_m01_axi_awsize);
        p_20_m01_axi_awsize->set_sv_netview_offsetfromdp(15187216);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_20_m01_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_20->m01_axi_awburst.bind(*p_20_m01_axi_awburst);
        p_20_m01_axi_awburst->set_sv_netview_offsetfromdp(15187272);
        xsim_sc_channel<0, bool > *p_20_m01_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_20->m01_axi_awlock.bind(*p_20_m01_axi_awlock);
        p_20_m01_axi_awlock->set_sv_netview_offsetfromdp(15187328);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_20_m01_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_20->m01_axi_awcache.bind(*p_20_m01_axi_awcache);
        p_20_m01_axi_awcache->set_sv_netview_offsetfromdp(15187384);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_20_m01_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_20->m01_axi_awprot.bind(*p_20_m01_axi_awprot);
        p_20_m01_axi_awprot->set_sv_netview_offsetfromdp(15187440);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_20_m01_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_20->m01_axi_awqos.bind(*p_20_m01_axi_awqos);
        p_20_m01_axi_awqos->set_sv_netview_offsetfromdp(15187496);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_20_m01_axi_awuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_20->m01_axi_awuser.bind(*p_20_m01_axi_awuser);
        p_20_m01_axi_awuser->set_sv_netview_offsetfromdp(15187552);
        xsim_sc_channel<0, bool > *p_20_m01_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_20->m01_axi_awvalid.bind(*p_20_m01_axi_awvalid);
        p_20_m01_axi_awvalid->set_sv_netview_offsetfromdp(15187608);
        xsim_sc_channel<0, bool > *p_20_m01_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_20->m01_axi_awready.bind(*p_20_m01_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_20_m01_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_20_m01_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_20->m01_axi_wdata.bind(*p_20_m01_axi_wdata);
        p_20_m01_axi_wdata->set_sv_netview_offsetfromdp(15187720);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_20_m01_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_20->m01_axi_wstrb.bind(*p_20_m01_axi_wstrb);
        p_20_m01_axi_wstrb->set_sv_netview_offsetfromdp(15187776);
        xsim_sc_channel<0, bool > *p_20_m01_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_20->m01_axi_wlast.bind(*p_20_m01_axi_wlast);
        p_20_m01_axi_wlast->set_sv_netview_offsetfromdp(15187832);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_20_m01_axi_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_20->m01_axi_wuser.bind(*p_20_m01_axi_wuser);
        p_20_m01_axi_wuser->set_sv_netview_offsetfromdp(15187888);
        xsim_sc_channel<0, bool > *p_20_m01_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_20->m01_axi_wvalid.bind(*p_20_m01_axi_wvalid);
        p_20_m01_axi_wvalid->set_sv_netview_offsetfromdp(15187944);
        xsim_sc_channel<0, bool > *p_20_m01_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_20->m01_axi_wready.bind(*p_20_m01_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_20_m01_axi_wready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_20_m01_axi_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_20->m01_axi_bid.bind(*p_20_m01_axi_bid);
        (*_glb_hdl_sc_channel_map).push_back(p_20_m01_axi_bid);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_20_m01_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_20->m01_axi_bresp.bind(*p_20_m01_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_20_m01_axi_bresp);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_20_m01_axi_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_20->m01_axi_buser.bind(*p_20_m01_axi_buser);
        (*_glb_hdl_sc_channel_map).push_back(p_20_m01_axi_buser);
        xsim_sc_channel<0, bool > *p_20_m01_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_20->m01_axi_bvalid.bind(*p_20_m01_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_20_m01_axi_bvalid);
        xsim_sc_channel<0, bool > *p_20_m01_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_20->m01_axi_bready.bind(*p_20_m01_axi_bready);
        p_20_m01_axi_bready->set_sv_netview_offsetfromdp(15188280);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_20_m01_axi_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_20->m01_axi_arid.bind(*p_20_m01_axi_arid);
        p_20_m01_axi_arid->set_sv_netview_offsetfromdp(15188336);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_20_m01_axi_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_20->m01_axi_araddr.bind(*p_20_m01_axi_araddr);
        p_20_m01_axi_araddr->set_sv_netview_offsetfromdp(15188392);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_20_m01_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_20->m01_axi_arlen.bind(*p_20_m01_axi_arlen);
        p_20_m01_axi_arlen->set_sv_netview_offsetfromdp(15188448);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_20_m01_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_20->m01_axi_arsize.bind(*p_20_m01_axi_arsize);
        p_20_m01_axi_arsize->set_sv_netview_offsetfromdp(15188504);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_20_m01_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_20->m01_axi_arburst.bind(*p_20_m01_axi_arburst);
        p_20_m01_axi_arburst->set_sv_netview_offsetfromdp(15188560);
        xsim_sc_channel<0, bool > *p_20_m01_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_20->m01_axi_arlock.bind(*p_20_m01_axi_arlock);
        p_20_m01_axi_arlock->set_sv_netview_offsetfromdp(15188616);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_20_m01_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_20->m01_axi_arcache.bind(*p_20_m01_axi_arcache);
        p_20_m01_axi_arcache->set_sv_netview_offsetfromdp(15188672);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_20_m01_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_20->m01_axi_arprot.bind(*p_20_m01_axi_arprot);
        p_20_m01_axi_arprot->set_sv_netview_offsetfromdp(15188728);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_20_m01_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_20->m01_axi_arqos.bind(*p_20_m01_axi_arqos);
        p_20_m01_axi_arqos->set_sv_netview_offsetfromdp(15188784);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_20_m01_axi_aruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_20->m01_axi_aruser.bind(*p_20_m01_axi_aruser);
        p_20_m01_axi_aruser->set_sv_netview_offsetfromdp(15188840);
        xsim_sc_channel<0, bool > *p_20_m01_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_20->m01_axi_arvalid.bind(*p_20_m01_axi_arvalid);
        p_20_m01_axi_arvalid->set_sv_netview_offsetfromdp(15188896);
        xsim_sc_channel<0, bool > *p_20_m01_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_20->m01_axi_arready.bind(*p_20_m01_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_20_m01_axi_arready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_20_m01_axi_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_20->m01_axi_rid.bind(*p_20_m01_axi_rid);
        (*_glb_hdl_sc_channel_map).push_back(p_20_m01_axi_rid);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_20_m01_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_20->m01_axi_rdata.bind(*p_20_m01_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_20_m01_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_20_m01_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_20->m01_axi_rresp.bind(*p_20_m01_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_20_m01_axi_rresp);
        xsim_sc_channel<0, bool > *p_20_m01_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_20->m01_axi_rlast.bind(*p_20_m01_axi_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_20_m01_axi_rlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_20_m01_axi_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_20->m01_axi_ruser.bind(*p_20_m01_axi_ruser);
        (*_glb_hdl_sc_channel_map).push_back(p_20_m01_axi_ruser);
        xsim_sc_channel<0, bool > *p_20_m01_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_20->m01_axi_rvalid.bind(*p_20_m01_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_20_m01_axi_rvalid);
        xsim_sc_channel<0, bool > *p_20_m01_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_20->m01_axi_rready.bind(*p_20_m01_axi_rready);
        p_20_m01_axi_rready->set_sv_netview_offsetfromdp(15189344);
        xsim_sc_channel<0, bool > *p_20_m01_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_20->m01_axi_aclk.bind(*p_20_m01_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_20_m01_axi_aclk);
        xsim_sc_channel<0, bool > *p_20_m01_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_20->m01_axi_aresetn.bind(*p_20_m01_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_20_m01_axi_aresetn);
    }


extern "C"
    void implicit_HDL_SCcleanup()
    {
        delete sc_inst_1;
        delete sc_inst_2;
        delete sc_inst_3;
        delete sc_inst_4;
        delete sc_inst_5;
        delete sc_inst_6;
        delete sc_inst_7;
        delete sc_inst_8;
        delete sc_inst_9;
        delete sc_inst_10;
        delete sc_inst_11;
        delete sc_inst_12;
        delete sc_inst_13;
        delete sc_inst_14;
        delete sc_inst_15;
        delete sc_inst_16;
        delete sc_inst_17;
        delete sc_inst_18;
        delete sc_inst_19;
        delete sc_inst_20;
    }
